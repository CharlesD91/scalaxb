// Generated by <a href="http://scalaxb.org/">scalaxb</a>.
package generated2


case class Instance_IDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val parent_id = attributes.get("@parent_id") map { _.as[String]}
  lazy val parent_type = attributes.get("@parent_type") map { _.as[String]}
  lazy val typeValue = attributes.get("@type") map { _.as[String]}
}

      


/** 
*/
case class InstanceObjectType(ID: Seq[generated2.Instance_IDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


case class Workday_Common_HeaderType(Include_Reference_Descriptors_In_Response: Option[Boolean] = None)
      


/** Country ISO code. If the Country ISO code is specified, then this ISO code will be used to determine the Country Phone Code for (eliminate space between f and o) the phone. Pass this ISO code to distinguish between multiple countries sharing the same Country Phone Code. (For example, 1 is the Country Phone Code that is shared by USA, Canada, Dominican Republic, Bermuda, Jamaica, and Puerto Rico.)
*/
case class Country_ReferenceType(Country_ISO_Code: String)
      


/** Reference element representing a unique instance of Employee.
*/
case class Employee_ReferenceType(Integration_ID_Reference: generated2.External_Integration_ID_Reference_DataType) extends Worker_ReferenceTypeOption
      


/** Reference element representing a unique instance of Contingent Worker.
*/
case class Contingent_Worker_Reference_DataType(Integration_ID_Reference: generated2.External_Integration_ID_Reference_DataType) extends Worker_ReferenceTypeOption
      


/** Integration ID reference is used as a unique identifier for integratable objects in the Workday system.
*/
case class External_Integration_ID_Reference_DataType(ID: generated2.IDType,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** Encapsulating element for all of the name data such as first and last name
*/
case class Name_DataType(Country_Reference: generated2.Country_ReferenceType,
  Additional_Name_Type: Option[String] = None,
  Prefix: Seq[generated2.Prefix_Name_DataType] = Nil,
  First_Name: Option[String] = None,
  Middle_Name: Option[String] = None,
  Last_Name: Seq[generated2.Last_Name_DataType] = Nil,
  Local_Name_Data: Option[generated2.Local_Name_DataType] = None,
  Suffix: Seq[generated2.Suffix_Name_DataType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Is_Legal = attributes.get("@Is_Legal") map { _.as[Boolean]}
  lazy val Is_Preferred = attributes.get("@Is_Preferred") map { _.as[Boolean]}
  lazy val Effective_Date = attributes.get("@Effective_Date") map { _.as[javax.xml.datatype.XMLGregorianCalendar]}
  lazy val Last_Modified = attributes.get("@Last_Modified") map { _.as[javax.xml.datatype.XMLGregorianCalendar]}
}

      


/** External ID that uniquely identifies the integratable object within the context of the integration system identified by the System ID attribute.
*/
case class IDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val System_ID = attributes.get("@System_ID") map { _.as[String]}
}

      


/** Reference element representing a unique instance of Worker (e.g. Employee or Contingent Worker).
*/
case class Worker_ReferenceType(worker_referencetypeoption: scalaxb.DataRecord[generated2.Worker_ReferenceTypeOption])
      

trait Worker_ReferenceTypeOption

/** This element references a unique type of Currency.
*/
case class Currency_Reference_DataType(Currency_Code: String)
      


/** Receiving Party Bank Data
*/
case class Receiving_Party_Bank_DataType(Bank_Account_Nickname: Option[String] = None,
  Account_Number: Option[String] = None,
  Masked_Account_Number: Option[String] = None,
  Account_Type: Option[String] = None,
  Bank_Name: Option[String] = None,
  IBAN: Option[String] = None,
  Bank_ID_Number: Option[String] = None,
  BIC: Option[String] = None,
  Branch_Name: Option[String] = None,
  Branch_ID_Number: Option[String] = None,
  Country_Reference: Option[generated2.CountryObjectType] = None,
  Currency_Reference: Option[generated2.InstanceObjectType] = None,
  Bank_Account_Name: Option[String] = None,
  Check_Digit: Option[String] = None,
  Roll_Number: Option[String] = None,
  Bank_Instructions: Option[String] = None,
  Intermediary_Bank_Data: Seq[generated2.Intermediary_Bank_Account_WWS_DataType] = Nil)
      


/** Encapsulating element for all Communication Method Usage data.
*/
case class Communication_Method_Usage_DataType(Type_Reference: Seq[generated2.Communication_Usage_Type_ReferenceType] = Nil,
  Use_For_Reference: Seq[String] = Nil,
  Comments: Option[String] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Public = attributes.get("@Public") map { _.as[Boolean]}
}

      


/** Reference element representing a unique instance of Communication Usage Type.
*/
case class Communication_Usage_Type_ReferenceType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Primary = attributes.get("@Primary") map { _.as[Boolean]}
}

      


/** Encapsulating element for all Last Name data.
*/
case class Last_Name_DataType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Type = attributes.get("@Type") map { _.as[String]}
}

      


/** Encapsulating element for all Prefix Name data.
*/
case class Prefix_Name_DataType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Type = attributes.get("@Type") map { _.as[String]}
}

      


/** Encapsulating element for all Suffix Name data.
*/
case class Suffix_Name_DataType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Type = attributes.get("@Type") map { _.as[String]}
}

      


/** Payroll Marital Status Reference
*/
case class Payroll_Marital_Status_ReferenceType(Payroll_Marital_Status_Reference: Option[String] = None)
      


/** Payroll Payee FUTA Data
*/
case class Payroll_Payee_FUTA_DataType(Worker_Reference: generated2.WorkerObjectType,
  Company_Reference: generated2.CompanyObjectType,
  Effective_As_Of: javax.xml.datatype.XMLGregorianCalendar,
  Exempt_Indicator: Option[Boolean] = None)
      


/** This is a name uniquely identifying an earning already established in the Workday Payroll system.
*/
case class Earning_ReferenceType(Code: String) extends Pay_Component_ReferenceTypeOption
      


/** This is a name uniquely identifying a deduction already established in the Workday Payroll system.
*/
case class Deduction_ReferenceType(Code: String) extends Pay_Component_ReferenceTypeOption
      


/** Pay Component Reference
*/
case class Pay_Component_ReferenceType(pay_component_referencetypeoption: scalaxb.DataRecord[generated2.Pay_Component_ReferenceTypeOption])
      

trait Pay_Component_ReferenceTypeOption

/** Support Order Dependent Data
*/
case class Support_Order_Dependent_DataType(Child_s_Name__Last__First__MIu93: String,
  Child_s_Birth_Date: javax.xml.datatype.XMLGregorianCalendar)
      


/** Withholding Order Fee Data
*/
case class Withholding_Order_Fee_DataType(Fee_Amount: BigDecimal,
  Fee_Type_Reference: generated2.Withholding_Order_Fee_TypeObjectType,
  Deduction_Recipient_Reference: Option[generated2.Deduction_RecipientObjectType] = None,
  Override_Fee_Schedule: Option[Boolean] = None,
  Begin_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  End_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None)
      


/** Parameters that let you filter the data returned in the response. You can filter returned data by dates and page attributes.
*/
case class Response_FilterType(As_Of_Effective_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  As_Of_Entry_DateTime: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Page: Option[BigDecimal] = None,
  Count: Option[BigDecimal] = None)
      


/** The "Response_Results" element contains summary information about the data that has been returned from your request including "Total_Results", "Total_Pages", and the current "Page" returned.
*/
case class Response_ResultsType(Total_Results: Option[BigDecimal] = None,
  Total_Pages: Option[BigDecimal] = None,
  Page_Results: Option[BigDecimal] = None,
  Page: Option[BigDecimal] = None)
      


/** Federal Tax Levy Specific Data
*/
case class Federal_Tax_Levy_Dependent_ReferenceType(Dependent_Name: Option[String] = None,
  Dependent_Identification_Number: Option[String] = None)
      


/** This Element contains Worker Tax Elections data.
*/
case class Worker_Tax_ElectionsType(Number_of_Allowances: Option[BigDecimal] = None,
  Marital_Status: Option[String] = None,
  Exempted: Option[Boolean] = None)
      


/** Captures a comment for the Business Process.
*/
case class Business_Process_Comment_DataType(Comment: Option[String] = None,
  Worker_Reference: Option[generated2.WorkerObjectType] = None)
      


/** Container for the processing options for a business process. If no options are submitted (or the options are submitted as 'false') then the business process is simply initiated as if it where submitted on-line with approvals, reviews, notifications and to-do's in place. If the Initiator is an Integration System User, any validations you configured on the Initiation step are ignored.
*/
case class Business_Process_ParametersType(Auto_Complete: Option[Boolean] = None,
  Run_Now: Option[Boolean] = None,
  Comment_Data: Option[generated2.Business_Process_Comment_DataType] = None,
  Business_Process_Attachment_Data: Seq[generated2.Business_Process_Attachment_DataType] = Nil)
      


/** All of the person's contact data (address, phone, email, instant messenger, web address).
*/
case class Contact_Information_DataType(Address_Data: Seq[generated2.Address_Information_DataType] = Nil,
  Phone_Data: Seq[generated2.Phone_Information_DataType] = Nil,
  Email_Address_Data: Seq[generated2.Email_Address_Information_DataType] = Nil,
  Instant_Messenger_Data: Seq[generated2.Instant_Messenger_Information_DataType] = Nil,
  Web_Address_Data: Seq[generated2.Web_Address_Information_DataType] = Nil)
      


/** Address information
*/
case class Address_Information_DataType(Country_Reference: Option[generated2.CountryObjectType] = None,
  Last_Modified: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Address_Line_Data: Seq[generated2.Address_Line_Information_DataType] = Nil,
  Municipality: Option[String] = None,
  Country_City_Reference: Option[generated2.Country_CityObjectType] = None,
  Submunicipality_Data: Seq[generated2.Submunicipality_Information_DataType] = Nil,
  Country_Region_Reference: Option[generated2.Country_RegionObjectType] = None,
  Country_Region_Descriptor: Option[String] = None,
  Subregion_Data: Seq[generated2.Subregion_Information_DataType] = Nil,
  Postal_Code: Option[String] = None,
  Usage_Data: Seq[generated2.Communication_Method_Usage_Information_DataType] = Nil,
  Number_of_Days: Option[BigDecimal] = None,
  Municipality_Local: Option[String] = None,
  Address_Reference: Option[generated2.Address_ReferenceObjectType] = None,
  Address_ID: Option[String] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Formatted_Address = attributes.get("@Formatted_Address") map { _.as[String]}
  lazy val Address_Format_Type = attributes.get("@Address_Format_Type") map { _.as[String]}
  lazy val Defaulted_Business_Site_Address = attributes.get("@Defaulted_Business_Site_Address") map { _.as[Boolean]}
  lazy val Delete = attributes.get("@Delete") map { _.as[Boolean]}
  lazy val Do_Not_Replace_All = attributes.get("@Do_Not_Replace_All") map { _.as[Boolean]}
  lazy val Effective_Date = attributes.get("@Effective_Date") map { _.as[javax.xml.datatype.XMLGregorianCalendar]}
}

      


/** Phone Information
*/
case class Phone_Information_DataType(Country_ISO_Code: Option[String] = None,
  International_Phone_Code: Option[String] = None,
  Phone_Number: Option[String] = None,
  Phone_Extension: Option[String] = None,
  Phone_Device_Type_Reference: Option[generated2.Phone_Device_TypeObjectType] = None,
  Usage_Data: Seq[generated2.Communication_Method_Usage_Information_DataType] = Nil,
  Phone_Reference: Option[generated2.Phone_ReferenceObjectType] = None,
  ID: Option[String] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Area_Code = attributes.get("@Area_Code") map { _.as[String]}
  lazy val Tenant_Formatted_Phone = attributes.get("@Tenant_Formatted_Phone") map { _.as[String]}
  lazy val International_Formatted_Phone = attributes.get("@International_Formatted_Phone") map { _.as[String]}
  lazy val Delete = attributes.get("@Delete") map { _.as[Boolean]}
  lazy val Do_Not_Replace_All = attributes.get("@Do_Not_Replace_All") map { _.as[Boolean]}
}

      


/** Email Address Information
*/
case class Email_Address_Information_DataType(Email_Address: Option[String] = None,
  Email_Comment: Option[String] = None,
  Usage_Data: Seq[generated2.Communication_Method_Usage_Information_DataType] = Nil,
  Email_Reference: Option[generated2.Email_ReferenceObjectType] = None,
  ID: Option[String] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Delete = attributes.get("@Delete") map { _.as[Boolean]}
  lazy val Do_Not_Replace_All = attributes.get("@Do_Not_Replace_All") map { _.as[Boolean]}
}

      


/** Instant Messenger Address.
*/
case class Instant_Messenger_Information_DataType(Instant_Messenger_Address: Option[String] = None,
  Instant_Messenger_Type_Reference: Option[generated2.Instant_Messenger_TypeObjectType] = None,
  Instant_Messenger_Comment: Option[String] = None,
  Usage_Data: Seq[generated2.Communication_Method_Usage_Information_DataType] = Nil,
  Instant_Messenger_Reference: Option[generated2.Instant_Messenger_ReferenceObjectType] = None,
  ID: Option[String] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Delete = attributes.get("@Delete") map { _.as[Boolean]}
  lazy val Do_Not_Replace_All = attributes.get("@Do_Not_Replace_All") map { _.as[Boolean]}
}

      


/** Web Address Information
*/
case class Web_Address_Information_DataType(Web_Address: Option[String] = None,
  Web_Address_Comment: Option[String] = None,
  Usage_Data: Seq[generated2.Communication_Method_Usage_Information_DataType] = Nil,
  Web_Address_Reference: Option[generated2.Web_Address_ReferenceObjectType] = None,
  ID: Option[String] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Delete = attributes.get("@Delete") map { _.as[Boolean]}
  lazy val Do_Not_Replace_All = attributes.get("@Do_Not_Replace_All") map { _.as[Boolean]}
}

      


/** The address line for the address. This typically contains Street name, street number, apartment, suite number.
*/
case class Address_Line_Information_DataType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
  lazy val Type = attributes.get("@Type") map { _.as[String]}
}

      


/** The submunicipality of the address.
*/
case class Submunicipality_Information_DataType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Address_Component_Name = attributes.get("@Address_Component_Name") map { _.as[String]}
  lazy val Type = attributes.get("@Type") map { _.as[String]}
}

      


/** The subregion part of the address.
*/
case class Subregion_Information_DataType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
  lazy val Type = attributes.get("@Type") map { _.as[String]}
}

      


/** Encapsulating element for all Communication Method Usage data.
*/
case class Communication_Method_Usage_Information_DataType(Type_Data: Seq[generated2.Communication_Usage_Type_DataType] = Nil,
  Use_For_Reference: Seq[generated2.Communication_Usage_BehaviorObjectType] = Nil,
  Use_For_Tenanted_Reference: Seq[generated2.Communication_Usage_Behavior_TenantedObjectType] = Nil,
  Comments: Option[String] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Public = attributes.get("@Public") map { _.as[Boolean]}
}

      


/** Reference ID for the communication usage type.
*/
case class Communication_Usage_Type_DataType(Type_Reference: generated2.Communication_Usage_TypeObjectType,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Primary = attributes.get("@Primary") map { _.as[Boolean]}
}

      


/** Wrapper for National Identifier Data.
*/
case class National_ID_DataType(ID: Option[String] = None,
  ID_Type_Reference: Option[generated2.National_ID_TypeObjectType] = None,
  Country_Reference: Option[generated2.CountryObjectType] = None,
  Issued_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Expiration_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Verification_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Series: Option[String] = None,
  Issuing_Agency: Option[String] = None,
  Verified_By_Reference: Option[generated2.WorkerObjectType] = None)
      


/** Set of referenceis to workers paycheck delivery methods.
*/
case class Paycheck_Delivery_Request_ReferencesType(Paycheck_Delivery_Reference: Seq[generated2.Paycheck_DeliveryObjectType] = Nil) extends Get_Paycheck_Deliveries_RequestTypeOption
      


/** Used to return a selected set of Workers Pay Check Delivery records
*/
case class Paycheck_Delivery_Request_CriteriaType() extends Get_Paycheck_Deliveries_RequestTypeOption
      


/** Response Group Data
*/
case class Paycheck_Delivery_Response_GroupType(Include_Reference: Option[Boolean] = None)
      


/** Delivery Response Data
*/
case class Paycheck_DeliveryType(Paycheck_Delivery_Reference: Option[generated2.Paycheck_DeliveryObjectType] = None,
  Paycheck_Delivery_Data: Seq[generated2.Paycheck_Delivery_DataType] = Nil)
      


/** Complete set of all Response Data returned.
*/
case class Paycheck_Delivery_Response_DataType(Paycheck_Delivery: Seq[generated2.Paycheck_DeliveryType] = Nil)
      


/** An individual workers Paycheck Delivery Method
*/
case class Paycheck_Delivery_DataType(Paycheck_Delivery_ID: Option[String] = None,
  Worker_Reference: generated2.WorkerObjectType,
  Date_Last_Updated: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Paycheck_Delivery_Method_Reference: Option[generated2.Paycheck_Delivery_MethodObjectType] = None,
  Payslip_Printing_Override_Reference: Option[generated2.Payslip_Printing_OverrideObjectType] = None,
  Company_Reference: Option[generated2.CompanyObjectType] = None)
      


/** Bankruptcy Order Specific Data
*/
case class Bankruptcy_Order_Specific_DataType(bankruptcy_order_specific_datatypeoption: scalaxb.DataRecord[Boolean]) extends Payroll_Involuntary_Withholding_Order_DataTypeOption3
      

trait Bankruptcy_Order_Specific_DataTypeOption

/** Creditor Garnishment Specific Data
*/
case class Creditor_Garnishment_Specific_DataType(Creditor_Garnishment_Type_Reference: generated2.Unique_IdentifierObjectType,
  Non_Resident_State_Reference: Option[generated2.Payroll_Tax_AuthorityObjectType] = None,
  Head_of_Household: Option[Boolean] = None,
  Number_of_Dependents: Option[BigDecimal] = None,
  Payroll_Local_County_Authority_FIPS_Code: Option[String] = None,
  Worker_is_Laborer_or_Mechanic: Option[Boolean] = None,
  Good_Cause_Limit_Percent: Option[BigDecimal] = None,
  Weekly_Gross_Wages: Option[BigDecimal] = None,
  Expected_Annual_Earnings: Option[BigDecimal] = None) extends Payroll_Involuntary_Withholding_Order_DataTypeOption3
      


/** Federal Tax Levy Specific Data
*/
case class Federal_Tax_Levy_Specific_DataType(Tax_Levy_Signed_Part_3_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Payroll_Marital_Status_Reference: Seq[generated2.Payroll_Marital_Status_ReferenceType] = Nil,
  Personal_Exemptions: Option[BigDecimal] = None,
  Additional_Exemptions_65_or_Blind: Option[BigDecimal] = None,
  Exemption_Amount_Override: Option[BigDecimal] = None,
  Exemption_Frequency_Reference: Option[generated2.FrequencyObjectType] = None,
  Tax_Levy_Termination_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Federal_Tax_Levy_Dependent_Reference: Seq[generated2.Federal_Tax_Levy_Dependent_ReferenceType] = Nil,
  Lock_Tax_Elections: Option[Boolean] = None,
  Load_Baseline_Restrictions: Option[Boolean] = None) extends Payroll_Involuntary_Withholding_Order_DataTypeOption3
      


/** Wage Assignment Specific Data
*/
case class Wage_Assignment_Specific_DataType(Head_of_Household: Option[Boolean] = None,
  Married: Option[Boolean] = None) extends Payroll_Involuntary_Withholding_Order_DataTypeOption3
      


/** Exception (Errors and Warning) associated with the transaction.
*/
case class Exception_DataType(Classification: Option[String] = None,
  Message: Option[String] = None)
      


/** Payroll Result Request Criteria
*/
case class Payroll_Result_Request_CriteriaType(Start_Date: javax.xml.datatype.XMLGregorianCalendar,
  End_Date: javax.xml.datatype.XMLGregorianCalendar,
  Period_Selection_Date_Reference: generated2.Period_Date_IndicatorObjectType,
  Employee_Reference: Seq[generated2.EmployeeObjectType] = Nil,
  Company_Reference: Seq[generated2.CompanyObjectType] = Nil,
  Pay_Calculation_Criteria: Option[generated2.Pay_Calculations_SelectedType] = None,
  Run_Category_Reference: Seq[generated2.Run_CategoryObjectType] = Nil,
  Pay_Group_Reference: Seq[generated2.Pay_GroupObjectType] = Nil,
  Period_Reference: Seq[generated2.PeriodObjectType] = Nil,
  Settlement_ID_Reference: Seq[generated2.Unique_IdentifierObjectType] = Nil) extends Get_Payroll_Results_RequestTypeOption
      


/** Payroll Result Response Group
*/
case class Payroll_Result_Response_GroupType(Include_Name_Data: Option[Boolean] = None,
  Include_National_ID_Data: Option[Boolean] = None,
  Include_Related_Calculation_Result_Data: Option[Boolean] = None,
  Include_Withholding_Order_Data: Option[Boolean] = None,
  Include_Payroll_Worktag_Data: Option[Boolean] = None,
  Include_QTD_Data: Option[Boolean] = None,
  Include_YTD_Data: Option[Boolean] = None)
      


/** Get Payroll Results Request
*/
case class Get_Payroll_Results_RequestType(get_payroll_results_requesttypeoption: Option[scalaxb.DataRecord[generated2.Get_Payroll_Results_RequestTypeOption]] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Payroll_Result_Response_GroupType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      

trait Get_Payroll_Results_RequestTypeOption

/** Payroll Result
*/
case class Payroll_ResultType(Employee_Reference: Option[generated2.EmployeeObjectType] = None,
  Employee_Name_Data: Option[generated2.Name_Data_for_Get_Payroll_ResultsType] = None,
  National_ID_Data: Option[generated2.National_ID_Data_for_Get_Payroll_ResultsType] = None,
  Company_Reference: Option[generated2.CompanyObjectType] = None,
  Payroll_ID_Reference: Option[generated2.Payroll_IDObjectType] = None,
  Payroll_Account_Number: Option[String] = None,
  Establishment_Reference: Option[generated2.EstablishmentObjectType] = None,
  Pay_Group_Reference: Option[generated2.Pay_Group_DetailObjectType] = None,
  Run_Category_Reference: Option[generated2.Run_CategoryObjectType] = None,
  Pay_Period_Frequency: Option[BigDecimal] = None,
  Offu45cycle_Type_Reference: Option[generated2.Payroll_Offu45cycle_TypeObjectType] = None,
  For_Additional_Pay: Option[Boolean] = None,
  Result_Completed_Date_Time: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Period_Reference: Option[generated2.PeriodObjectType] = None,
  Period_Start_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Period_End_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Subperiod_Start_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Subperiod_End_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Payment_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Gross_Amount: Option[BigDecimal] = None,
  Net_Amount: Option[BigDecimal] = None,
  Currency_Reference: Option[generated2.Currency_Reference_DataType] = None,
  Payroll_Result_Data: Seq[generated2.Result_Line_Details_for_Get_Payroll_ResultsType] = Nil,
  Pay_Accumulation_Data: Seq[generated2.Pay_Accumulation_Data_for_Get_Payroll_ResultsType] = Nil,
  Payment_Date_of_Original_Payroll_Result: Option[javax.xml.datatype.XMLGregorianCalendar] = None)
      


/** Payroll Result Response Data
*/
case class Payroll_Result_Response_DataType(Payroll_Result: Seq[generated2.Payroll_ResultType] = Nil)
      


/** Get Payroll Results Response
*/
case class Get_Payroll_Results_ResponseType(Request_References: Option[generated2.Payroll_Result_Request_ReferencesType] = None,
  Request_Criteria: Option[generated2.Payroll_Result_Request_CriteriaType] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Payroll_Result_Response_GroupType] = None,
  Response_Results: Option[generated2.Response_ResultsType] = None,
  Response_Data: Option[generated2.Payroll_Result_Response_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Result Line Details for Get Payroll Results
*/
case class Result_Line_Details_for_Get_Payroll_ResultsType(Pay_Component_Reference: Seq[generated2.Pay_Component_ReferenceType] = Nil,
  Pay_Component_Frequency: Option[BigDecimal] = None,
  Periods_Remaining_In_Calendar_Year: Option[BigDecimal] = None,
  Subperiod_Start_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Subperiod_End_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Payroll_Worktag_Data: Option[generated2.Payroll_Worktag_DataType] = None,
  Result_Line_Amount: Option[BigDecimal] = None,
  Result_Line_QTD_Amount: Option[BigDecimal] = None,
  Result_Line_YTD_Amount: Option[BigDecimal] = None,
  Result_Line_Arrears_Amount: Option[BigDecimal] = None,
  Related_Calculation_Result_Data: Seq[generated2.Related_Calculation_Data_for_Get_Payroll_ResultsType] = Nil,
  Withholding_Order_Data: Option[generated2.Withholding_Order_Data_for_Get_Payroll_ResultsType] = None,
  Payroll_Input_Comment: Option[String] = None)
      


/** Related Calculation Data for Get Payroll Results
*/
case class Related_Calculation_Data_for_Get_Payroll_ResultsType(Related_Calculation_Reference: Option[generated2.Related_Calculation__All_ObjectType] = None,
  Related_Amount_Value: Option[BigDecimal] = None)
      


/** Withholding Order Data for Get Payroll Results
*/
case class Withholding_Order_Data_for_Get_Payroll_ResultsType(Case_Number: Option[String] = None,
  Withholding_Order_Type: Option[String] = None,
  Order_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Received_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Begin_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  End_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Order_Status: Option[String] = None,
  Order_Priority: Option[BigDecimal] = None,
  Total_Debt_Amount: Option[BigDecimal] = None,
  Pay_Period_Amount_Type_Reference: Option[generated2.Withholding_Order_Amount_TypeObjectType] = None,
  withholding_order_data_for_get_payroll_resultstypeoption: Option[scalaxb.DataRecord[Any]] = None,
  Pay_Period_Frequency_Reference: Option[generated2.FrequencyObjectType] = None,
  Payroll_Tax_Authority_Reference: Option[generated2.Payroll_Tax_AuthorityObjectType] = None,
  Deduction_Recipient_Reference: Option[generated2.Deduction_RecipientObjectType] = None,
  Deduction_Recipient_Instant_Messenger_Reference: Seq[generated2.Unique_IdentifierObjectType] = Nil,
  Deduction_Recipient_Bank_Account_Reference: Option[generated2.Settlement_Bank_AccountObjectType] = None,
  Originating_Entity: Option[String] = None,
  Memo: Option[String] = None,
  Deduction_Recipient_Address_Data: Seq[generated2.Address_Information_DataType] = Nil)
      

trait Withholding_Order_Data_for_Get_Payroll_ResultsTypeOption

/** Payroll Worktag Data
*/
case class Payroll_Worktag_DataType(Company_Worktag_Reference: Seq[generated2.CompanyObjectType] = Nil,
  Location_Worktag_Reference: Seq[generated2.LocationObjectType] = Nil,
  Region_Worktag_Reference: Seq[generated2.RegionObjectType] = Nil,
  Job_Profile_Worktag_Reference: Seq[generated2.Job_ProfileObjectType] = Nil,
  Cost_Center_Worktag_Reference: Seq[generated2.Cost_CenterObjectType] = Nil,
  Project_Worktag_Reference: Seq[generated2.ProjectObjectType] = Nil,
  Withholding_Order_Worktag_Reference: Seq[generated2.Withholding_Order_CaseObjectType] = Nil,
  Payroll_State_Authority_Worktag_Reference: Seq[generated2.Payroll_State_AuthorityObjectType] = Nil,
  Workers_Compensation_Code_Reference: Option[generated2.Workers_Compensation_CodeObjectType] = None,
  Payroll_Local_County_Authority_Worktag_Reference: Seq[generated2.Payroll_Local_County_AuthorityObjectType] = Nil,
  Payroll_Local_City_Authority_Worktag_Reference: Seq[generated2.Payroll_Local_City_AuthorityObjectType] = Nil,
  Payroll_Local_School_District_Worktag_Reference: Seq[generated2.Payroll_Local_School_District_AuthorityObjectType] = Nil,
  Payroll_Local_Other_Worktag_Reference: Seq[generated2.Payroll_Other_AuthorityObjectType] = Nil,
  Custom_Worktag_1_Reference: Seq[generated2.Custom_Worktag_01ObjectType] = Nil,
  Custom_Worktag_2_Reference: Seq[generated2.Custom_Worktag_02ObjectType] = Nil,
  Custom_Worktag_3_Reference: Seq[generated2.Custom_Worktag_03ObjectType] = Nil,
  Custom_Worktag_4_Reference: Seq[generated2.Custom_Worktag_04ObjectType] = Nil,
  Custom_Worktag_5_Reference: Seq[generated2.Custom_Worktag_05ObjectType] = Nil,
  Fund_Worktag_Reference: Option[generated2.FundObjectType] = None,
  Grant_Worktag_Reference: Option[generated2.GrantObjectType] = None,
  Gift_Worktag_Reference: Option[generated2.GiftObjectType] = None,
  Program_Worktag_Reference: Option[generated2.ProgramObjectType] = None,
  Business_Unit_Worktag_Reference: Option[generated2.Business_UnitObjectType] = None,
  Object_Class_Worktag_Reference: Option[generated2.Object_ClassObjectType] = None,
  Project_Phase_Worktag_Reference: Option[generated2.Project_Plan_PhaseObjectType] = None,
  Project_Task_Worktag_Reference: Option[generated2.Project_Plan_TaskObjectType] = None,
  Custom_Organization_Worktag_Data: Seq[generated2.Custom_Organization_Worktag_DataType] = Nil,
  Custom_Worktag_06_Reference: Option[generated2.Custom_Worktag_06ObjectType] = None,
  Custom_Worktag_07_Reference: Option[generated2.Custom_Worktag_07ObjectType] = None,
  Custom_Worktag_08_Reference: Option[generated2.Custom_Worktag_08ObjectType] = None,
  Custom_Worktag_09_Reference: Option[generated2.Custom_Worktag_09ObjectType] = None,
  Custom_Worktag_10_Reference: Option[generated2.Custom_Worktag_10ObjectType] = None,
  Custom_Worktag_11_Reference: Option[generated2.Custom_Worktag_11ObjectType] = None,
  Custom_Worktag_12_Reference: Option[generated2.Custom_Worktag_12ObjectType] = None,
  Custom_Worktag_13_Reference: Option[generated2.Custom_Worktag_13ObjectType] = None,
  Custom_Worktag_14_Reference: Option[generated2.Custom_Worktag_14ObjectType] = None,
  Custom_Worktag_15_Reference: Option[generated2.Custom_Worktag_15ObjectType] = None,
  NI_Category_Reference: Option[generated2.NI_CategoryObjectType] = None,
  ARRCOu45AGIRC_Category_Reference: Option[generated2.ARRCOu45AGIRC_Rubric_ValueObjectType] = None)
      


/** Business Entity Data Element which is a wrapper for all business entity data of name and contract information
*/
case class Business_Entity_WWS_DataType(Business_Entity_Name: String,
  Business_Entity_Phonetic_Name: Option[String] = None,
  Business_Entity_Tax_ID: Option[String] = None,
  External_Entity_ID: Option[String] = None,
  Contact_Data: Option[generated2.Contact_Information_DataType] = None,
  Business_Entity_Logo_Image_Data: Option[generated2.Business_Entity_Logo_Image_DataType] = None)
      


/** Pay Component Selection
*/
case class Pay_Calculations_SelectedType(Earning_Reference: Seq[generated2.Earning__All_ObjectType] = Nil,
  Deduction_Reference: Seq[generated2.Deduction__All_ObjectType] = Nil,
  Pay_Accumulation_Reference: Seq[generated2.Pay_Accumulation__All_ObjectType] = Nil)
      


/** Payroll Input Request References
*/
case class Payroll_Input_Request_ReferencesType(Payroll_Input_Reference: Seq[generated2.Payroll_InputObjectType] = Nil) extends Get_Submit_Payroll_Inputs_RequestTypeOption
      


/** Payroll Input Request Criteria
*/
case class Payroll_Input_Request_CriteriaType(Worker_Reference: Option[generated2.WorkerObjectType] = None,
  Earning_Reference: Seq[generated2.Earning__All_ObjectType] = Nil,
  Deduction_Reference: Seq[generated2.Deduction__All_ObjectType] = Nil,
  Start_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  End_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Openu45Ended_Ongoing_Inputs: Option[Boolean] = None) extends Get_Submit_Payroll_Inputs_RequestTypeOption
      


/** Payroll Input Response Group
*/
case class Payroll_Input_Response_GroupType(Include_Reference: Option[Boolean] = None,
  Include_Payroll_Input_Data: Option[Boolean] = None)
      


/** Get Payroll Balances Request
*/
case class Get_Payroll_Balances_RequestType(Request_Criteria: generated2.Payroll_Balance_Request_CriteriaType,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Payroll_Balance_Response_GroupType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Get Payroll Balances Response
*/
case class Get_Payroll_Balances_ResponseType(Request_Criteria: Option[generated2.Payroll_Balance_Request_CriteriaType] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Payroll_Balance_Response_GroupType] = None,
  Response_Results: Option[generated2.Response_ResultsType] = None,
  Response_Data: Option[generated2.Payroll_Balance_Response_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Get Payroll Balances Request
*/
case class Payroll_Balance_Request_CriteriaType(Employee_Reference: Seq[generated2.EmployeeObjectType] = Nil,
  Company_Reference: Seq[generated2.CompanyObjectType] = Nil,
  Pay_Calculation_Criteria: generated2.Pay_Calculation_SelectionType,
  Balance_Period_Definition_Reference: Seq[generated2.Balance_Period__All_ObjectType] = Nil,
  Balance_Period_As_of_Date: javax.xml.datatype.XMLGregorianCalendar,
  Balance_Period_Cutoff_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Period_for_Balance_Reference: Option[generated2.PeriodObjectType] = None,
  Include_Results_Processed_by_Reference: Option[javax.xml.datatype.XMLGregorianCalendar] = None)
      


/** Payroll Balance Response Group
*/
case class Payroll_Balance_Response_GroupType(Include_Name_Data: Option[Boolean] = None,
  Include_National_ID_Data: Option[Boolean] = None)
      


/** Payroll Balance Response Data
*/
case class Payroll_Balance_Response_DataType(Payroll_Balance: Seq[generated2.Payroll_BalanceType] = Nil)
      


/** Payroll Balance
*/
case class Payroll_BalanceType(Worker_Reference: Option[generated2.WorkerObjectType] = None,
  Worker_External_Integration_ID_Data: Option[generated2.Worker_ReferenceType] = None,
  Name_Data: Seq[generated2.Name_DataType] = Nil,
  National_ID_Data: Seq[generated2.National_ID_DataType] = Nil,
  Pay_Calculation_Balance_Data: Seq[generated2.Pay_Calculation_Balance_DataType] = Nil)
      


/** Pay Calculation Selection for Get Payroll Balances Request
*/
case class Pay_Calculation_SelectionType(Earning_Reference: Seq[generated2.Earning__All_ObjectType] = Nil,
  Deduction_Reference: Seq[generated2.Deduction__All_ObjectType] = Nil,
  Pay_Accumulation_Reference: Seq[generated2.Pay_Accumulation__All_ObjectType] = Nil)
      


/** Pay Calculation Balance Data
*/
case class Pay_Calculation_Balance_DataType(Pay_Calculation_Reference: Seq[generated2.Pay_Calculation_ReferenceType] = Nil,
  Balance_Period_Data: Seq[generated2.Balance_Period_Data_for_Get_Payroll_BalancesType] = Nil)
      


/** Pay Calculation Reference
*/
case class Pay_Calculation_ReferenceType(Earning_Reference: Option[generated2.Earning__All_ObjectType] = None,
  Deduction_Reference: Option[generated2.Deduction__All_ObjectType] = None,
  Pay_Accumulation_Reference: Option[generated2.Pay_Accumulation__All_ObjectType] = None)
      


/** Balance Period Data for Payroll Balances
*/
case class Balance_Period_Data_for_Get_Payroll_BalancesType(Balance_Period_Name: Option[String] = None,
  Balance_Period_Start_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Balance_Period_End_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Balance_Period_Detail_Data: Seq[generated2.Balance_Period_Detail_DataType] = Nil)
      


/** Balance Period Detail Data
*/
case class Balance_Period_Detail_DataType(Worktag_Reference: Seq[generated2.Payroll_Worktag_DataType] = Nil,
  Balance_Amount: Option[BigDecimal] = None,
  Currency_Reference: generated2.Currency_Reference_DataType,
  Payroll_ID_Balance_Data: Seq[generated2.Payroll_ID_Balance_DataType] = Nil)
      


/** Settlement Account information including Bank Account Type, Currency, Routing Transit Number, etc.

Bank Account Type becomes required when using v30.1 of the web service.
*/
case class Settlement_Account_WWS_DataType(Settlement_Bank_Account_ID: Option[String] = None,
  Country_Reference: Option[generated2.CountryObjectType] = None,
  Currency_Reference: Option[generated2.CurrencyObjectType] = None,
  Bank_Account_Nickname: Option[String] = None,
  Bank_Account_Type_Reference: Option[generated2.Bank_Account_TypeObjectType] = None,
  Bank_Name: Option[String] = None,
  Routing_Transit_Number: Option[String] = None,
  Branch_ID: Option[String] = None,
  Branch_Name: Option[String] = None,
  Bank_Account_Number: Option[String] = None,
  Check_Digit: Option[String] = None,
  Bank_Account_Name: Option[String] = None,
  Roll_Number: Option[String] = None,
  IBAN: Option[String] = None,
  SWIFT_Bank_Identification_Code: Option[String] = None,
  Accepts_Payment_Types_Reference: Seq[generated2.Payment_TypeObjectType] = Nil,
  Payment_Types_Reference: Seq[generated2.Payment_TypeObjectType] = Nil,
  For_Supplier_Connections_Only: Option[Boolean] = None,
  Requires_Prenote: Option[Boolean] = None,
  Payment_Type_Prenote_Reference: Option[generated2.Payment_TypeObjectType] = None,
  Inactive: Option[Boolean] = None,
  Bank_Instructions: Option[String] = None,
  Intermediary_Bank_Data: Seq[generated2.Intermediary_Bank_Account_WWS_DataType] = Nil)
      


/** Business Entity Logo Image Data is an element containing the logo data.
*/
case class Business_Entity_Logo_Image_DataType(Filename: String,
  Image: Option[scalaxb.Base64Binary] = None)
      


/** Name Data for Get Payroll Results
*/
case class Name_Data_for_Get_Payroll_ResultsType(Name_Data: Seq[generated2.Name_DataType] = Nil)
      


/** National ID Data for Get Payroll Results
*/
case class National_ID_Data_for_Get_Payroll_ResultsType(National_ID_Data: Seq[generated2.National_ID_DataType] = Nil)
      


/** Element containing application related exceptions data
*/
case class Application_Instance_Exceptions_DataType(Exception_Data: Seq[generated2.Exception_DataType] = Nil)
      


/** Element containing Exceptions Data
*/
case class Application_Instance_Related_Exceptions_DataType(Exceptions_Data: Seq[generated2.Application_Instance_Exceptions_DataType] = Nil)
      


/** Business Entity Alternate Name Data
*/
case class Business_Entity_Alternate_Name_DataType(Alternate_Name: String,
  Alternate_Name_Usage_Reference: Seq[generated2.Alternate_Name_UsageObjectType] = Nil)
      


/** Field Result Request Criteria
*/
case class Field_And_Parameter_Criteria_DataType(Provider_Reference: Seq[generated2.External_Field_and_Parameter_Initialization_ProviderObjectType] = Nil)
      


/** Result of the evaluation of an External Field based on a contextual instance.
*/
case class Document_Field_Result_DataType(Field_Reference: Option[generated2.Integration_Document_FieldObjectType] = None,
  Value: Option[String] = None)
      


/** Element containing off-cycle payment request to add/update off cycle payment from external systems into Workday.
*/
case class Payroll_Offu45cycle_Payment_DataType(Batch_ID: Option[String] = None,
  Payment_ID: String,
  Employee_Reference: generated2.EmployeeObjectType,
  Payment_Date: javax.xml.datatype.XMLGregorianCalendar,
  Period_Date: javax.xml.datatype.XMLGregorianCalendar,
  Payment_Priority: BigDecimal,
  Run_Category_Reference: Option[generated2.Run_CategoryObjectType] = None,
  Pay_Group_Reference: Option[generated2.Pay_GroupObjectType] = None,
  Result_Type_Reference: generated2.Payroll_Offu45cycle_TypeObjectType,
  Replacement: Option[Boolean] = None,
  Reason_Reference: generated2.Payroll_Action_ReasonObjectType,
  payroll_offu45cycle_payment_datatypeoption: Option[scalaxb.DataRecord[generated2.Payroll_Offu45cycle_Payment_DataTypeOption]] = None,
  Result_Worktag_Overrides_Data: Option[generated2.Result_Worktag_Overrides_DataType] = None,
  Offu45cycle_Input_Data: Seq[generated2.Offu45cycle_Input_DataType] = Nil)
      

trait Payroll_Offu45cycle_Payment_DataTypeOption

/** Payroll Off-cycle Payment Request
*/
case class Put_Payroll_Offu45cycle_Payment_RequestType(Payroll_Offu45cycle_Payment_Reference: Option[generated2.Payroll_Offu45cycle_Result_OverrideObjectType] = None,
  Payroll_Offu45cycle_Payment_Data: generated2.Payroll_Offu45cycle_Payment_DataType,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Payroll Off-cycle Payment Response
*/
case class Put_Payroll_Offu45cycle_Payment_ResponseType(Payroll_Offu45cycle_Payment_Reference: Option[generated2.Payroll_Offu45cycle_Result_OverrideObjectType] = None,
  Batch_ID: Option[String] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** On Demand Payment Data
*/
case class On_Demand_Payment_DataType(Use_Supplemental_Tax_Rate: Option[Boolean] = None,
  Override_Payment_Method: Option[Boolean] = None,
  Payment_Type_ID_Reference: Option[generated2.Payment_TypeObjectType] = None,
  Pay_to_Balance_Account: Option[Boolean] = None,
  Take_Additional_Withholding: Option[Boolean] = None,
  Include_Retro_Differences_in_Payment: Option[Boolean] = None,
  Load_or_Refresh_Input: Option[Boolean] = None,
  Tax_Frequency_Override: Seq[generated2.Tax_Frequency_Override_DataType] = Nil) extends Payroll_Offu45cycle_Payment_DataTypeOption with Payroll_Offu45cycle_Payment_Response_DataTypeOption
      


/** Manual Payment Data
*/
case class Manual_Payment_DataType(Third_Party_Sick_Pay: Option[Boolean] = None,
  Net_Amount: Option[BigDecimal] = None,
  Check_Number: Option[String] = None,
  Bank_Account_Reference: Option[generated2.Bank_AccountObjectType] = None) extends Payroll_Offu45cycle_Payment_DataTypeOption with Payroll_Offu45cycle_Payment_Response_DataTypeOption
      


/** Off-cycle Input Line Data
*/
case class Offu45cycle_Input_Line_DataType(offu45cycle_input_line_datatypeoption: Option[scalaxb.DataRecord[generated2.Related_Calculation__All_ObjectType]] = None,
  Value: Option[BigDecimal] = None)
      

trait Offu45cycle_Input_Line_DataTypeOption

/** Off-cycle Input Data
*/
case class Offu45cycle_Input_DataType(offu45cycle_input_datatypeoption: scalaxb.DataRecord[generated2.Offu45cycle_Input_DataTypeOption],
  Position_Reference: Option[generated2.Position_ElementObjectType] = None,
  Amount: Option[BigDecimal] = None,
  Hours: Option[BigDecimal] = None,
  Rate: Option[BigDecimal] = None,
  Adjustment: Option[Boolean] = None,
  Reference_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Currency_Reference: Option[generated2.CurrencyObjectType] = None,
  Coverage_Start_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Coverage_End_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Payroll_Worktags_Data: Option[generated2.Payroll_Input_Worktags_DataType] = None,
  Input_Line_Data: Seq[generated2.Offu45cycle_Input_Line_DataType] = Nil,
  Company_Reference: Option[generated2.CompanyObjectType] = None,
  Comment: Option[String] = None)
      

trait Offu45cycle_Input_DataTypeOption

/** This can be used to enter worktag overrides (if applicable) that will be respected at the 'result' level.  If no override is entered for a specific worktag, an applicable default worktag value (as of Period end date) will be used.
*/
case class Result_Worktag_Overrides_DataType(Company_Reference: Option[generated2.CompanyObjectType] = None,
  Region_Reference: Option[generated2.RegionObjectType] = None,
  Location_Reference: Option[generated2.LocationObjectType] = None,
  Cost_Center_Reference: Option[generated2.Cost_CenterObjectType] = None,
  Job_Profile_Reference: Option[generated2.Job_ProfileObjectType] = None,
  State__Work__Reference: Option[generated2.Payroll_State_AuthorityObjectType] = None,
  State__Resident__Reference: Option[generated2.Payroll_State_AuthorityObjectType] = None,
  County__Work__Reference: Option[generated2.Payroll_Local_County_AuthorityObjectType] = None,
  County__Resident__Reference: Option[generated2.Payroll_Local_County_AuthorityObjectType] = None,
  City__Work__Reference: Option[generated2.Payroll_Local_City_AuthorityObjectType] = None,
  City__Resident__Reference: Option[generated2.Payroll_Local_City_AuthorityObjectType] = None,
  School_District__Resident__Reference: Option[generated2.Payroll_Local_School_District_AuthorityObjectType] = None,
  Payroll_Reference_Number_Reference: Option[generated2.Payroll_Reference_NumberObjectType] = None)
      


/** Payroll Worktags
*/
case class Payroll_Input_Worktags_DataType(Location_Reference: Option[generated2.LocationObjectType] = None,
  Region_Reference: Option[generated2.RegionObjectType] = None,
  Job_Profile_Reference: Option[generated2.Job_ProfileObjectType] = None,
  Cost_Center_Reference: Option[generated2.Cost_CenterObjectType] = None,
  payroll_input_worktags_datatypeoption: Option[scalaxb.DataRecord[generated2.Payroll_Input_Worktags_DataTypeOption]] = None,
  Withholding_Order_Case_Reference: Option[generated2.Withholding_Order_CaseObjectType] = None,
  State_Authority_Reference: Option[generated2.Payroll_State_AuthorityObjectType] = None,
  Workers_Compensation_Code_Reference: Option[generated2.Workers_Compensation_CodeObjectType] = None,
  County_Authority_Reference: Option[generated2.Payroll_Local_County_AuthorityObjectType] = None,
  City_Authority_Reference: Option[generated2.Payroll_Local_City_AuthorityObjectType] = None,
  School_District_Authority_Reference: Option[generated2.Payroll_Local_School_District_AuthorityObjectType] = None,
  Custom_Worktag_01_Reference: Option[generated2.Custom_Worktag_01ObjectType] = None,
  Custom_Worktag_02_Reference: Option[generated2.Custom_Worktag_02ObjectType] = None,
  Custom_Worktag_03_Reference: Option[generated2.Custom_Worktag_03ObjectType] = None,
  Custom_Worktag_04_Reference: Option[generated2.Custom_Worktag_04ObjectType] = None,
  Custom_Worktag_05_Reference: Option[generated2.Custom_Worktag_05ObjectType] = None,
  Fund_Reference: Option[generated2.FundObjectType] = None,
  Grant_Reference: Option[generated2.GrantObjectType] = None,
  Gift_Reference: Option[generated2.GiftObjectType] = None,
  Program_Reference: Option[generated2.ProgramObjectType] = None,
  Business_Unit_Reference: Option[generated2.Business_UnitObjectType] = None,
  Object_Class_Reference: Option[generated2.Object_ClassObjectType] = None,
  Custom_Organization_Reference: Seq[generated2.Custom_OrganizationObjectType] = Nil,
  Custom_Worktag_06_Reference: Option[generated2.Custom_Worktag_06ObjectType] = None,
  Custom_Worktag_07_Reference: Option[generated2.Custom_Worktag_07ObjectType] = None,
  Custom_Worktag_08_Reference: Option[generated2.Custom_Worktag_08ObjectType] = None,
  Custom_Worktag_09_Reference: Option[generated2.Custom_Worktag_09ObjectType] = None,
  Custom_Worktag_10_Reference: Option[generated2.Custom_Worktag_10ObjectType] = None,
  Custom_Worktag_11_Reference: Option[generated2.Custom_Worktag_11ObjectType] = None,
  Custom_Worktag_12_Reference: Option[generated2.Custom_Worktag_12ObjectType] = None,
  Custom_Worktag_13_Reference: Option[generated2.Custom_Worktag_13ObjectType] = None,
  Custom_Worktag_14_Reference: Option[generated2.Custom_Worktag_14ObjectType] = None,
  Custom_Worktag_15_Reference: Option[generated2.Custom_Worktag_15ObjectType] = None,
  Local_Other_Tax_Authority_Reference: Option[generated2.Payroll_Other_AuthorityObjectType] = None,
  NI_Category_Reference: Option[generated2.NI_CategoryObjectType] = None,
  ARRCOu45AGIRC_Category_Reference: Option[generated2.ARRCOu45AGIRC_Rubric_ValueObjectType] = None)
      

trait Payroll_Input_Worktags_DataTypeOption

/** The Payroll History Payment Data element contains all of the information necessary to define a history payment, including the functional keys (Worker, Period, Pay Group), the technical key (Payment ID), the payment information (Payment Date, Gross and Net Amounts, Sub-Period dates), Payroll Worktag overrides, and the line-item earnings and deductions detail.
*/
case class Payroll_History_Payment_DataType(Batch_ID: Option[String] = None,
  Payment_ID: String,
  Employee_Reference: generated2.EmployeeObjectType,
  Period_Date: javax.xml.datatype.XMLGregorianCalendar,
  Run_Category_Reference: Option[generated2.Run_CategoryObjectType] = None,
  Pay_Group_Reference: Option[generated2.Pay_GroupObjectType] = None,
  Payroll_ID_Reference: Option[generated2.Payroll_IDObjectType] = None,
  History_Payment_Data: generated2.History_Payment_DataType,
  Result_Worktag_Overrides: Option[generated2.Result_Worktag_Overrides_DataType] = None,
  Add_to_Existing_Input_Data: Option[Boolean] = None,
  History_Payment_Input_Data: Seq[generated2.History_Payment_Input_DataType] = Nil)
      


/** This is the top-level Request element carrying all information necessary to make a Put Payroll History Payment service request.
*/
case class Put_Payroll_History_Payment_RequestType(Payroll_History_Payment_Reference: Option[generated2.Payroll_Offu45cycle_Result_OverrideObjectType] = None,
  Payroll_History_Payment_Data: generated2.Payroll_History_Payment_DataType,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** This element contains the reference to the Payroll History Payment added or updated by the web service operation.
*/
case class Put_Payroll_History_Payment_ResponseType(Payroll_History_Payment_Reference: Option[generated2.Payroll_Offu45cycle_Result_OverrideObjectType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** The History Payment Data element contains attributes specific to this payment, such as the Gross and Net amounts, an optional Sub-period definition (if the payment is not for the full payroll Period) and optional Third Party Sick Pay indicator.
*/
case class History_Payment_DataType(Third_Party_Sick_Pay: Option[Boolean] = None,
  Payment_Date: javax.xml.datatype.XMLGregorianCalendar,
  Gross_Amount: Option[BigDecimal] = None,
  Net_Amount: Option[BigDecimal] = None,
  Subu45Period_Start_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Subu45Period_End_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None)
      


/** This element contains the earnings and deductions detail that contributes to the history payment's Gross and Net.
*/
case class History_Payment_Input_DataType(history_payment_input_datatypeoption: scalaxb.DataRecord[generated2.History_Payment_Input_DataTypeOption],
  Position_Reference: Option[generated2.Position_ElementObjectType] = None,
  Amount: Option[BigDecimal] = None,
  Taxable_Wages: Option[BigDecimal] = None,
  Subject_Wages: Option[BigDecimal] = None,
  Payroll_Input_Worktags_Data: Option[generated2.Payroll_Input_Worktags_DataType] = None,
  Comment: Option[String] = None,
  History_Payment_Input_Line_Data: Seq[generated2.History_Payment_Input_Line_DataType] = Nil)
      

trait History_Payment_Input_DataTypeOption

/** This element contains the value details (amount, hours, rate, etc.) that contribute to an earning or deduction.
*/
case class History_Payment_Input_Line_DataType(Related_Calculation_Reference: generated2.Related_Calculation__All_ObjectType,
  Input_Value: Option[BigDecimal] = None)
      


/** Submit Payroll Input Request
*/
case class Submit_Payroll_Input_RequestType(Payroll_Input_Data: Seq[generated2.Submit_Payroll_Input_DataType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Submit Payroll Input Data
*/
case class Submit_Payroll_Input_DataType(Payroll_Input_ID: Option[String] = None,
  Batch_ID: Option[String] = None,
  Source_Reference: Option[generated2.Integration_System__Audited_ObjectType] = None,
  Ongoing_Input: Option[Boolean] = None,
  Start_Date: javax.xml.datatype.XMLGregorianCalendar,
  End_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Run_Category_Reference: Seq[generated2.Run_CategoryObjectType] = Nil,
  Worker_Reference: generated2.WorkerObjectType,
  Position_Reference: Option[generated2.Position_ElementObjectType] = None,
  submit_payroll_input_datatypeoption: scalaxb.DataRecord[generated2.Submit_Payroll_Input_DataTypeOption],
  Amount: Option[BigDecimal] = None,
  Hours: Option[BigDecimal] = None,
  Rate: Option[BigDecimal] = None,
  Adjustment: Option[Boolean] = None,
  Worktag_Data: Option[generated2.Payroll_Input_Worktags_DataType] = None,
  Additional_Input_Details_Data: Seq[generated2.Additional_Input_DetailsType] = Nil,
  Comment: Option[String] = None,
  Currency_Reference: Option[generated2.CurrencyObjectType] = None,
  Match_Existing_Input: Option[Boolean] = None,
  Company_Reference: Option[generated2.CompanyObjectType] = None,
  Coverage_Start_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Coverage_End_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Last_Period_End_Date = attributes.get("@Last_Period_End_Date") map { _.as[javax.xml.datatype.XMLGregorianCalendar]}
}

      

trait Submit_Payroll_Input_DataTypeOption

/** Additional Input Details
*/
case class Additional_Input_DetailsType(Related_Calculation_Reference: Option[generated2.Related_Calculation__All_ObjectType] = None,
  Input_Value: Option[BigDecimal] = None)
      


/** Submit Payroll Input Response
*/
case class Submit_Payroll_Input_ResponseType(Payroll_Input_Reference: Seq[generated2.Payroll_InputObjectType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** This public web service method retrieves historical payroll payments that have been loaded into Workday Payroll from External Payroll systems.
*/
case class Get_Payroll_History_Payments_RequestType(Request_References: Option[generated2.Payment_History_Request_ReferencesType] = None,
  Request_Criteria: Option[generated2.Payroll_History_Result_Request_CriteriaType] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Response for Get Payroll History Payment Web Service method
*/
case class Payroll_History_PaymentType(Payroll_History_Payment_Reference: Option[generated2.Payroll_Offu45cycle_Result_OverrideObjectType] = None,
  Payroll_History_Payment_Data: Option[generated2.Payroll_History_Payment_DataType] = None)
      


/** The Payroll History Payment Data element contains all of the information necessary to define a history payment, including the functional keys (Worker, Period, Pay Group), the technical key (Payment ID), the payment information (Payment Date, Gross and Net Amounts, Sub-Period dates), Payroll Worktag overrides, and the line-item earnings and deductions detail.
*/
case class Payroll_History_Payment_Response_DataType(Payroll_History_Payment: Seq[generated2.Payroll_History_PaymentType] = Nil)
      


/** Response for Get Payroll History Payment Web Service method
*/
case class Get_Payroll_History_Payments_ResponseType(Request_References: Option[generated2.Payment_History_Request_ReferencesType] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Results: Option[generated2.Response_ResultsType] = None,
  Response_Data: Option[generated2.Payroll_History_Payment_Response_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** This element contains Worker Payroll Reporting Code Data.
*/
case class Worker_Payroll_Reporting_Code_DataType(Payroll_Reporting_Type_Reference: Option[generated2.Payroll_Reporting_TypeObjectType] = None,
  Payroll_Reporting_Code: Option[String] = None,
  Formatted_Payroll_Reporting_Code: Option[String] = None)
      


/** Period Schedule Request References
*/
case class Period_Schedule_Request_ReferencesType(Period_Schedule_Reference: Seq[generated2.Period_ScheduleObjectType] = Nil) extends Get_Period_Schedules_RequestTypeOption
      


/** Period Schedule Request Criteria
*/
case class Period_Schedule_Request_CriteriaType() extends Get_Period_Schedules_RequestTypeOption
      


/** Period Schedule Response Group
*/
case class Period_Schedule_Response_GroupType(Include_Reference: Option[Boolean] = None)
      


/** Get Period Schedules Request
*/
case class Get_Period_Schedules_RequestType(get_period_schedules_requesttypeoption: Option[scalaxb.DataRecord[generated2.Get_Period_Schedules_RequestTypeOption]] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Period_Schedule_Response_GroupType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      

trait Get_Period_Schedules_RequestTypeOption

/** Period Schedule
*/
case class Period_ScheduleType(Period_Schedule_Reference: Option[generated2.Period_ScheduleObjectType] = None,
  Period_Schedule_Data: generated2.Period_Schedule_DataType)
      


/** Period Schedule Response Data
*/
case class Period_Schedule_Response_DataType(Period_Schedule: Seq[generated2.Period_ScheduleType] = Nil)
      


/** Get Period Schedules Response
*/
case class Get_Period_Schedules_ResponseType(Request_References: Option[generated2.Period_Schedule_Request_ReferencesType] = None,
  Request_Criteria: Option[generated2.Period_Schedule_Request_CriteriaType] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Period_Schedule_Response_GroupType] = None,
  Response_Results: Option[generated2.Response_ResultsType] = None,
  Response_Data: Option[generated2.Period_Schedule_Response_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Originating Party Data
*/
case class Originating_Party_WWS_DataType(Organization_Name: Option[String] = None,
  Transaction_Tax_ID: Option[String] = None,
  Email_Address_Data: Seq[generated2.Email_Address_DataType] = Nil,
  Address_Information_Data: Option[generated2.Address_Information_DataType] = None,
  Organization_Primary_Phone_Number: Option[String] = None)
      


/** Name of Period Schedule.
*/
case class Period_Schedule_DataType(Period_Schedule_ID: Option[String] = None,
  Period_Schedule_Name: String,
  Frequency_Reference: generated2.FrequencyObjectType,
  Usage_Reference: Seq[generated2.Period_Schedule_UsageObjectType] = Nil,
  Payment_Date_Autou45Adjust_Saturday: Option[BigDecimal] = None,
  Payment_Date_Autou45Adjust_Sunday: Option[BigDecimal] = None,
  Allow_Timesheet_Changes: Option[Boolean] = None,
  Payroll_Period_Schedule_Reference: Option[generated2.Period_ScheduleObjectType] = None,
  Time_Tracking_Eligibility_Rule_Reference: Seq[generated2.Time_Tracking_Eligibility_RuleObjectType] = Nil,
  Period_Data: Seq[generated2.Period_DataType] = Nil)
      


/** Period Content Data
*/
case class Period_DataType(Period_Start_Date: javax.xml.datatype.XMLGregorianCalendar,
  Period_End_Date: javax.xml.datatype.XMLGregorianCalendar,
  Payroll_Payment_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Payroll_GL_Accruals: Option[Boolean] = None,
  Days_to_Accrue: Option[BigDecimal] = None,
  Days_in_Basis: Option[BigDecimal] = None,
  Accrual_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Accrual_Reversal_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Open_Time_Entry: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Lock_Time_Entry: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Unlock_for_Adjustments: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Close_Time_Entry: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Payroll_Period_Reference: Option[generated2.PeriodObjectType] = None,
  Valuation_Date_Override_Data: Seq[generated2.Valuation_Date_Override_DataType] = Nil,
  Period_ID: Option[String] = None)
      


/** Add/Update Period Schedule Request
*/
case class Put_Period_Schedule_RequestType(Period_Schedule_Reference: Option[generated2.Period_ScheduleObjectType] = None,
  Period_Schedule_Data: Option[generated2.Period_Schedule_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Add_Only = attributes.get("@Add_Only") map { _.as[Boolean]}
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Add/Update Period Schedule Response
*/
case class Put_Period_Schedule_ResponseType(Period_Schedule_Reference: Option[generated2.Period_ScheduleObjectType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Receiving Party Data
*/
case class Receiving_Party_WWS_DataType(Payee_Name: String,
  Payee_Legal_Name: String,
  Payee_Preferred_Name: String,
  Payee_ID: Option[String] = None,
  Expense_Payee_Employee_Number: Option[String] = None,
  Tax_ID: Option[String] = None,
  Tax_ID_Type: Option[String] = None,
  Corporate_Credit_Card_Account_Number: Option[String] = None,
  Market_Code: Option[String] = None,
  Country_Reference: Option[generated2.CountryObjectType] = None,
  Payee_Alternate_Name: Seq[generated2.Business_Entity_Alternate_Name_DataType] = Nil,
  Email_Address_Data: Seq[generated2.Email_Address_DataType] = Nil,
  Address_Information_Data: Seq[generated2.Address_Information_DataType] = Nil)
      


/** Originating Party Bank Data. Can be conditionally returned by setting the "Include Originating Bank data" grouping flag.
*/
case class Originating_Party_Bank_DataType(Bank_Account_Reference: Seq[generated2.Bank_AccountObjectType] = Nil,
  Account_Nickname: Option[String] = None,
  Account_Number: Option[String] = None,
  Account_Type_Code: Option[String] = None,
  Financial_Institution_Reference: Option[generated2.Financial_InstitutionObjectType] = None,
  IBAN: Option[String] = None,
  Routing_Transit_Number: Option[String] = None,
  Bank_Identification_Code: Option[String] = None,
  Branch_Name: Option[String] = None,
  Branch_ID_Number: Option[String] = None,
  Country_Reference: Option[generated2.CountryObjectType] = None,
  Currency_Reference: Option[generated2.CurrencyObjectType] = None,
  Bank_Account_Name: Option[String] = None,
  Check_Digit: Option[String] = None,
  Roll_Number: Option[String] = None,
  Bank_Address_Data: Seq[generated2.Address_Information_DataType] = Nil)
      


/** Get Submit Payroll Inputs Request
*/
case class Get_Submit_Payroll_Inputs_RequestType(get_submit_payroll_inputs_requesttypeoption: Option[scalaxb.DataRecord[generated2.Get_Submit_Payroll_Inputs_RequestTypeOption]] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Payroll_Input_Response_GroupType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      

trait Get_Submit_Payroll_Inputs_RequestTypeOption

/** Get Submit Payroll Inputs Response
*/
case class Get_Submit_Payroll_Inputs_ResponseType(Request_References: Option[generated2.Payroll_Input_Request_ReferencesType] = None,
  Request_Criteria: Option[generated2.Payroll_Input_Request_CriteriaType] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Payroll_Input_Response_GroupType] = None,
  Response_Results: Option[generated2.Response_ResultsType] = None,
  Response_Data: Option[generated2.Submit_Payroll_Input_Response_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Get Submit Payroll Inputs Response
*/
case class Submit_Payroll_Input_Response_DataType(Payroll_Input: Seq[generated2.Submit_Payroll_InputType] = Nil)
      


/** Submit Payroll Input
*/
case class Submit_Payroll_InputType(Payroll_Input_Reference: Option[generated2.Payroll_InputObjectType] = None,
  Payroll_Input_Data: Seq[generated2.Submit_Payroll_Input_DataType] = Nil)
      


/** Payroll Remittance Data. Will always be included in the Get Payroll Payslips web service.  Can be conditionally returned by setting the "Include Payroll Remittance Data" grouping flag in the Get Payments web service.
*/
case class Payroll_Remittance_DataType(Period_Start_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Period_End_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Federal_Marital_Status_Reference: Option[generated2.Payroll_Withholding_StatusObjectType] = None,
  Federal_Allowance: Option[BigDecimal] = None,
  Federal_Additional_Allowance: Option[BigDecimal] = None,
  Work_State_Marital_Status_Reference: Option[generated2.Payroll_Withholding_StatusObjectType] = None,
  Work_State_Allowance: Option[BigDecimal] = None,
  Work_State_Additional_Amount: Option[BigDecimal] = None,
  Calculated_Federal_Total_Claim_Amount: Option[BigDecimal] = None,
  Calculated_Provincial_Total_Claim_Amount: Option[BigDecimal] = None,
  Federal_Total_Claim_Amount: Option[BigDecimal] = None,
  Province_Total_Claim_Amount: Option[BigDecimal] = None,
  Federal_Living_Prescribed_Zone: Option[BigDecimal] = None,
  Province_Living_Prescribed_Zone: Option[BigDecimal] = None,
  Federal_Additional_Tax_Amounts: Option[BigDecimal] = None,
  Province_Additional_Tax_Amounts: Option[BigDecimal] = None,
  Federal_Annual_Deductions_Credits: Option[BigDecimal] = None,
  Province_Annual_Deductions_Credits: Option[BigDecimal] = None,
  Federal_Labour_Sponsored_Fund: Option[BigDecimal] = None,
  Province_Labour_Sponsored_Fund: Option[BigDecimal] = None,
  Pay_Group_Detail_Reference: Option[generated2.Pay_Group_DetailObjectType] = None,
  Frequency_Name: Option[String] = None,
  Gross_Amount: Option[BigDecimal] = None,
  Total_Units: Option[BigDecimal] = None,
  Total_Hours_Worked: Option[BigDecimal] = None,
  YTD_Total_Hours_Worked: Option[BigDecimal] = None,
  Net_Pay: Option[BigDecimal] = None,
  Taxes_Deductions: Option[BigDecimal] = None,
  Print_Payslip: Option[Boolean] = None,
  Print_Check_on_Payslip: Option[Boolean] = None,
  Payslip_Distribution_Sorting_Criteria: Option[String] = None,
  Oregon_Business_Identification_Number: Option[String] = None,
  Pay_Rate_Type_Reference: Option[generated2.Pay_Rate_TypeObjectType] = None,
  Worker_Data: Seq[generated2.Payroll_Remittance_Worker_DataType] = Nil,
  Work_Address_Data: Seq[generated2.Address_Information_DataType] = Nil,
  Gross_And_Net_Data: Seq[generated2.Payroll_Remittance_Gross_And_Net_DataType] = Nil,
  Total_Data: Seq[generated2.Payroll_Remittance_Total_DataType] = Nil,
  Earnings_Data: Seq[generated2.Payroll_Remittance_Earnings_DataType] = Nil,
  Pre_Tax_Deductions_Data: Seq[generated2.Payroll_Remittance_Pre_Tax_Deduction_DataType] = Nil,
  Post_Tax_Deductions_Data: Seq[generated2.Payroll_Remittance_Post_Tax_DataType] = Nil,
  Employee_Taxes_Data: Seq[generated2.Payroll_Remittance_Employee_Taxes_DataType] = Nil,
  Employer_Paid_Benefits_Data: Seq[generated2.Payroll_Remittance_Employer_Paid_Benefits_DataType] = Nil,
  Taxable_Wages_Data: Seq[generated2.Payroll_Remittance_Taxable_Wages_DataType] = Nil,
  Absence_Plans_Data: Seq[generated2.Payroll_Remittance_Absence_PlanType] = Nil,
  Payslip_Message_Data: Seq[generated2.Payroll_Remittance_Payslip_Message_DataType] = Nil)
      


/** Payroll Remittance Data
*/
case class Payroll_Remittance_Worker_DataType(Employee_ID: Option[String] = None,
  Employee_Name: Option[String] = None,
  Preferred_Name: Option[String] = None,
  Legal_Name: Option[String] = None,
  Legal_First_Name: Option[String] = None,
  Legal_Last_Name: Option[String] = None,
  Legal_Middle_Name: Option[String] = None,
  Date_of_Birth: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  SSN: Option[String] = None,
  Company: Option[String] = None,
  Occupation: Option[String] = None,
  Phone: Option[String] = None,
  Location_Reference: Option[generated2.LocationObjectType] = None,
  Department_Name_Reference: Option[generated2.Supervisory_OrganizationObjectType] = None,
  Supervisory_Organization_ID: Option[String] = None,
  Region_Reference: Seq[generated2.RegionObjectType] = Nil,
  Region_ID: Option[String] = None,
  Cost_Center_Reference: Seq[generated2.Cost_CenterObjectType] = Nil,
  Cost_Center_ID: Option[String] = None,
  Manager_Reference: Option[generated2.WorkerObjectType] = None,
  Home_Address_Data: Seq[generated2.Address_Information_DataType] = Nil)
      


/** Payroll Remittance Gross And Net Data
*/
case class Payroll_Remittance_Gross_And_Net_DataType(Type_Reference: Option[generated2.Unique_IdentifierObjectType] = None,
  Amount: Option[BigDecimal] = None,
  YTD: Option[BigDecimal] = None)
      


/** Payroll Remittance Total Data
*/
case class Payroll_Remittance_Total_DataType(Label: Option[String] = None,
  Current_Period: Option[BigDecimal] = None,
  YTD: Option[BigDecimal] = None)
      


/** Payroll remitance Earnings
*/
case class Payroll_Remittance_Earnings_DataType(Pay_Component_Reference: Seq[generated2.Pay_Component_ReferenceType] = Nil,
  GB_Name: Option[String] = None,
  Pay_Component: Option[String] = None,
  Start_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  End_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Payroll_Worktags_Reference: Seq[generated2.Payroll_WorktagObjectType] = Nil,
  Amount: Option[BigDecimal] = None,
  YTD_Amount: Option[BigDecimal] = None,
  Units_Type_Reference: Seq[generated2.Payroll_CalculationObjectType] = Nil,
  Units_Value: Option[BigDecimal] = None,
  YTD_Units_Value: Option[BigDecimal] = None,
  Rate_Type_Reference: Seq[generated2.Payroll_CalculationObjectType] = Nil,
  Rate: Option[BigDecimal] = None)
      


/** Payroll Remittance Pre Tax Deduction Data
*/
case class Payroll_Remittance_Pre_Tax_Deduction_DataType(Pay_Component_Reference: Seq[generated2.Pay_Component_ReferenceType] = Nil,
  GB_Name: Option[String] = None,
  Pay_Component: Option[String] = None,
  Start_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  End_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Payroll_Worktags_Reference: Seq[generated2.Payroll_WorktagObjectType] = Nil,
  Amount: Option[BigDecimal] = None,
  YTD: Option[BigDecimal] = None)
      


/** Payroll Remittance Post Tax Data
*/
case class Payroll_Remittance_Post_Tax_DataType(Pay_Component_Reference: Seq[generated2.Pay_Component_ReferenceType] = Nil,
  GB_Name: Option[String] = None,
  Pay_Component: Option[String] = None,
  Start_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  End_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Payroll_Worktags_Reference: Seq[generated2.Payroll_WorktagObjectType] = Nil,
  Amount: Option[BigDecimal] = None,
  YTD: Option[BigDecimal] = None)
      


/** Payroll Remittance Employee Taxes Data
*/
case class Payroll_Remittance_Employee_Taxes_DataType(GB_Name: Option[String] = None,
  Pay_Component_Reference: Seq[generated2.Pay_Component_ReferenceType] = Nil,
  Pay_Component: Option[String] = None,
  Start_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  End_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Payroll_Worktags_Reference: Seq[generated2.Payroll_WorktagObjectType] = Nil,
  Amount: Option[BigDecimal] = None,
  YTD: Option[BigDecimal] = None)
      


/** Employer Paid Benefits
*/
case class Payroll_Remittance_Employer_Paid_Benefits_DataType(Pay_Component_Reference: Seq[generated2.Pay_Component_ReferenceType] = Nil,
  GB_Name: Option[String] = None,
  Pay_Component: Option[String] = None,
  Start_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  End_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Payroll_Worktags_Reference: Seq[generated2.Payroll_WorktagObjectType] = Nil,
  Amount: Option[BigDecimal] = None,
  YTD: Option[BigDecimal] = None)
      


/** Payroll Remittance Taxable Wages
*/
case class Payroll_Remittance_Taxable_Wages_DataType(GB_Name: Option[String] = None,
  Name: Option[String] = None,
  Amount: Option[BigDecimal] = None,
  YTD: Option[BigDecimal] = None)
      


/** Payroll Remittance Absence Plan
*/
case class Payroll_Remittance_Absence_PlanType(GB_Name: Option[String] = None,
  Name: Option[String] = None,
  Accrued: Option[BigDecimal] = None,
  Reduced: Option[BigDecimal] = None,
  Balance: Option[BigDecimal] = None)
      


/** Payroll Remittance Payslip Message
*/
case class Payroll_Remittance_Payslip_Message_DataType(Payslip_Message: Option[String] = None)
      


/** One or more references to existing history payments
*/
case class Payment_History_Request_ReferencesType(Payment_History_Request_Reference: Seq[generated2.Payroll_Offu45cycle_Result_OverrideObjectType] = Nil)
      


/** Specifies what the allocation will be applied to
*/
case class Costing_Allocation_DataType(costing_allocation_datatypeoption: scalaxb.DataRecord[generated2.Costing_Allocation_DataTypeOption],
  Position_Reference: Option[generated2.Position_ElementObjectType] = None,
  Earning_Reference: Option[generated2.Earning__All_ObjectType] = None,
  Position_Element_Effective_Asu45of_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Replace_Existing_Costing_Allocation_Intervals: Option[Boolean] = None,
  Costing_Allocation_Interval_Data: Seq[generated2.Costing_Allocation_Interval_DataType] = Nil)
      

trait Costing_Allocation_DataTypeOption

/** Specifies the options for the business process, as well as the data for the Costing Allocation
*/
case class Assign_Costing_Allocation_RequestType(Business_Process_Parameters: Option[generated2.Business_Process_ParametersType] = None,
  Costing_Allocation_Data: generated2.Costing_Allocation_DataType,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Contains the Event and Costing data that was created by this request
*/
case class Assign_Costing_Allocation_ResponseType(Assign_Costing_Allocation_Event_Reference: Option[generated2.Unique_IdentifierObjectType] = None,
  Worker_Reference: Option[generated2.WorkerObjectType] = None,
  Position_Restriction_Reference: Option[generated2.Position_RestrictionsObjectType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Wrapper element for Non-3PSP Annual Tax Filing Data
*/
case class Worker_Annual_Tax_DataType(Third_Party_Sick_Pay: Option[Boolean] = None,
  Social_Security_Tips: Option[BigDecimal] = None,
  Allocated_Tips: Option[BigDecimal] = None,
  Dependent_Care_Benefits: Option[BigDecimal] = None,
  Print_Workers_Tax_Documents: Option[Boolean] = None,
  Nonu45Qualified_Pension_Data: Option[generated2.Nonu45Qualified_Pension_DataType] = None,
  Deferred_and_Other_Compensation_Data: Seq[generated2.Deferred_and_Other_Compensation_DataType] = Nil,
  Additional_Data: Option[generated2.Additional_DataType] = None,
  Other_Data_Wrapper: Seq[generated2.Other_Data_WrapperType] = Nil)
      


/** This is wrapper element for Annual Non Qualified plans Data.
*/
case class Nonu45Qualified_Pension_DataType(Section_457_Dist_YTD: Option[BigDecimal] = None,
  Nonu45section_457_Dist_YTD: Option[BigDecimal] = None,
  Section_457_Contrib_YTD: Option[BigDecimal] = None,
  Nonu45section_457_Contrib_YTD: Option[BigDecimal] = None)
      


/** This is wrapper element for W-2 Box 12 Data.
*/
case class Deferred_and_Other_Compensation_DataType(Code: Option[String] = None,
  Year: Option[String] = None,
  Amount: Option[BigDecimal] = None)
      


/** This is the wrapper element for Box 13 W-2 Additional Data.
*/
case class Additional_DataType(Statutory_Employee: Option[Boolean] = None,
  Retirement_Plan: Option[Boolean] = None,
  Third_Party_Sick_Pay: Option[Boolean] = None)
      


/** This element is wrapper for W-2 Box 14 Other Data.
*/
case class Other_Data_WrapperType(Other_Data: Seq[generated2.Other_DataType] = Nil)
      


/** This element is wrapper for W-2 Box 14 Other Data.
*/
case class Other_DataType(Label: Option[String] = None,
  Amount: Option[BigDecimal] = None,
  Customer_Owned: Option[Boolean] = None,
  Plan_Number: Option[String] = None)
      


/** This is a wrapper element for Worker Annual Tax Filing Data.
*/
case class Worker_Annual_Tax_Data_WrapperType(Worker_Annual_Tax_Data: Seq[generated2.Worker_Annual_Tax_DataType] = Nil)
      


/** Payroll Payslip Request Criteria
*/
case class Payroll_Payslip_Request_CriteriaType(Outsourced_Payment_Group_Reference: generated2.Outsourced_Payment_GroupObjectType,
  Employee_Reference: Seq[generated2.WorkerObjectType] = Nil,
  Payment_Interval_Start_Date_Reference: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Payment_Interval_End_Date_Reference: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Payslip_Printing_Option_Reference: Option[generated2.Payslip_Printing_OptionObjectType] = None,
  Field_And_Parameter_Criteria_Data: Option[generated2.Field_And_Parameter_Criteria_DataType] = None)
      


/** Get Payroll Payslips Request
*/
case class Get_Payroll_Payslips_RequestType(Request_Criteria: generated2.Payroll_Payslip_Request_CriteriaType,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Payroll_Payslip_Response_GroupType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Payroll Payslip
*/
case class Payroll_PayslipType(Payroll_Payslip_Reference: Option[generated2.Unique_IdentifierObjectType] = None,
  Payslip_Data: Option[generated2.Payroll_Payslip_DataType] = None)
      


/** Get Payroll Payslips Response
*/
case class Payroll_Payslip_Response_DataType(Payslip: Seq[generated2.Payroll_PayslipType] = Nil)
      


/** Get Payroll Payslips Response
*/
case class Get_Payroll_Payslips_ResponseType(Request_Criteria: Option[generated2.Payroll_Payslip_Request_CriteriaType] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Payroll_Payslip_Response_GroupType] = None,
  Response_Results: Option[generated2.Response_ResultsType] = None,
  Response_Data: Option[generated2.Payroll_Payslip_Response_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Payroll Payslip Data
*/
case class Payroll_Payslip_DataType(Run_Category_Data: Option[generated2.Payslip_Run_Category_DataType] = None,
  Payment_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Payroll_Remittance_Data: Option[generated2.Payroll_Remittance_DataType] = None,
  Payment_Data: Seq[generated2.Payslip_Payment_DataType] = Nil,
  Integration_Field_Override_Data: Seq[generated2.Document_Field_Result_DataType] = Nil,
  Off_Cycle_Data: Seq[generated2.Offu45Cycle_DataType] = Nil)
      


/** Run Category Data
*/
case class Payslip_Run_Category_DataType(Run_Category_Reference: Option[generated2.Run_CategoryObjectType] = None,
  Regular_Run_Category: Option[Boolean] = None)
      


/** Payroll Payslip Response Group
*/
case class Payroll_Payslip_Response_GroupType(Include_Originating_Contact_Data: Option[Boolean] = None,
  Include_Originating_Bank_Data: Option[Boolean] = None,
  Include_Receiving_Party_Contact_Data: Option[Boolean] = None,
  Include_Receiving_Party_Bank_Data: Option[Boolean] = None)
      


/** Payslip Payment Data
*/
case class Payslip_Payment_DataType(Payroll_Payment_Display_Order: Option[BigDecimal] = None,
  Payment_Category_Reference: Option[generated2.Payment_CategoryObjectType] = None,
  Payment_Type_Reference: Option[generated2.Payment_TypeObjectType] = None,
  Payment_Method_Reference: Option[generated2.Payment_MethodObjectType] = None,
  Bank_Name: Option[String] = None,
  Bank_Account_Reference: Option[generated2.Settlement_InstructionObjectType] = None,
  Account_Number: Option[String] = None,
  Payment_Amount: Option[BigDecimal] = None,
  Payment_Currency_Reference: Option[generated2.CurrencyObjectType] = None,
  Amount_as_Text: Option[String] = None,
  Amount_in_Pay_Group_Currency: Option[BigDecimal] = None,
  Pay_Group_Currency_Reference: Option[generated2.CurrencyObjectType] = None,
  Check_Number: Option[String] = None,
  Payment_Reference_Number: Option[String] = None,
  Payment_Memo: Option[String] = None,
  Company_Reference: Option[generated2.CompanyObjectType] = None,
  Originating_Contact_Data: Seq[generated2.Originating_Party_WWS_DataType] = Nil,
  Originating_Bank_Data: Seq[generated2.Originating_Party_Bank_DataType] = Nil,
  Receiving_Party_Reference: Option[generated2.PayeeObjectType] = None,
  Receiving_Party_Contact_Data: Seq[generated2.Receiving_Party_WWS_DataType] = Nil,
  Receiving_Party_Bank_Data: Seq[generated2.Receiving_Party_Bank_DataType] = Nil)
      


/** Contains the components of a name in local script, such as the First Name and Last Name, for supporting countries.
*/
case class Local_Name_DataType(First_Name: Option[String] = None,
  Middle_Name: Option[String] = None,
  Last_Name: Seq[generated2.Local_Last_Name_DataType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Local_Name = attributes.get("@Local_Name") map { _.as[String]}
  lazy val Local_Script = attributes.get("@Local_Script") map { _.as[String]}
}

      


/** Encapsulating element for all Local Last Name data, for countries supporting Last Name or Secondary Last Name in local script.
*/
case class Local_Last_Name_DataType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Type = attributes.get("@Type") map { _.as[String]}
}

      


/** Specifies an allocation for a given date range
*/
case class Costing_Allocation_Interval_DataType(Costing_Interval_Update_Key: Seq[generated2.Costing_Interval_Update_KeyType] = Nil,
  Costing_Override_ID: Option[String] = None,
  Start_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  End_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Costing_Allocation_Detail_Data: Seq[generated2.Costing_Allocation_Detail_Replacement_DataType] = Nil)
      


/** Details of the allocation, (e.g., a set of allocation dimensions and percentages)
*/
case class Costing_Allocation_Detail_Replacement_DataType(Order: String,
  costing_allocation_detail_replacement_datatypeoption: Seq[scalaxb.DataRecord[Any]] = Nil,
  Distribution_Percent: BigDecimal,
  Salary_Over_the_Cap_Costing_Allocation_Detail_Data: Seq[generated2.Salary_Over_the_Cap_Costing_Allocation_Detail_DataType] = Nil)
      

trait Costing_Allocation_Detail_Replacement_DataTypeOption

/** Quarterly Worker Request
*/
case class Get_Quarterly_Worker_Tax_Data_RequestType(Request_Criteria: generated2.Quarterly_Worker_Tax_Data_Request_CriteriaType,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Quarterly_Worker_Tax_Data_Response_GroupType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Request element for Payroll Payee FICA Tax Election data
*/
case class Put_Payroll_Payee_FICA_RequestType(Payroll_Payee_FICA_Data: Option[generated2.Payroll_Payee_FICA_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Response element for Payroll Payee FICA Tax Election data
*/
case class Put_Payroll_Payee_FICA_ResponseType(Payroll_Payee_FICA_Reference: Seq[generated2.Payroll_Payee_Tax_DataObjectType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Response Group
*/
case class Quarterly_Worker_Tax_Data_Response_GroupType(Include_YTD_Data: Option[Boolean] = None,
  Exclude_Active_Flags_for_all_Taxes_Except_SUI: Option[Boolean] = None,
  Exclude_Tax_Filing_Configuration_Data_Element: Option[Boolean] = None,
  Exclude_WA_IIF_Data_Element: Option[Boolean] = None,
  Exclude_Annual_Data_Elements_in_Q4: Option[Boolean] = None,
  Exclude_Payroll_Tax_Authority_Data_Element: Option[Boolean] = None)
      


/** Request Criteria
*/
case class Quarterly_Worker_Tax_Data_Request_CriteriaType(Company_Reference: generated2.CompanyObjectType,
  Calendar_Quarter_Reference: generated2.Calendar_QuarterObjectType,
  Worker_Reference: Seq[generated2.WorkerObjectType] = Nil,
  Field_And_Parameter_Criteria_Data: Option[generated2.Field_And_Parameter_Criteria_DataType] = None)
      


/** Response Data
*/
case class Get_Quarterly_Worker_Tax_Data_ResponseType(Request_Criteria: generated2.Quarterly_Worker_Tax_Data_Request_CriteriaType,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Quarterly_Worker_Tax_Data_Response_GroupType] = None,
  Response_Results: Option[generated2.Response_ResultsType] = None,
  Response_Data: Option[generated2.Quarterly_Worker_Tax_Data_Response_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Response Data
*/
case class Quarterly_Worker_Tax_Data_Response_DataType(Quarterly_Worker_Tax_Filing_Data: Seq[generated2.Quarterly_Worker_Tax_Filing_DataType] = Nil)
      


/** Quarterly Worker Tax Filing Data
*/
case class Quarterly_Worker_Tax_Filing_DataType(Worker_Reference: Option[generated2.WorkerObjectType] = None,
  Company_Reference: Option[generated2.CompanyObjectType] = None,
  Kind_of_Employer_Reference: Option[generated2.Kind_of_Employer_for_Payroll_Tax_FilingObjectType] = None,
  Third_Party_Provides_Sick_Pay_Wu452: Option[Boolean] = None,
  California_SDI_Enabled_for_Company: Option[Boolean] = None,
  California_VDI_Enabled_for_Company: Option[Boolean] = None,
  Calendar_Quarter_Reference: Option[generated2.Calendar_QuarterObjectType] = None,
  Quarter_Name: Option[String] = None,
  Start_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  End_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Quarter_Number: Option[BigDecimal] = None,
  Currency_Reference: Option[generated2.CurrencyObjectType] = None,
  Weeks_Worked: Option[BigDecimal] = None,
  Hours_Worked: Option[BigDecimal] = None,
  Hours_Not_Worked: Option[BigDecimal] = None,
  Seasonal_Worker: Option[Boolean] = None,
  Medical_Coverage: Option[Boolean] = None,
  Outside_Coverage: Option[Boolean] = None,
  Corporate_Officer: Option[Boolean] = None,
  WC_Code_Reference: Option[generated2.Workers_Compensation_CodeObjectType] = None,
  WC_Rate: Option[BigDecimal] = None,
  WC_Exempt: Option[Boolean] = None,
  EE_Class_Code_Indicator_Reference: Option[generated2.Payroll_Reporting_Code__All_ObjectType] = None,
  Corporate_Officer_Type_Reference: Option[generated2.Payroll_Reporting_Code__All_ObjectType] = None,
  Coverage_Type__Unemployment_Workers_Comp_Bothu93: Option[String] = None,
  Payroll_Reporting_Code_Data: Seq[generated2.Worker_Payroll_Reporting_Code_DataType] = Nil,
  Payroll_Tax_Authority_Data: Seq[generated2.Payroll_Tax_Authority_DataType] = Nil,
  Document_Field_Result_Data: Seq[generated2.Document_Field_Result_DataType] = Nil,
  Quarterly_Deduction_Tax_Data: Seq[generated2.Quarterly_Deduction_Tax_Filing_DataType] = Nil,
  WA_IIF_Deduction_Data: Seq[generated2.WA_IIF_Deduction_DataType] = Nil,
  Quarterly_Tax_Configuration_Data_Wrapper: Seq[generated2.Quarterly_Tax_Filing_Configuration_Data_WrapperType] = Nil,
  Worker_Annual_Tax_Data_Wrapper: Seq[generated2.Worker_Annual_Tax_Data_WrapperType] = Nil,
  Worker_Puerto_Rico_Annual_Tax_Data_Wrapper: Seq[generated2.Worker_Puerto_Rico_Annual_Tax_Data_WrapperType] = Nil,
  Worker_Guam_Annual_Tax_Data_Wrapper: Seq[generated2.Worker_Guam_Annual_Tax_Data_WrapperType] = Nil,
  Worker_Virgin_Islands_Annual_Tax_Data_Wrapper: Seq[generated2.Worker_Virgin_Islands_Annual_Tax_Data_WrapperType] = Nil,
  Company_Provides_Dependent_Benefits: Option[Boolean] = None)
      


/** Request Criteria for Periodic Worker Tax Filing Data
*/
case class Periodic_Tax_Filing_Data_Request_CriteriaType(Company_Reference: generated2.CompanyObjectType,
  Include_Related_Companies_for_Legal_Entity: Option[Boolean] = None,
  Result_Completed_From: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Result_Completed_To: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Pay_Group_Reference: Seq[generated2.Pay_GroupObjectType] = Nil,
  Period_Reference: Seq[generated2.PeriodObjectType] = Nil,
  Payment_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  YTD_Tax_Filter: Seq[generated2.YTD_Tax_FilterType] = Nil)
      


/** Get Periodic Worker Tax Filing Data
*/
case class Get_Periodic_Worker_Tax_Filing_Data_RequestType(Request_Criteria: generated2.Periodic_Tax_Filing_Data_Request_CriteriaType,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Periodic_Tax_Filing_Data_Response_GroupType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Response Group for Periodic Worker Tax Filing Response Group
*/
case class Periodic_Tax_Filing_Data_Response_GroupType(Include_QTD_Data: Option[Boolean] = None,
  Include_YTD_Data: Option[Boolean] = None)
      


/** Get Periodic Worker Tax Filing Data Response
*/
case class Get_Periodic_Worker_Tax_Filing_Data_ResponseType(Request_Criteria: generated2.Periodic_Tax_Filing_Data_Request_CriteriaType,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Periodic_Tax_Filing_Data_Response_GroupType] = None,
  Response_Results: Option[generated2.Response_ResultsType] = None,
  Response_Data: Option[generated2.Periodic_Worker_Tax_Filing_Data_Response_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Get Periodic Worker Tax Filing Data Response
*/
case class Periodic_Worker_Tax_Filing_Data_Response_DataType(Periodic_Worker_Tax_Filing_Data: Seq[generated2.Peridoic_Worker_Tax_Filing_DataType] = Nil)
      


/** Peridoic Worker Tax Filing Data
*/
case class Peridoic_Worker_Tax_Filing_DataType(Worker_Reference: generated2.WorkerObjectType,
  Company_Reference: generated2.CompanyObjectType,
  Third_Party_Provides_Sick_Pay_Wu452: Option[Boolean] = None,
  Payroll_Result_Data: Seq[generated2.Payroll_Result_DataType] = Nil)
      


/** Payroll Result Data element
*/
case class Payroll_Result_DataType(Payment_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Result_Start_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Result_End_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Result_Calculation_Moment: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Currency_Reference: Option[generated2.CurrencyObjectType] = None,
  Pay_Group_Reference: Option[generated2.Pay_GroupObjectType] = None,
  Period_Reference: generated2.PeriodObjectType,
  Period_Start_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Period_End_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Third_Party_Sick_Pay: Option[Boolean] = None,
  Payroll_Result_Detail_Data: Seq[generated2.Payroll_Result_Detail_DataType] = Nil)
      


/** Payroll Result Detail Data element
*/
case class Payroll_Result_Detail_DataType(Employer_Paid: Option[Boolean] = None,
  Deduction_Reference: generated2.Payroll_CalculationObjectType,
  Payroll_Tax_Authority_Reference: generated2.Payroll_Tax_AuthorityObjectType,
  Work_PSD_Code: Option[String] = None,
  Resident_PSD_Code: Option[String] = None,
  Tax_Filing_Code: Option[String] = None,
  SUI_Rate: Option[BigDecimal] = None,
  Tax_Withheld: Option[BigDecimal] = None,
  Taxable_Wages: Option[BigDecimal] = None,
  Subject_Wages: Option[BigDecimal] = None,
  Gross_Wages: Option[BigDecimal] = None,
  Tip_Wages: Option[BigDecimal] = None,
  QTD_Data: Option[generated2.QTD_Tax_Filing_Data_for_Periodic_WorkerType] = None,
  YTD_Data: Option[generated2.YTD_Tax_Filing_Data_for_Periodic_WorkerType] = None)
      


/** QTD Tax Filing Data for Periodic Worker
*/
case class QTD_Tax_Filing_Data_for_Periodic_WorkerType(Tax_Withheld: Option[BigDecimal] = None,
  Taxable_Wages: Option[BigDecimal] = None,
  Subject_Wages: Option[BigDecimal] = None,
  Gross_Wages: Option[BigDecimal] = None,
  Tip_Wages: Option[BigDecimal] = None)
      


/** YTD Tax Filing Data for Periodic Worker
*/
case class YTD_Tax_Filing_Data_for_Periodic_WorkerType(Tax_Withheld: Option[BigDecimal] = None,
  Taxable_Wages: Option[BigDecimal] = None,
  Subject_Wages: Option[BigDecimal] = None,
  Gross_Amount: Option[BigDecimal] = None,
  Tip_Wages: Option[BigDecimal] = None)
      


/** Get Periodic Company Tax Filing Data Request element
*/
case class Get_Periodic_Company_Tax_Filing_Data_RequestType(Request_Criteria: generated2.Periodic_Tax_Filing_Data_Request_CriteriaType,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Periodic_Tax_Filing_Data_Response_GroupType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Get Periodic Company Tax Filing Data Response element
*/
case class Get_Periodic_Company_Tax_Filing_Data_ResponseType(Request_Criteria: generated2.Periodic_Tax_Filing_Data_Request_CriteriaType,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Periodic_Tax_Filing_Data_Response_GroupType] = None,
  Response_Results: Option[generated2.Response_ResultsType] = None,
  Response_Data: Option[generated2.Periodic_Company_Tax_Filing_Data_Response_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Periodic Company Tax Filing Data Response Data element
*/
case class Periodic_Company_Tax_Filing_Data_Response_DataType(Periodic_Company_Tax_Filing_Data: Seq[generated2.Periodic_Company_Tax_Filing_DataType] = Nil)
      


/** Periodic Company Tax Filing Data
*/
case class Periodic_Company_Tax_Filing_DataType(Company_Reference: generated2.CompanyObjectType,
  Third_Party_Provides_Sick_Pay_Wu452: Option[Boolean] = None,
  Period_End_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Payment_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Currency_Reference: Option[generated2.CurrencyObjectType] = None,
  Pay_Group_Data: Seq[generated2.Periodic_Company_Tax_Filing_Pay_Group_DataType] = Nil,
  Period_Reference: Seq[generated2.PeriodObjectType] = Nil,
  Frequency_Reference: Seq[generated2.Frequency_BehaviorObjectType] = Nil,
  Third_Party_Sick_Pay: Option[Boolean] = None,
  Employer_Paid: Option[Boolean] = None,
  Deduction_Reference: Option[generated2.Payroll_CalculationObjectType] = None,
  Payroll_Tax_Authority_Reference: Option[generated2.Metadata_Payroll_WorktagObjectType] = None,
  Tax_Filing_Code: Option[String] = None,
  Male_Count: Option[BigDecimal] = None,
  Female_Count: Option[BigDecimal] = None,
  Unknown_Gender_Count: Option[BigDecimal] = None,
  SUI_Rate: Option[BigDecimal] = None,
  Tax_Withheld: Option[BigDecimal] = None,
  Taxable_Wages: Option[BigDecimal] = None,
  Subject_Wages: Option[BigDecimal] = None,
  Gross_Wages: Option[BigDecimal] = None,
  Tip_Wages: Option[BigDecimal] = None,
  QTD_Data: Option[generated2.QTD_Tax_Filing_Data_for_Periodic_CompanyType] = None,
  YTD_Data: Option[generated2.YTD_Tax_Filing_Data_for_Periodic_CompanyType] = None)
      


/** QTD Tax Filing Data for Periodic Company
*/
case class QTD_Tax_Filing_Data_for_Periodic_CompanyType(Tax_Withheld: Option[BigDecimal] = None,
  Taxable_Wages: Option[BigDecimal] = None,
  Subject_Wages: Option[BigDecimal] = None,
  Gross_Wages: Option[BigDecimal] = None)
      


/** YTD Tax Filing Data for Periodic Company
*/
case class YTD_Tax_Filing_Data_for_Periodic_CompanyType(Tax_Withheld: Option[BigDecimal] = None,
  Taxable_Wages: Option[BigDecimal] = None,
  Subject_Wages: Option[BigDecimal] = None,
  Gross_Wages: Option[BigDecimal] = None)
      


/** Wrapper element for Quarterly Deduction Data.
*/
case class Quarterly_Deduction_Tax_Filing_DataType(Third_Party_Sick_Pay: Option[Boolean] = None,
  Employer_Paid: Option[Boolean] = None,
  Deduction_Reference: generated2.Payroll_CalculationObjectType,
  Payroll_Tax_Authority_Reference: Seq[generated2.Metadata_Payroll_WorktagObjectType] = Nil,
  Work_PSD_Code: Option[String] = None,
  Resident_PSD_Code: Option[String] = None,
  Tax_Filing_Code: Option[String] = None,
  SUI_Rate: Option[BigDecimal] = None,
  Active_for_Month_1: Option[Boolean] = None,
  Active_for_12th_Day_Month_1: Option[Boolean] = None,
  Active_for_Month_2: Option[Boolean] = None,
  Active_for_12th_Day_Month_2: Option[Boolean] = None,
  Active_for_Month_3: Option[Boolean] = None,
  Active_for_12th_Day_Month_3: Option[Boolean] = None,
  Employee_Tax_Election_Data: Seq[generated2.Worker_Tax_ElectionsType] = Nil,
  QTD_Data: Option[generated2.QTD_Tax_Filing_Data_for_Quarterly_WorkerType] = None,
  YTD_Data: Option[generated2.YTD_Tax_Filing_Data_for_Quarterly_WorkerType] = None)
      


/** YTD Tax Filing Data for Quarterly Worker
*/
case class YTD_Tax_Filing_Data_for_Quarterly_WorkerType(Tax_Withheld: Option[BigDecimal] = None,
  Taxable_Wages: Option[BigDecimal] = None,
  Subject_Wages: Option[BigDecimal] = None,
  Gross_Wages: Option[BigDecimal] = None,
  Tip_Wages: Option[BigDecimal] = None,
  Uncollected_Tip_Tax: Option[BigDecimal] = None,
  Uncollected_GTL: Option[BigDecimal] = None,
  Wu452_Eligible: Option[Boolean] = None)
      


/** QTD Tax Filing Data for Quarterly Worker
*/
case class QTD_Tax_Filing_Data_for_Quarterly_WorkerType(Tax_Withheld: Option[BigDecimal] = None,
  Taxable_Wages: Option[BigDecimal] = None,
  Subject_Wages: Option[BigDecimal] = None,
  Gross_Wages: Option[BigDecimal] = None,
  Tip_Wages: Option[BigDecimal] = None,
  Uncollected_Tip_Tax: Option[BigDecimal] = None,
  Uncollected_GTL: Option[BigDecimal] = None)
      


/** Wrapper element for Tax Filing Category Data.
*/
case class Quarterly_Tax_Filing_Configuration_Data_WrapperType(Quarterly_Tax_Configuration_Data: Seq[generated2.Quarterly_Tax_Filing_Configuration_DataType] = Nil)
      


/** Wrapper element for Tax Filing Category Data.
*/
case class Quarterly_Tax_Filing_Configuration_DataType(Quarterly_Tax_Category_Data: Seq[generated2.Quarterly_Tax_Filing_Category_DataType] = Nil)
      


/** Tax Category Data
*/
case class Quarterly_Tax_Filing_Category_DataType(Third_Party_Sick_Pay: Option[Boolean] = None,
  Tax_Filing_Category_Reference: Option[generated2.Unique_IdentifierObjectType] = None,
  Total_Tax_Filing_Category_Amount: Option[BigDecimal] = None,
  YTD_Total_Tax_Filing_Category_Amount: Option[BigDecimal] = None)
      


/** Quarterly Worker Tax Filing Data
*/
case class Payroll_Tax_Authority_DataType(Payroll_Tax_Authority_Reference: Option[generated2.Payroll_Tax_AuthorityObjectType] = None,
  Attribute: Option[String] = None,
  Value: Option[String] = None)
      


/** Payroll Payee FICA Medicare and OASDI Data
*/
case class Payroll_Payee_FICA_DataType(Worker_Reference: generated2.WorkerObjectType,
  Position_Reference: Option[generated2.Position_ElementObjectType] = None,
  All_Positions: Option[Boolean] = None,
  Effective_As_Of: javax.xml.datatype.XMLGregorianCalendar,
  Apply_To_Worker: Option[Boolean] = None,
  Medicare_Exempt_Data: Seq[generated2.Medicare_Exempt_DataType] = Nil,
  OASDI_Exempt_Data: Seq[generated2.OASDI_Exempt_DataType] = Nil)
      


/** Container element for Valuation Date Override Data
*/
case class Valuation_Date_Override_DataType(Country_Reference: generated2.CountryObjectType,
  Payroll_Settlement_Valuation_Date: javax.xml.datatype.XMLGregorianCalendar)
      


/** Payroll Payee PT1 Request References
*/
case class Payroll_Payee_PT1_Request_ReferencesType(Payroll_Payee_PT1_Reference: Seq[generated2.Payroll_Payee_PT1ObjectType] = Nil) extends Get_Payroll_Payee_PT1s_RequestTypeOption
      


/** Payroll Payee PT1 Request Criteria [EL]
*/
case class Payroll_Payee_PT1_Request_CriteriaType() extends Get_Payroll_Payee_PT1s_RequestTypeOption
      


/** Payroll Payee PT1 Response Group
*/
case class Payroll_Payee_PT1_Response_GroupType(Include_Reference: Option[Boolean] = None)
      


/** Get Payroll Payee PT1s Request
*/
case class Get_Payroll_Payee_PT1s_RequestType(get_payroll_payee_pt1s_requesttypeoption: Option[scalaxb.DataRecord[generated2.Get_Payroll_Payee_PT1s_RequestTypeOption]] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Payroll_Payee_PT1_Response_GroupType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      

trait Get_Payroll_Payee_PT1s_RequestTypeOption

/** Payroll Payee PT1 Record Data
*/
case class Payroll_Payee_PT1Type(Payroll_Payee_PT1_Reference: Option[generated2.Payroll_Payee_PT1ObjectType] = None,
  Payroll_Payee_PT1_Data: Seq[generated2.Payroll_Payee_PT1_DataType] = Nil)
      


/** Payroll Payee PT1 Response Data
*/
case class Payroll_Payee_PT1_Response_DataType(Payroll_Payee_PT1: Seq[generated2.Payroll_Payee_PT1Type] = Nil)
      


/** Get Payroll Payee PT1s Response
*/
case class Get_Payroll_Payee_PT1s_ResponseType(Request_References: Option[generated2.Payroll_Payee_PT1_Request_ReferencesType] = None,
  Request_Criteria: Option[generated2.Payroll_Payee_PT1_Request_CriteriaType] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Payroll_Payee_PT1_Response_GroupType] = None,
  Response_Results: Option[generated2.Response_ResultsType] = None,
  Response_Data: Option[generated2.Payroll_Payee_PT1_Response_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Payroll Payee PT1 Data
*/
case class Payroll_Payee_PT1_DataType(Payroll_Payee_PT1_Reference: Option[generated2.Payroll_Payee_PT1ObjectType] = None,
  Company_Reference: generated2.CompanyObjectType,
  Worker_Reference: generated2.WorkerObjectType,
  Effective_As_Of: javax.xml.datatype.XMLGregorianCalendar,
  Payroll_State_Authority_Reference: generated2.Payroll_State_AuthorityObjectType,
  Basic_Personal_Amount: Option[BigDecimal] = None,
  Child_Amount: Option[BigDecimal] = None,
  Age_Amount: Option[BigDecimal] = None,
  Age_Amount_Supplement: Option[BigDecimal] = None,
  Senior_Supplementary_Amount_for_Withholding: Option[BigDecimal] = None,
  Amount_for_Workers_65_or_Older: Option[BigDecimal] = None,
  Pension_Income_Amount: Option[BigDecimal] = None,
  Tuition__Education_and_Textbook_Amounts: Option[BigDecimal] = None,
  Disability_Amount: Option[BigDecimal] = None,
  Spouse_or_Commonu45law_Partner_Amount: Option[BigDecimal] = None,
  Spouse_or_Commonu45law_Partner_Amount_Supplement: Option[BigDecimal] = None,
  Additional_Amount: Option[BigDecimal] = None,
  Deduction_for_Living_in_a_Prescribed_Zone: Option[BigDecimal] = None,
  Amount_for_an_Eligible_Dependant: Option[BigDecimal] = None,
  Amount_for_an_Eligible_Dependant_Supplement: Option[BigDecimal] = None,
  Caregiver_Amount: Option[BigDecimal] = None,
  Amount_for_Infirm_Dependants_Age_18_or_Older: Option[BigDecimal] = None,
  Amounts_Transferred_from_your_Spouse_or_Commonu45law_Partner: Option[BigDecimal] = None,
  Amounts_Transferred_from_a_Dependant: Option[BigDecimal] = None,
  Manitoba_Family_Tax_Benefit_Amount: Option[BigDecimal] = None,
  Total_Income_less_than_Total_Claim_Amount: Option[Boolean] = None,
  More_than_One_Employer_Reference: Option[Boolean] = None,
  Dependents_Under_Age_19: Option[BigDecimal] = None,
  Disabled_Dependents: Option[BigDecimal] = None,
  Exempt: Option[Boolean] = None,
  Exempt_from_Health_Contribution: Option[Boolean] = None,
  Last_Updated: Option[javax.xml.datatype.XMLGregorianCalendar] = None)
      


/** Put Payroll Payee PT1 Request
*/
case class Put_Payroll_Payee_PT1_RequestType(Payroll_Payee_PT1_Data: generated2.Payroll_Payee_PT1_DataType,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Shows what record was entered as a response.
*/
case class Put_Payroll_Payee_PT1_ResponseType(Payroll_Payee_PT1_Reference: Option[generated2.Payroll_Payee_PT1ObjectType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Payroll Payee Tax Data Request References element
*/
case class Payroll_Payee_Tax_Data_Request_ReferencesType(Payroll_Payee_Tax_Data_Reference: Seq[generated2.Payroll_Payee_Tax_DataObjectType] = Nil) extends Get_Payroll_Payee_FICAs_RequestTypeOption
      


/** Payroll Payee Tax Data Request Criteria element
*/
case class Payroll_Payee_Tax_Data_Request_CriteriaType(Worker_Reference: Seq[generated2.WorkerObjectType] = Nil,
  Position_Reference: Seq[generated2.Position_ElementObjectType] = Nil,
  Effective_As_Of: Option[javax.xml.datatype.XMLGregorianCalendar] = None) extends Get_Payroll_Payee_FICAs_RequestTypeOption
      


/** Payroll Payee Tax Data Response Group element
*/
case class Payroll_Payee_Tax_Data_Response_GroupType(Include_Reference: Option[Boolean] = None)
      


/** Get Payroll Payee FICAs Request element
*/
case class Get_Payroll_Payee_FICAs_RequestType(get_payroll_payee_ficas_requesttypeoption: Option[scalaxb.DataRecord[generated2.Get_Payroll_Payee_FICAs_RequestTypeOption]] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Payroll_Payee_Tax_Data_Response_GroupType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      

trait Get_Payroll_Payee_FICAs_RequestTypeOption

/** Payroll Payee Tax Data element.
*/
case class Payroll_Payee_Tax_DataType(Payroll_Payee_Tax_Data_Reference: Option[generated2.Payroll_Payee_Tax_DataObjectType] = None,
  Payroll_Payee_FICA_Data: Seq[generated2.Payroll_Payee_FICA_DataType] = Nil)
      


/** Payroll Payee Tax Data Response Data element.
*/
case class Payroll_Payee_Tax_Data_Response_DataType(Payroll_Payee_Tax_Data: Seq[generated2.Payroll_Payee_Tax_DataType] = Nil)
      


/** Get Payroll Payee FICAs Response element
*/
case class Get_Payroll_Payee_FICAs_ResponseType(Request_References: Option[generated2.Payroll_Payee_Tax_Data_Request_ReferencesType] = None,
  Request_Criteria: Option[generated2.Payroll_Payee_Tax_Data_Request_CriteriaType] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Payroll_Payee_Tax_Data_Response_GroupType] = None,
  Response_Results: Option[generated2.Response_ResultsType] = None,
  Response_Data: Option[generated2.Payroll_Payee_Tax_Data_Response_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Payroll Off-cycle Result Override Request References element
*/
case class Payroll_Offu45cycle_Result_Override_Request_ReferencesType(Payroll_Offu45cycle_Payment_Reference: Seq[generated2.Payroll_Offu45cycle_Result_OverrideObjectType] = Nil) extends Get_Payroll_Offu45cycle_Payments_RequestTypeOption
      


/** Payroll Off-cycle Result Override Request Criteria element.
*/
case class Payroll_Offu45cycle_Result_Override_Request_CriteriaType(Payment_ID: Option[String] = None,
  Employee_Reference: Seq[generated2.EmployeeObjectType] = Nil,
  Period_Reference: Seq[generated2.PeriodObjectType] = Nil,
  Run_Category_Reference: Seq[generated2.Run_CategoryObjectType] = Nil,
  Pay_Group_Reference: Seq[generated2.Pay_GroupObjectType] = Nil,
  Batch_ID: Option[String] = None,
  Payment_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Reason_Reference: Seq[generated2.Payroll_Action_ReasonObjectType] = Nil) extends Get_Payroll_Offu45cycle_Payments_RequestTypeOption
      


/** Get Payroll Off-cycle Payments Request element
*/
case class Get_Payroll_Offu45cycle_Payments_RequestType(get_payroll_offu45cycle_payments_requesttypeoption: Option[scalaxb.DataRecord[generated2.Get_Payroll_Offu45cycle_Payments_RequestTypeOption]] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      

trait Get_Payroll_Offu45cycle_Payments_RequestTypeOption

/** Payroll Off-cycle Payment element
*/
case class Payroll_Offu45cycle_PaymentType(Payroll_Offu45cycle_Result_Override_Reference: Option[generated2.Payroll_Offu45cycle_Result_OverrideObjectType] = None,
  Payroll_Offu45cycle_Payment_Data: Seq[generated2.Payroll_Offu45cycle_Payment_Response_DataType] = Nil)
      


/** Payroll Off-cycle Result Override Response Data element
*/
case class Payroll_Offu45cycle_Result_Override_Response_DataType(Payroll_Offu45cycle_Result_Override: Seq[generated2.Payroll_Offu45cycle_PaymentType] = Nil)
      


/** Get Payroll Off-cycle Payments Response element
*/
case class Get_Payroll_Offu45cycle_Payments_ResponseType(Request_References: Option[generated2.Payroll_Offu45cycle_Result_Override_Request_ReferencesType] = None,
  Request_Criteria: Option[generated2.Payroll_Offu45cycle_Result_Override_Request_CriteriaType] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Results: Option[generated2.Response_ResultsType] = None,
  Response_Data: Option[generated2.Payroll_Offu45cycle_Result_Override_Response_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Get Payment Dates for Company and Date Range Request element
*/
case class Get_Company_Payment_Dates_RequestType(Request_Criteria: generated2.Company_Payment_Dates_Request_CriteriaType,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Get Payment Dates for Company and Date Range Response element
*/
case class Get_Company_Payment_Dates_ResponseType(Request_Criteria: Option[generated2.Company_Payment_Dates_Request_CriteriaType] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Results: Option[generated2.Response_ResultsType] = None,
  Response_Data: Option[generated2.Company_Payment_Dates_Response_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Payment Dates for Comapny and Date Range Request Criteria element
*/
case class Company_Payment_Dates_Request_CriteriaType(Company_Reference: generated2.CompanyObjectType,
  Include_Related_Companies_for_Legal_Entity: Option[Boolean] = None,
  Result_Completed_From: javax.xml.datatype.XMLGregorianCalendar,
  Result_Completed_To: javax.xml.datatype.XMLGregorianCalendar)
      


/** Payment Dates for Company and Date Range Data element
*/
case class Company_Payment_Dates_DataType(Company_Reference: Option[generated2.CompanyObjectType] = None,
  Payment_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None)
      


/** Payment Dates for Company and Date Range Response Data element
*/
case class Company_Payment_Dates_Response_DataType(Company_Payment_Dates_Data: Seq[generated2.Company_Payment_Dates_DataType] = Nil)
      


/** Payroll Payee TD1 Request References
*/
case class Payroll_Payee_TD1_Request_ReferencesType(TD1_Election_Reference: Seq[generated2.Payroll_Payee_T1ObjectType] = Nil) extends Get_Payroll_Payee_TD1s_RequestTypeOption
      


/** Payroll Payee TD1 Request Criteria
*/
case class Payroll_Payee_TD1_Request_CriteriaType() extends Get_Payroll_Payee_TD1s_RequestTypeOption
      


/** Payroll Payee TD1 Response Group
*/
case class Payroll_Payee_TD1_Response_GroupType(Include_Reference: Option[Boolean] = None)
      


/** Get Payroll Payee TD1s Request
*/
case class Get_Payroll_Payee_TD1s_RequestType(get_payroll_payee_td1s_requesttypeoption: Option[scalaxb.DataRecord[generated2.Get_Payroll_Payee_TD1s_RequestTypeOption]] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Payroll_Payee_TD1_Response_GroupType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      

trait Get_Payroll_Payee_TD1s_RequestTypeOption

/** Payroll Payee TD1
*/
case class Payroll_Payee_TD1Type(Payroll_Payee_TD1_Data: Seq[generated2.Payroll_Payee_TD1_DataType] = Nil)
      


/** Payroll Payee TD1 Response Data
*/
case class Payroll_Payee_TD1_Response_DataType(Payroll_Payee_TD1: Seq[generated2.Payroll_Payee_TD1Type] = Nil)
      


/** Get Payroll Payee TD1s Response
*/
case class Get_Payroll_Payee_TD1s_ResponseType(Request_References: Option[generated2.Payroll_Payee_TD1_Request_ReferencesType] = None,
  Request_Criteria: Option[generated2.Payroll_Payee_TD1_Request_CriteriaType] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Payroll_Payee_TD1_Response_GroupType] = None,
  Response_Results: Option[generated2.Response_ResultsType] = None,
  Response_Data: Option[generated2.Payroll_Payee_TD1_Response_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Payroll Payee TD1 Data
*/
case class Payroll_Payee_TD1_DataType(Payroll_Payee_TD1_Reference: Option[generated2.Payroll_Payee_T1ObjectType] = None,
  Company_Reference: generated2.CompanyObjectType,
  Worker_Reference: generated2.WorkerObjectType,
  Effective_As_Of: javax.xml.datatype.XMLGregorianCalendar,
  Basic_Personal_Amount: Option[BigDecimal] = None,
  Child_Amount: Option[BigDecimal] = None,
  Age_Amount: Option[BigDecimal] = None,
  Pension_Income_Amount: Option[BigDecimal] = None,
  Tuition__Education_and_Textbook_Amounts: Option[BigDecimal] = None,
  Disability_Amount: Option[BigDecimal] = None,
  Spouse_or_Commonu45law_Partner_Amount: Option[BigDecimal] = None,
  Amount_for_an_Eligible_Dependant: Option[BigDecimal] = None,
  Caregiver_Amount: Option[BigDecimal] = None,
  Amount_for_Infirm_Dependants_Age_18_or_Older: Option[BigDecimal] = None,
  Amounts_Transferred_from_your_Spouse_or_Commonu45law_Partner: Option[BigDecimal] = None,
  Amounts_Transferred_from_a_Dependant: Option[BigDecimal] = None,
  Total_Income_less_than_Total_Claim_Amount: Option[Boolean] = None,
  More_than_One_Employer_or_Payer_at_the_Same_Time: Option[Boolean] = None,
  Deduction_for_Living_in_a_Prescribed_Zone: Option[BigDecimal] = None,
  Additional_Amount: Option[BigDecimal] = None,
  ESS_Electronic_Signature_Confirmation: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Payroll_Payee_Tax_Data_Event_Reference: Option[generated2.Unique_IdentifierObjectType] = None,
  Last_Updated: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Last_Updated_By_Reference: Option[generated2.WorkerObjectType] = None,
  Currency_Reference: Option[generated2.CurrencyObjectType] = None)
      


/** Put Payroll Payee TD1 Request
*/
case class Put_Payroll_Payee_TD1_RequestType(Payroll_Payee_TD1_Data: generated2.Payroll_Payee_TD1_DataType,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Put Payroll Payee T1 Response
*/
case class Put_Payroll_Payee_T1_ResponseType(Payroll_Payee_T1_Reference: Option[generated2.Payroll_Payee_T1ObjectType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Payroll Result Request References
*/
case class Payroll_Result_Request_ReferencesType(Payroll_Result_Reference: Seq[generated2.Unique_IdentifierObjectType] = Nil) extends Get_Payroll_Results_RequestTypeOption
      


/** Canadian Record of Employment Data Request References
*/
case class Canadian_Record_of_Employment_Data_Request_ReferencesType(Canadian_Record_of_Employment_Data_Reference: Seq[generated2.Unique_IdentifierObjectType] = Nil) extends Get_Canadian_Record_of_Employment_Data_RequestTypeOption
      


/** Get Canadian Record of Employment Data Request Criteria
*/
case class Canadian_Record_of_Employment_Data_Request_CriteriaType() extends Get_Canadian_Record_of_Employment_Data_RequestTypeOption
      


/** Canadian Record of Employment Data Response Group
*/
case class Canadian_Record_of_Employment_Data_Response_GroupType(Include_Reference: Option[Boolean] = None)
      


/** Get Canadian Record of Employment Data Request
*/
case class Get_Canadian_Record_of_Employment_Data_RequestType(get_canadian_record_of_employment_data_requesttypeoption: Option[scalaxb.DataRecord[generated2.Get_Canadian_Record_of_Employment_Data_RequestTypeOption]] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Canadian_Record_of_Employment_Data_Response_GroupType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      

trait Get_Canadian_Record_of_Employment_Data_RequestTypeOption

/** Canadian Record of Employment Data
*/
case class Canadian_Record_of_Employment_DataType(Printing_Language: Option[String] = None,
  Issue_Type: Option[String] = None,
  ROE_Data_Reference: Option[generated2.Unique_IdentifierObjectType] = None,
  ROE_Serial_Number: Option[String] = None,
  Employee_ID: Option[String] = None,
  Employer_Payroll_Reference_Number: String,
  Organization_Number: Option[String] = None,
  Folder_CD: Option[String] = None,
  Pay_Period_Type: String,
  Social_Insurance_Number: Option[String] = None,
  ROE_Address_Line_1: String,
  ROE_Address_Line_2: Option[String] = None,
  ROE_Address_Line_3: Option[String] = None,
  Postal_Code: Option[String] = None,
  Legal_First_Name: String,
  Legal_Last_Name: String,
  Legal_Middle_Name: Option[String] = None,
  First_Day_Worked: javax.xml.datatype.XMLGregorianCalendar,
  Last_Day_For_Which_Paid: javax.xml.datatype.XMLGregorianCalendar,
  Final_Pay_Period_End_Date: javax.xml.datatype.XMLGregorianCalendar,
  Employee_Occupation: Option[String] = None,
  ROE_Expected_Recall_Code: Option[String] = None,
  Expected_Date_of_Return: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Total_Insurable_Hours: BigDecimal,
  Total_Insurable_Earnings: BigDecimal,
  ROE_Insurable_Earnings_By_Period_Data: Seq[generated2.Canadian_Record_of_Employment_Insurable_Earnings_By_Period_DataType] = Nil,
  ROE_Reason_Contact_Area_Code_Number: String,
  ROE_Reason_Code_for_ROE_Reason: String,
  ROE_Reason_Phone_Extension_Number: Option[String] = None,
  ROE_Reason_Contact_First_Name: String,
  ROE_Reason_Contact_Last_Name: String,
  ROE_Reason_Contact_Phone_Number: String,
  Vacation_Pay_Amount: Option[BigDecimal] = None,
  Vacation_Pay_Data: Seq[generated2.ROE_Vacation_Pay_DataType] = Nil,
  Statutory_Holiday_Data: Seq[generated2.Canadian_Record_of_Employment_Statutory_Holiday_Detail_DataType] = Nil,
  Other_Monies_Data: Seq[generated2.Other_Monies_DataType] = Nil,
  Comments: Option[String] = None,
  Special_Payment_Data: Seq[generated2.Canadian_Record_of_Employment_Paid_Sick_Leave__Maternity_and_Wage_Loss_Detail_DataType] = Nil,
  Preferred_User_Language: Option[String] = None)
      


/** Get Canadian Record of Employment Data Response
*/
case class Canadian_Record_of_Employment_Data_Response_DataType(Canadian_Record_of_Employment_Data: Seq[generated2.Canadian_Record_of_Employment_DataType] = Nil)
      


/** Get Canadian Record of Employment Data Response
*/
case class Get_Canadian_Record_of_Employment_Data_ResponseType(Request_References: Option[generated2.Canadian_Record_of_Employment_Data_Request_ReferencesType] = None,
  Request_Criteria: Option[generated2.Canadian_Record_of_Employment_Data_Request_CriteriaType] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Canadian_Record_of_Employment_Data_Response_GroupType] = None,
  Response_Results: Option[generated2.Response_ResultsType] = None,
  Response_Data: Option[generated2.Canadian_Record_of_Employment_Data_Response_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Insurable Earnings by Period
*/
case class Canadian_Record_of_Employment_Insurable_Earnings_By_Period_DataType(Payroll_ROE_Period_Number: BigDecimal,
  EI_Earning_Value: BigDecimal)
      


/** ROE History Data element containing attributes needed
*/
case class ROE_History_DataType(Payroll_ROE_History_Data_Reference: Option[generated2.Unique_IdentifierObjectType] = None,
  Company_Reference: generated2.CompanyObjectType,
  Worker_Reference: generated2.WorkerObjectType,
  Payroll_Reference_Number_Reference: generated2.Payroll_Reference_NumberObjectType,
  Date_Issued: javax.xml.datatype.XMLGregorianCalendar,
  Serial_Number: Option[String] = None,
  Return_from_Leave_Date__Prior_to_Go_Liveu93: Option[javax.xml.datatype.XMLGregorianCalendar] = None)
      


/** Canadian Record of Employment History data request element that contains Record of Employment History data to be updated.
*/
case class Put_ROE_History_Data_RequestType(ROE_History_Data: generated2.ROE_History_DataType,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** This is the Canadian Record of Employment History Data Response element
*/
case class Put_ROE_History_Data_ResponseType(ROE_Data_Reference: Option[generated2.Unique_IdentifierObjectType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** The Request References element contains the specific instance set that should be returned in the Get operation. Either a Reference ID or the Workday ID (GUID) should be specified for each instance to be returned.
*/
case class ROE_History_Data_Request_ReferencesType(ROE_History_Data_Reference: Seq[generated2.Unique_IdentifierObjectType] = Nil) extends Get_ROE_History_Data_RequestTypeOption
      


/** ROE History Data Request Criteria Element
*/
case class ROE_History_Data_Request_CriteriaType() extends Get_ROE_History_Data_RequestTypeOption
      


/** The Response Group allows the request to specify which data attributes should be returned in the Response, such as whether to include reference elements, attachments, etc.
*/
case class ROE_History_Data_Response_GroupType(Include_Reference: Option[Boolean] = None)
      


/** Root element for the Request on the Get operation. Contains references, criteria, filter and response group for specifying which instances to return in the Response.
*/
case class Get_ROE_History_Data_RequestType(get_roe_history_data_requesttypeoption: Option[scalaxb.DataRecord[generated2.Get_ROE_History_Data_RequestTypeOption]] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.ROE_History_Data_Response_GroupType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      

trait Get_ROE_History_Data_RequestTypeOption

/** ROE History Data Response Data element
*/
case class ROE_History_Data_Response_DataType(ROE_History: Seq[generated2.ROE_HistoryType] = Nil)
      


/** Get ROE Data History Response
*/
case class Get_ROE_History_Data_ResponseType(Request_References: Option[generated2.ROE_History_Data_Request_ReferencesType] = None,
  Request_Criteria: Option[generated2.ROE_History_Data_Request_CriteriaType] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.ROE_History_Data_Response_GroupType] = None,
  Response_Results: Option[generated2.Response_ResultsType] = None,
  Response_Data: Option[generated2.ROE_History_Data_Response_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** ROE History element containing Payroll ROE instance and necessary data for ROE History
*/
case class ROE_HistoryType(Payroll_ROE_Data_Reference: Option[generated2.Unique_IdentifierObjectType] = None,
  ROE_History_Data: Seq[generated2.ROE_History_DataType] = Nil)
      


/** Other Monies Information
*/
case class Other_Monies_DataType(ROE_Other_Monies_Code: Option[String] = None,
  ROE_Other_Monies_Start_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  ROE_Other_Monies_End_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  ROE_Other_Monies_Amount: Option[BigDecimal] = None)
      


/** Get Payroll Off-cycle payment response.
*/
case class Payroll_Offu45cycle_Payment_Response_DataType(Batch_ID: Option[String] = None,
  Payment_ID: Option[String] = None,
  Employee_Reference: Option[generated2.EmployeeObjectType] = None,
  Payment_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Period_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Payment_Priority: Option[BigDecimal] = None,
  Run_Category_Reference: Option[generated2.Run_CategoryObjectType] = None,
  Pay_Group_Reference: Option[generated2.Pay_GroupObjectType] = None,
  Result_Type_Reference: Option[generated2.Payroll_Offu45cycle_TypeObjectType] = None,
  Replacement: Option[Boolean] = None,
  Reason_Reference: Option[generated2.Payroll_Action_ReasonObjectType] = None,
  payroll_offu45cycle_payment_response_datatypeoption: Option[scalaxb.DataRecord[generated2.Payroll_Offu45cycle_Payment_Response_DataTypeOption]] = None,
  Result_Worktag_Overrides_Data: Seq[generated2.Result_Worktag_Overrides_DataType] = Nil,
  Offu45cycle_Input_Data: Seq[generated2.Offu45cycle_Input_DataType] = Nil)
      

trait Payroll_Offu45cycle_Payment_Response_DataTypeOption

/** Special Payment information
*/
case class Canadian_Record_of_Employment_Paid_Sick_Leave__Maternity_and_Wage_Loss_Detail_DataType(ROE_Special_Payment_Code: Option[String] = None,
  Special_Payment_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Special_Payment_Start_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Special_Payment_End_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Special_Payment_Amount: Option[BigDecimal] = None,
  Per_Day: Option[Boolean] = None,
  Per_Week: Option[Boolean] = None)
      


/** This is the Canadian Record of Employment Data element containing attributes to be updated on the Canadian Record of Employment.
*/
case class Canadian_Record_of_Employment_Data_DataType(Serial_Number: Option[String] = None,
  Date_Issued: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Payroll_Ref_Number: Option[String] = None,
  Business_Number: String,
  SIN: String,
  First_Day_Worked: javax.xml.datatype.XMLGregorianCalendar,
  Last_Day_For_Which_Paid: javax.xml.datatype.XMLGregorianCalendar,
  Final_Pay_Period_Ending_Date: javax.xml.datatype.XMLGregorianCalendar,
  Total_Insurable_Earnings: Option[BigDecimal] = None,
  ROE_Status_Reference: generated2.Unique_IdentifierObjectType)
      


/** This is Canadian Record of Employment Request element that contains the Canadian Record of Employment attributes to be updated.
*/
case class Put_Canadian_Record_of_Employment_Data_RequestType(Canadian_Record_of_Employment_Data_Data: Seq[generated2.Canadian_Record_of_Employment_Data_DataType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** This is the Canadian Record of Employment Data Response element
*/
case class Put_Canadian_Record_of_Employment_Data_ResponseType(Canadian_Record_of_Employment_Data_Reference: Seq[generated2.Unique_IdentifierObjectType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Payroll Result element
*/
case class Pay_Accumulation_Data_for_Get_Payroll_ResultsType(Pay_Accumulation_Reference: Seq[generated2.Payroll_CalculationObjectType] = Nil,
  Amount: Option[BigDecimal] = None,
  QTD_Amount: Option[BigDecimal] = None,
  YTD_Amount: Option[BigDecimal] = None)
      


/** Medicare Exempt Data
*/
case class Medicare_Exempt_DataType(Exempt_from_Medicare: Option[Boolean] = None,
  Medicare_Reason_for_Exemption_Reference: Seq[generated2.Payroll_Payee_FICA_Exempt_ReasonObjectType] = Nil)
      


/** OASDI Exempt Data
*/
case class OASDI_Exempt_DataType(Exempt_from_OASDI: Option[Boolean] = None,
  OASDI_Reason_for_Exemption_Reference: Seq[generated2.Payroll_Payee_FICA_Exempt_ReasonObjectType] = Nil)
      


/** Element to hold all Payroll Payee Request References
*/
case class Payroll_Federal_Wu454_Tax_Election_Request_ReferencesType(Payroll_Payee_Wu454_Reference: Seq[generated2.Unique_IdentifierObjectType] = Nil) extends Get_Payroll_Federal_Wu454_Tax_Elections_RequestTypeOption
      


/** Element to hold all criteria used to select which W-4s to return
*/
case class Payroll_Federal_Wu454_Tax_Election_Request_CriteriaType(Worker_Reference: Seq[generated2.WorkerObjectType] = Nil,
  Company_Reference: Option[generated2.CompanyObjectType] = None,
  Effective_As_Of: Option[javax.xml.datatype.XMLGregorianCalendar] = None) extends Get_Payroll_Federal_Wu454_Tax_Elections_RequestTypeOption
      


/** Element to hold all information about the Payroll Payee W-4 Response Group
*/
case class Payroll_Federal_Wu454_Tax_Election_Response_GroupType(Include_Reference: Option[Boolean] = None)
      


/** Element to hold all Payroll Payee W-4 Request Information
*/
case class Get_Payroll_Federal_Wu454_Tax_Elections_RequestType(get_payroll_federal_wu454_tax_elections_requesttypeoption: Option[scalaxb.DataRecord[generated2.Get_Payroll_Federal_Wu454_Tax_Elections_RequestTypeOption]] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Payroll_Federal_Wu454_Tax_Election_Response_GroupType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      

trait Get_Payroll_Federal_Wu454_Tax_Elections_RequestTypeOption

/** Element to hold all information about a Payroll Payee W-4
*/
case class Payroll_Federal_Wu454_Tax_ElectionType(Payroll_Payee_Wu454_Reference: Option[generated2.Unique_IdentifierObjectType] = None,
  Payroll_Federal_Wu454_Tax_Election_Data: Option[generated2.Payroll_Federal_Wu454_Tax_Election_DataType] = None)
      


/** Element to hold all data to Respond with about the Payroll Payee W-4s
*/
case class Payroll_Federal_Wu454_Tax_Election_Response_DataType(Payroll_Federal_Wu454_Tax_Election: Seq[generated2.Payroll_Federal_Wu454_Tax_ElectionType] = Nil)
      


/** Get Payroll Payee W-4s Response Element
*/
case class Get_Payroll_Federal_Wu454_Tax_Elections_ResponseType(Request_References: Option[generated2.Payroll_Federal_Wu454_Tax_Election_Request_ReferencesType] = None,
  Request_Criteria: Option[generated2.Payroll_Federal_Wu454_Tax_Election_Request_CriteriaType] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Payroll_Federal_Wu454_Tax_Election_Response_GroupType] = None,
  Response_Results: Option[generated2.Response_ResultsType] = None,
  Response_Data: Option[generated2.Payroll_Federal_Wu454_Tax_Election_Response_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Element to hold all of the Data to Put or Get for a W-4
*/
case class Payroll_Federal_Wu454_Tax_Election_DataType(Worker_Reference: generated2.WorkerObjectType,
  Effective_as_of: javax.xml.datatype.XMLGregorianCalendar,
  Company_Reference: generated2.CompanyObjectType,
  Marital_Status_Reference: Option[generated2.Payroll_Withholding_StatusObjectType] = None,
  Number_of_Allowances: Option[BigDecimal] = None,
  Additional_Amount: Option[BigDecimal] = None,
  Exempt: Option[Boolean] = None,
  Nonresident_Alien: Option[Boolean] = None,
  Exempt_from_NRA_Additional_Amount: Option[Boolean] = None,
  Lock_In_Letter: Option[Boolean] = None,
  No_Wage_No_Tax: Option[Boolean] = None)
      


/** Put Payroll Payee W-4 Request Element
*/
case class Put_Payroll_Federal_Wu454_Tax_Election_RequestType(Payroll_Federal_Wu454_Tax_Election_Data: generated2.Payroll_Federal_Wu454_Tax_Election_DataType,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Put Payroll Payee W-4 Response Element
*/
case class Put_Payroll_Federal_Wu454_Tax_Election_ResponseType(Payroll_Payee_Wu454_Reference: Option[generated2.Unique_IdentifierObjectType] = None,
  Put_Payroll_Federal_Wu454_Tax_Election_Response_Data_Element: Option[generated2.Put_Payroll_Federal_Wu454_Tax_Election_Response_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** The data that should be displayed for the W-4 that was made as of the Put
*/
case class Put_Payroll_Federal_Wu454_Tax_Election_Response_DataType(Worker_Reference: generated2.WorkerObjectType,
  Effective_as_of: javax.xml.datatype.XMLGregorianCalendar,
  Company_for_Payroll_Payee_Tax_Data_Reference: generated2.CompanyObjectType)
      


/** Worker Tax Treaty Data
*/
case class Worker_Tax_Treaty_DataType(Worker_Reference: generated2.WorkerObjectType,
  Tax_Year_Reference: generated2.Calendar_YearObjectType,
  Treaty_Benefit_Start_Date: javax.xml.datatype.XMLGregorianCalendar,
  Treaty_Benefit_End_Date: javax.xml.datatype.XMLGregorianCalendar,
  Maximum_Benefit_Amount: Option[BigDecimal] = None,
  No_Treaty_Maximum: Option[Boolean] = None,
  Treaty_Eligibility_Begin: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Treaty_Eligibility_End: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Income_Code_Reference: generated2.Payroll_Income_CodeObjectType,
  Income_Code_Subtype_Reference: Option[generated2.Payroll_Income_Code_SubtypeObjectType] = None,
  Eligible_for_Withholding_Allowance: Option[Boolean] = None,
  Withholding_Rate: Option[BigDecimal] = None,
  Tax_Residency_Country_Code_Reference: generated2.Payroll_IRS_CountryObjectType)
      


/** Create or Update a Tax Treaty for a Worker
*/
case class Put_Payroll_Worker_Tax_Treaty_RequestType(Worker_Tax_Treaty_Data: Option[generated2.Worker_Tax_Treaty_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Put Worker Tax Treaty Response
*/
case class Put_Worker_Tax_Treaty_ResponseType(Worker_Tax_Treaty_Reference: Option[generated2.Payroll_Payee_Tax_Treaty_USAObjectType] = None,
  Worker_Tax_Treaty_Response_Data: Seq[generated2.Put_Worker_Tax_Treaty_Response_DataType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Provide one or more Worker tax Treaty References to retrieve a specific set of Worker Tax Treaties
*/
case class Worker_Tax_Treaties_Request_ReferencesType(Worker_Tax_Treaty_Reference: Seq[generated2.Payroll_Payee_Tax_Treaty_USAObjectType] = Nil) extends Get_Payroll_Worker_Tax_Treaties_RequestTypeOption
      


/** Get Worker Tax Treaty Request Criteria.  The values in this element are used to filter the list of Worker Tax Treaty instances returned by the Get Worker Tax Treaty Request.
*/
case class Worker_Tax_Treaties_Request_CriteriaType(Worker_Reference: Seq[generated2.WorkerObjectType] = Nil,
  Tax_Year_Reference: Option[generated2.Calendar_YearObjectType] = None,
  Income_Code_Reference: Option[generated2.Payroll_Income_CodeObjectType] = None,
  Income_Code_Subtype_Reference: Option[generated2.Payroll_Income_Code_SubtypeObjectType] = None) extends Get_Payroll_Worker_Tax_Treaties_RequestTypeOption
      


/** Get Worker Tax Treaties Request
*/
case class Get_Payroll_Worker_Tax_Treaties_RequestType(get_payroll_worker_tax_treaties_requesttypeoption: Option[scalaxb.DataRecord[generated2.Get_Payroll_Worker_Tax_Treaties_RequestTypeOption]] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      

trait Get_Payroll_Worker_Tax_Treaties_RequestTypeOption

/** Worker Tax Treaty
*/
case class Worker_Tax_TreatyType(Worker_Tax_Treaty_Reference: Option[generated2.Payroll_Payee_Tax_Treaty_USAObjectType] = None,
  Worker_Tax_Treaty_Data: Seq[generated2.Worker_Tax_Treaty_DataType] = Nil)
      


/** Get Worker Tax Treaties Response Data
*/
case class Worker_Tax_Treaties_Response_DataType(Worker_Tax_Treaty: Seq[generated2.Worker_Tax_TreatyType] = Nil)
      


/** Get Worker Tax Treaties Response
*/
case class Get_Worker_Tax_Treaties_ResponseType(Request_References: Option[generated2.Worker_Tax_Treaties_Request_ReferencesType] = None,
  Request_Criteria: Option[generated2.Worker_Tax_Treaties_Request_CriteriaType] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Results: Option[generated2.Response_ResultsType] = None,
  Response_Data: Option[generated2.Worker_Tax_Treaties_Response_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Put Worker Tax Treaty Response Data
*/
case class Put_Worker_Tax_Treaty_Response_DataType(Worker_Reference: Option[generated2.WorkerObjectType] = None,
  Tax_Year_Reference: Option[generated2.Calendar_YearObjectType] = None,
  Income_Code_Reference: Option[generated2.Payroll_Income_CodeObjectType] = None)
      


/** Payroll Involuntary Withholding Order Request References
*/
case class Payroll_Involuntary_Withholding_Order_Request_ReferencesType(Payroll_Involuntary_Withholding_Order_Reference: Seq[generated2.Withholding_OrderObjectType] = Nil) extends Get_Payroll_Involuntary_Withholding_Orders_RequestTypeOption
      


/** Payroll Involuntary Withholding Order Request Criteria
*/
case class Payroll_Involuntary_Withholding_Order_Request_CriteriaType(Worker_Reference: Seq[generated2.WorkerObjectType] = Nil,
  Type_Reference: Seq[generated2.Withholding_Order_TypeObjectType] = Nil,
  Effective_As_Of: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  payroll_involuntary_withholding_order_request_criteriatypeoption: Seq[scalaxb.DataRecord[Any]] = Nil) extends Get_Payroll_Involuntary_Withholding_Orders_RequestTypeOption
      

trait Payroll_Involuntary_Withholding_Order_Request_CriteriaTypeOption

/** Payroll Involuntary Withholding Order Response Group
*/
case class Payroll_Involuntary_Withholding_Order_Response_GroupType(Include_Reference: Option[Boolean] = None)
      


/** Get Payroll Involuntary Withholding Orders Request
*/
case class Get_Payroll_Involuntary_Withholding_Orders_RequestType(get_payroll_involuntary_withholding_orders_requesttypeoption: Option[scalaxb.DataRecord[generated2.Get_Payroll_Involuntary_Withholding_Orders_RequestTypeOption]] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Payroll_Involuntary_Withholding_Order_Response_GroupType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      

trait Get_Payroll_Involuntary_Withholding_Orders_RequestTypeOption

/** Payroll Involuntary Withholding Order Response Data
*/
case class Payroll_Involuntary_Withholding_OrderType(Payroll_Involuntary_Withholding_Order_Reference: Option[generated2.Withholding_OrderObjectType] = None,
  Payroll_Involuntary_Withholding_Order_Data: Seq[generated2.Payroll_Involuntary_Withholding_Order_DataType] = Nil)
      


/** Get Payroll Involuntary Withholding Orders Response
*/
case class Payroll_Involuntary_Withholding_Order_Response_DataType(Payroll_Involuntary_Withholding_Order: Seq[generated2.Payroll_Involuntary_Withholding_OrderType] = Nil)
      


/** Get Payroll Involuntary Withholding Orders Response
*/
case class Get_Payroll_Involuntary_Withholding_Orders_ResponseType(Request_References: Option[generated2.Payroll_Involuntary_Withholding_Order_Request_ReferencesType] = None,
  Request_Criteria: Option[generated2.Payroll_Involuntary_Withholding_Order_Request_CriteriaType] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Payroll_Involuntary_Withholding_Order_Response_GroupType] = None,
  Response_Results: Option[generated2.Response_ResultsType] = None,
  Response_Data: Option[generated2.Payroll_Involuntary_Withholding_Order_Response_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Payroll Involuntary Withholding Order
*/
case class Payroll_Involuntary_Withholding_Order_DataType(Employee_Reference: generated2.WorkerObjectType,
  Withholding_Order_Type_Reference: generated2.Withholding_Order_TypeObjectType,
  payroll_involuntary_withholding_order_datatypeoption: scalaxb.DataRecord[Any],
  Withholding_Order_Additional_Order_Number: Option[String] = None,
  Order_Date: javax.xml.datatype.XMLGregorianCalendar,
  Received_Date: javax.xml.datatype.XMLGregorianCalendar,
  Begin_Date: javax.xml.datatype.XMLGregorianCalendar,
  End_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Company_Reference: Option[generated2.CompanyObjectType] = None,
  Inactive_Order: Option[Boolean] = None,
  Withholding_Order_Amount_Type_Reference: Option[generated2.Withholding_Order_Amount_TypeObjectType] = None,
  payroll_involuntary_withholding_order_datatypeoption2: Option[scalaxb.DataRecord[Any]] = None,
  Pay_Period_Frequency_Reference: generated2.FrequencyObjectType,
  Total_Debt_Amount: Option[BigDecimal] = None,
  Monthly_Limit: Option[BigDecimal] = None,
  Issued_in_Reference: generated2.Payroll_Tax_AuthorityObjectType,
  Deduction_Recipient_Reference: generated2.Deduction_RecipientObjectType,
  Originating_Authority: Option[String] = None,
  Memo: Option[String] = None,
  payroll_involuntary_withholding_order_datatypeoption3: Option[scalaxb.DataRecord[generated2.Payroll_Involuntary_Withholding_Order_DataTypeOption3]] = None,
  Federal_Student_Loan_Data: Seq[generated2.Federal_Student_Loan_Specific_DataType] = Nil,
  Withholding_Order_Fee_Data: Seq[generated2.Withholding_Order_Fee_DataType] = Nil,
  Withholding_Order_Withholding_Frequency_Data: Seq[generated2.Withholding_Order_Withholding_Frequency_DataType] = Nil,
  Currency_Reference: Option[generated2.CurrencyObjectType] = None,
  Deduction_Recipient_Address_Data: Seq[generated2.Address_Information_DataType] = Nil,
  Withholding_Order_ID: Option[String] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Copied_Message = attributes.get("@Copied_Message") map { _.as[String]}
  lazy val Copied_To = attributes.get("@Copied_To") map { _.as[String]}
  lazy val Copied_From = attributes.get("@Copied_From") map { _.as[String]}
  lazy val Processing_Message = attributes.get("@Processing_Message") map { _.as[String]}
  lazy val Copied_From_Date = attributes.get("@Copied_From_Date") map { _.as[javax.xml.datatype.XMLGregorianCalendar]}
  lazy val Copied_To_Date = attributes.get("@Copied_To_Date") map { _.as[javax.xml.datatype.XMLGregorianCalendar]}
}

      

trait Payroll_Involuntary_Withholding_Order_DataTypeOption2
trait Payroll_Involuntary_Withholding_Order_DataTypeOption3
trait Payroll_Involuntary_Withholding_Order_DataTypeOption

/** Payroll Support Order Data
*/
case class Payroll_Support_Order_DataType(payroll_support_order_datatypeoption: Option[scalaxb.DataRecord[Boolean]] = None,
  Custodial_Party_Name: Option[String] = None,
  Supports_Second_Family: Option[Boolean] = None,
  Remittance_ID_Override: Option[String] = None,
  Support_Order_Dependant_Reference: Seq[generated2.Support_Order_Dependent_DataType] = Nil,
  Support_Order_Details_Reference: Seq[generated2.Payroll_Support_Order_Detail_DataType] = Nil,
  Payroll_Local_County_Authority_FIPS_Code: Option[String] = None) extends Payroll_Involuntary_Withholding_Order_DataTypeOption3
      

trait Payroll_Support_Order_DataTypeOption

/** Payroll Support Order Detail Data
*/
case class Payroll_Support_Order_Detail_DataType(Order_Form_Amount: Option[BigDecimal] = None,
  payroll_support_order_detail_datatypeoption: Option[scalaxb.DataRecord[Any]] = None,
  Support_Type_Reference: generated2.Support_TypeObjectType,
  Arrears_Over_12_Weeks: Option[Boolean] = None)
      

trait Payroll_Support_Order_Detail_DataTypeOption

/** Put Payroll Involuntary Withholding Order Request
*/
case class Put_Payroll_Involuntary_Withholding_Order_RequestType(put_payroll_involuntary_withholding_order_requesttypeoption: Option[scalaxb.DataRecord[generated2.Put_Payroll_Involuntary_Withholding_Order_RequestTypeOption]] = None,
  Payroll_Involuntary_Withholding_Order_Data: Option[generated2.Payroll_Involuntary_Withholding_Order_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      

trait Put_Payroll_Involuntary_Withholding_Order_RequestTypeOption

/** Put Payroll Involuntary Withholding Order Response
*/
case class Put_Payroll_Involuntary_Withholding_Order_ResponseType(Put_Payroll_Involuntary_Withholding_Order_Response_Data: Seq[generated2.Put_Payroll_Involuntary_Withholding_Order_Response_DataType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Put Payroll Involuntary Withholding Order Response Data
*/
case class Put_Payroll_Involuntary_Withholding_Order_Response_DataType(Withholding_Order_Reference: Option[generated2.Withholding_OrderObjectType] = None,
  Worker_Reference: Option[generated2.WorkerObjectType] = None,
  Withholding_Order_Type: Option[String] = None,
  Withholding_Order_Case_Reference: Option[generated2.Withholding_Order_CaseObjectType] = None)
      


/** Payroll Support Order Lump Sum Data
*/
case class Payroll_Support_Order_Lump_Sum_DataType(Process_in_Regular_Period: Option[Boolean] = None,
  Custodial_Party_Name: Option[String] = None,
  Remittance_ID_Override: Option[String] = None,
  Supports_Second_Family: Option[Boolean] = None,
  Payroll_Local_County_Authority_Reference: Option[generated2.Payroll_Local_County_AuthorityObjectType] = None,
  Dependants_Reference: Seq[generated2.Support_Order_Dependent_DataType] = Nil,
  Support_Order_Detail_Reference: Option[generated2.Payroll_Support_Order_Detail_DataType] = None,
  Payroll_Local_County_Authority_FIPS_Code: Option[String] = None) extends Payroll_Involuntary_Withholding_Order_DataTypeOption3
      


/** State Tax Levy Order Data
*/
case class State_Tax_Levy_Order_DataType(Number_of_Dependents: Option[BigDecimal] = None,
  Payroll_Local_County_Authority_FIPS_Code: Option[String] = None,
  Worker_is_Laborer_or_Mechanic: Option[Boolean] = None,
  State_Tax_Levy_Federal_Data: Option[generated2.State_Tax_Levy_Federal_DataType] = None,
  State_Tax_Levy_Dependant_Reference: Seq[generated2.Federal_Tax_Levy_Dependent_ReferenceType] = Nil,
  Good_Cause_Limit_Percent: Option[BigDecimal] = None,
  Process_Until_Reference: Option[generated2.Withholding_Order_Override_Completion_CriteriaObjectType] = None,
  Prorate_Until_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None) extends Payroll_Involuntary_Withholding_Order_DataTypeOption3
      


/** Include this element to Amend or Terminate an existing Support Order.
*/
case class Payroll_Support_Order_Amend_or_Terminate_DataType(Support_Order_Reference: Option[generated2.Support_OrderObjectType] = None) extends Put_Payroll_Involuntary_Withholding_Order_RequestTypeOption
      


/** Federal Data used in State Tax Levy Withholding Orders
*/
case class State_Tax_Levy_Federal_DataType(Part_3_Effective_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Pay_Period_Exemption_Override_Amount: Option[BigDecimal] = None,
  Payroll_Marital_Status_Reference: Option[generated2.Payroll_Marital_Status_ReferenceType] = None,
  Personal_Exemptions: Option[BigDecimal] = None,
  Additional_65__or_Blind_Exemptions: Option[BigDecimal] = None,
  Termination_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None)
      


/** Pay Group Data element for Pay Group Rerences
*/
case class Periodic_Company_Tax_Filing_Pay_Group_DataType(Pay_Group_Reference: Option[generated2.Pay_GroupObjectType] = None)
      


/** Change No Retro Processing Prior to Data
*/
case class Change_No_Retro_Processing_Prior_To_DataType(Employee_Reference: generated2.EmployeeObjectType,
  Proposed_No_Retro_Processing_Prior_To: Option[javax.xml.datatype.XMLGregorianCalendar] = None)
      


/** Change No Retro Processing Prior To Request.
*/
case class Change_No_Retro_Processing_Prior_To_RequestType(Business_Process_Parameters: Option[generated2.Business_Process_ParametersType] = None,
  Change_No_Retro_Processing_Prior_To_Data: generated2.Change_No_Retro_Processing_Prior_To_DataType,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Put No Retro Processing Prior to date for worker Response.
*/
case class Change_No_Retro_Processing_Prior_To_ResponseType(Payroll_Retro_Worker_Data_Event_Reference: Option[generated2.Unique_IdentifierObjectType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** This is the parent tag for the list of Statutory Holiday information
*/
case class Canadian_Record_of_Employment_Statutory_Holiday_Detail_DataType(ROE_Detail_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  ROE_Detail_Amount: Option[BigDecimal] = None)
      


/** Washington Industrial Insurance Fund Data:  Contains position based Workers Compensation data
*/
case class WA_IIF_Deduction_DataType(Payroll_Tax_Authority_Reference: Seq[generated2.Metadata_Payroll_WorktagObjectType] = Nil,
  Position_Reference: Seq[generated2.PositionObjectType] = Nil,
  Workers_Compensation_Code_Reference: Seq[generated2.Workers_Compensation_CodeObjectType] = Nil,
  Workers_Compensation_Rate_Reference: Option[BigDecimal] = None,
  Washington_Industrial_Insurance_Fund_QTD_Value: Option[BigDecimal] = None,
  Washington_Industrial_Insurance_Fund_YTD_Value: Option[BigDecimal] = None,
  QTD_Taxable_Hours: Option[BigDecimal] = None,
  YTD_Taxable_Hours: Option[BigDecimal] = None)
      


/** Contains request criteria for the multiple worksite report.
*/
case class Multiple_Worksite_Report_Request_CriteriaType(Company_Reference: generated2.CompanyObjectType,
  Calendar_Quarter_Reference: generated2.Calendar_QuarterObjectType,
  Payroll_Tax_Authority_Reference: Seq[generated2.Payroll_State_AuthorityObjectType] = Nil)
      


/** Request for a multiple worksite report.
*/
case class Get_Multiple_Worksite_Report_RequestType(Request_Criteria: generated2.Multiple_Worksite_Report_Request_CriteriaType,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Response for a Get Multiple Worksites Report request.
*/
case class Get_Multiple_Worksite_Report_ResponseType(Request_Criteria: generated2.Multiple_Worksite_Report_Request_CriteriaType,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Results: Option[generated2.Response_ResultsType] = None,
  Response_Data: Option[generated2.Multiple_Worksite_Report_Response_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Contains the data for the multiple worksite report response.
*/
case class Multiple_Worksite_Report_Response_DataType(Multiple_Worksite_Report_Data: Option[generated2.Multiple_Worksite_Report_DataType] = None)
      


/** Data for the multiple worksite report.
*/
case class Multiple_Worksite_Report_DataType(Company_Reference: Option[generated2.CompanyObjectType] = None,
  Company_Legal_Name: Option[String] = None,
  Company_FEIN: Option[String] = None,
  Calendar_Year_Reference: Option[generated2.Calendar_YearObjectType] = None,
  Calendar_Quarter_Reference: Option[generated2.Calendar_QuarterObjectType] = None,
  Quarter_Number: Option[BigDecimal] = None,
  Multiple_Worksite_Report_State_Data: Seq[generated2.Multiple_Worksite_Report_State_DataType] = Nil)
      


/** Data for the state tax authority which has Locations (Business Sites) with workers who receive wages subject to unemployment insurance.
*/
case class Multiple_Worksite_Report_State_DataType(State_Tax_Authority_Reference: Option[generated2.Payroll_Tax_AuthorityObjectType] = None,
  State_UI_Account_Number: Option[String] = None,
  Worksite_Data: Seq[generated2.Worksite_DataType] = Nil)
      


/** Data for Location (Business Site).  Includes identification, address, number of employees, and wages.
*/
case class Worksite_DataType(Worksite_Reference: Option[generated2.LocationObjectType] = None,
  Trade_Name: Option[String] = None,
  Worksite_Street_Address: Option[String] = None,
  Worksite_City: Option[String] = None,
  Worksite_State: Option[String] = None,
  Worksite_Zip_Code: Option[String] = None,
  Worksite_Expanded_Zip_Code: Option[String] = None,
  Worksite_Identification_Code: Option[String] = None,
  Worksite_Description: Option[String] = None,
  Employees_Active_Month_1_Day_12: Option[BigDecimal] = None,
  Employees_Active_Month_2_Day_12: Option[BigDecimal] = None,
  Employees_Active_Month_3_Day_12: Option[BigDecimal] = None,
  Wages: Option[BigDecimal] = None)
      


/** Element to hold all Payroll Limit Override Reference Response.
*/
case class Payroll_Limit_Override_Request_ReferencesType(Payroll_Limit_Override_Reference: Seq[generated2.Payroll_Limit_OverrideObjectType] = Nil) extends Get_Payroll_Limit_Overrides_RequestTypeOption
      


/** Element to hold all criteria used to select Payroll Limit Override.
*/
case class Payroll_Limit_Override_Request_CriteriaType(Worker_Reference: Seq[generated2.WorkerObjectType] = Nil,
  Pay_Component_Reference: Seq[generated2.Limit_InterfaceObjectType] = Nil,
  Period_Start_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Period_End_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None) extends Get_Payroll_Limit_Overrides_RequestTypeOption
      


/** Element to hold all information about the Payroll Limit Override Response Group
*/
case class Payroll_Limit_Override_Response_GroupType(Include_Reference: Option[Boolean] = None)
      


/** Element to hold all Payroll Limit Override Request Information
*/
case class Get_Payroll_Limit_Overrides_RequestType(get_payroll_limit_overrides_requesttypeoption: Option[scalaxb.DataRecord[generated2.Get_Payroll_Limit_Overrides_RequestTypeOption]] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Payroll_Limit_Override_Response_GroupType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      

trait Get_Payroll_Limit_Overrides_RequestTypeOption

/** Element to hold all information about Payroll Limit Override.
*/
case class Payroll_Limit_OverrideType(Payroll_Limit_Override_Reference: Option[generated2.Payroll_Limit_OverrideObjectType] = None,
  Payroll_Limit_Override_Data: Option[generated2.Payroll_Limit_Override_DataType] = None)
      


/** Element to hold all data to Respond about Payroll Limit Override.
*/
case class Payroll_Limit_Override_Response_DataType(Payroll_Limit_Override: Seq[generated2.Payroll_Limit_OverrideType] = Nil)
      


/** Element to hold the Payroll Limit Override Response.
*/
case class Get_Payroll_Limit_Overrides_ResponseType(Request_References: Option[generated2.Payroll_Limit_Override_Request_ReferencesType] = None,
  Request_Criteria: Option[generated2.Payroll_Limit_Override_Request_CriteriaType] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Payroll_Limit_Override_Response_GroupType] = None,
  Response_Results: Option[generated2.Response_ResultsType] = None,
  Response_Data: Option[generated2.Payroll_Limit_Override_Response_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Element to hold all information about the Payroll Limit Override Data for Put or Get.
*/
case class Payroll_Limit_Override_DataType(ID: Option[String] = None,
  Worker_Reference: generated2.WorkerObjectType,
  Position_Reference: Option[generated2.Position_ElementObjectType] = None,
  Limit_Interface_Data: Seq[generated2.Limit_Interface_DataType] = Nil,
  Period_Start_Date: javax.xml.datatype.XMLGregorianCalendar,
  Period_End_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Use_Limit_Override_Value: Option[Boolean] = None,
  Limit_Override_Value: Option[BigDecimal] = None)
      


/** Element to hold all Payroll Limit Override Request Information for Put.
*/
case class Put_Payroll_Limit_Override_RequestType(Payroll_Limit_Override_Reference: Option[generated2.Payroll_Limit_OverrideObjectType] = None,
  Payroll_Limit_Override_Data: Option[generated2.Payroll_Limit_Override_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Put Payroll Limit Override Reponse Element.
*/
case class Put_Payroll_Limit_Override_ResponseType(Payroll_Limit_Override_Reference: Option[generated2.Payroll_Limit_OverrideObjectType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Submit only when updating or deleting an existing Costing Allocation Interval.  One key (Costing Override ID or Start Date) is required.
*/
case class Costing_Interval_Update_KeyType(costing_interval_update_keytypeoption: scalaxb.DataRecord[Any],
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Delete = attributes.get("@Delete") map { _.as[Boolean]}
}

      

trait Costing_Interval_Update_KeyTypeOption

/** Request criteria (specific and universal) for the Get Worker Costing Allocations service.
*/
case class Get_Worker_Costing_Allocations_RequestType(Request_Criteria: Option[generated2.Worker_Costing_Allocations_Request_CriteriaType] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Worker_Costing_Allocations_Response_GroupType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Specific request criteria for the Get Worker Costing Allocations service.
*/
case class Worker_Costing_Allocations_Request_CriteriaType(Costing_Override_Criteria: Option[generated2.Costing_Override_CriteriaType] = None,
  Include_All_Worker_Costing_Allocations: Option[Boolean] = None,
  Include_All_Position_Restrictions_Costing_Allocations: Option[Boolean] = None,
  Include_Only_Current_Costing_Override_Interval: Option[Boolean] = None)
      


/** Configure the content returned for the Get Worker Costing Allocations service.
*/
case class Worker_Costing_Allocations_Response_GroupType(Exclude_Allocation_Detail_Data: Option[Boolean] = None)
      


/** High-level criteria identifying individual Costing Allocation Overrides to be returned by the Get Worker Costing Allocations service.
*/
case class Costing_Override_CriteriaType(Worker_Reference: Seq[generated2.WorkerObjectType] = Nil,
  Position_Restriction_Reference: Seq[generated2.Position_RestrictionsObjectType] = Nil)
      


/** Wrapper for the data returned by the Get Worker Costing Allocations service.
*/
case class Get_Worker_Costing_Allocations_ResponseType(Request_Criteria: Option[generated2.Worker_Costing_Allocations_Request_CriteriaType] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Worker_Costing_Allocations_Response_GroupType] = None,
  Response_Results: Option[generated2.Response_ResultsType] = None,
  Response_Data: Option[generated2.Worker_Costing_Allocations_Response_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Wrapper for the data returned by the Get Worker Costing Allocations service.
*/
case class Worker_Costing_Allocations_Response_DataType(Worker_Costing_Allocations_Data: Seq[generated2.Worker_Costing_Allocations_DataType] = Nil)
      


/** Primary (Worker or Position Restrictions) and Secondary (Position and Earning) keys identifying the level of the costing allocation data.
*/
case class Worker_Costing_Allocations_DataType(worker_costing_allocations_datatypeoption: scalaxb.DataRecord[generated2.Worker_Costing_Allocations_DataTypeOption],
  Position_Reference: Option[generated2.Position_ElementObjectType] = None,
  Earning_Reference: Option[generated2.Earning__All_ObjectType] = None,
  Worker_Costing_Allocation_Interval_Data: Seq[generated2.Worker_Costing_Allocation_Interval_DataType] = Nil)
      

trait Worker_Costing_Allocations_DataTypeOption

/** Costing Allocation Data effective over a specified date range.
*/
case class Worker_Costing_Allocation_Interval_DataType(Costing_Override_ID: Option[String] = None,
  Start_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  End_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Worker_Costing_Allocation_Detail_Data: Seq[generated2.Worker_Costing_Allocation_Detail_DataType] = Nil)
      


/** Details of the allocation, (e.g., a set of allocation dimensions and percentages)
*/
case class Worker_Costing_Allocation_Detail_DataType(Order: Option[String] = None,
  Default_from_Organization_Assignment: Option[Boolean] = None,
  Costing_Override_Worktag_Reference: Seq[generated2.Tenanted_Payroll_WorktagObjectType] = Nil,
  Distribution_Percent: Option[BigDecimal] = None,
  Salary_Over_the_Cap_Costing_Allocation_Detail_Data: Seq[generated2.Salary_Over_the_Cap_Costing_Allocation_Detail_DataType] = Nil)
      


/** Element to hold all Payroll Payee Request References
*/
case class Payroll_Payee_RPP_or_DPSP_Registration_Number_Request_ReferencesType(Payroll_Payee_RPP_or_DPSP_Registration_Number_Reference: Seq[generated2.Payroll_Payee_RPP_or_DPSP_Registration_NumbersObjectType] = Nil)
      


/** Element to hold all information about the Payroll Payee RPP or DPSP Registration Number Response Group
*/
case class Payroll_Payee_RPP_or_DPSP_Registration_Number_Response_GroupType(Include_Reference: Option[Boolean] = None)
      


/** Get Payroll Payee RPP or DPSP Registration Numbers Request
*/
case class Get_Payroll_Payee_RPP_or_DPSP_Registration_Numbers_RequestType(Request_References: Option[generated2.Payroll_Payee_RPP_or_DPSP_Registration_Number_Request_ReferencesType] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Payroll_Payee_RPP_or_DPSP_Registration_Number_Response_GroupType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Element to hold all information about the Payroll Payee RPP or DPSP Registration Number Response Group
*/
case class Payroll_Payee_RPP_or_DPSP_Registration_NumberType(Payroll_Payee_RPP_or_DPSP_Registration_Number_Reference: Option[generated2.Payroll_Payee_RPP_or_DPSP_Registration_NumbersObjectType] = None,
  Payroll_Payee_RPP_or_DPSP_Registration_Number_Data: Seq[generated2.Payroll_Payee_RPP_or_DPSP_Registration_Number_DataType] = Nil)
      


/** Element to hold all data to Respond with about the Payroll Payee RPP or DPSP Registration Numbers
*/
case class Payroll_Payee_RPP_or_DPSP_Registration_Number_Response_DataType(Payroll_Payee_RPP_or_DPSP_Registration_Number: Seq[generated2.Payroll_Payee_RPP_or_DPSP_Registration_NumberType] = Nil)
      


/** Get Payroll Payee RPP or DPSP Registration Numbers Response Element
*/
case class Get_Payroll_Payee_RPP_or_DPSP_Registration_Numbers_ResponseType(Request_References: Option[generated2.Payroll_Payee_RPP_or_DPSP_Registration_Number_Request_ReferencesType] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Payroll_Payee_RPP_or_DPSP_Registration_Number_Response_GroupType] = None,
  Response_Results: Option[generated2.Response_ResultsType] = None,
  Response_Data: Option[generated2.Payroll_Payee_RPP_or_DPSP_Registration_Number_Response_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Payroll Payee RPP or DPSP Registration Number Data
*/
case class Payroll_Payee_RPP_or_DPSP_Registration_Number_DataType(Payroll_Payee_RPP_or_DPSP_Registration_Number_Reference: Option[generated2.Payroll_Payee_RPP_or_DPSP_Registration_NumbersObjectType] = None,
  Company_Reference: generated2.CompanyObjectType,
  Worker_Reference: generated2.WorkerObjectType,
  Effective_Date: javax.xml.datatype.XMLGregorianCalendar,
  RPP_or_DPSP_Registration_Number: String,
  Last_Updated: Option[javax.xml.datatype.XMLGregorianCalendar] = None)
      


/** RPP or DPSP Registration Number Record Data
*/
case class Put_Payroll_Payee_RPP_or_DPSP_Registration_Number_RequestType(Payroll_Payee_RPP_or_DPSP_Registration_Number_Data: Option[generated2.Payroll_Payee_RPP_or_DPSP_Registration_Number_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Shows what record was entered as a response.
*/
case class Put_Payroll_Payee_RPP_or_DPSP_Registration_Number_ResponseType(Payroll_Payee_RPP_or_DPSP_Registration_Number_Reference: Option[generated2.Payroll_Payee_RPP_or_DPSP_Registration_NumbersObjectType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Request Criteria used to filter State and Local Tax Elections.
*/
case class Payroll_USA_State_and_Local_Tax_Election_Request_CriteriaType(Company_Reference: Option[generated2.CompanyObjectType] = None,
  Worker_Reference: Seq[generated2.WorkerObjectType] = Nil,
  Effective_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None)
      


/** Response Group for Payroll USA State and Local Tax Elections
*/
case class Payroll_USA_State_and_Local_Tax_Election_Response_GroupType(Include_Reference: Option[Boolean] = None)
      


/** Request for Get Payroll USA State and Local Tax Elections
*/
case class Get_Payroll_USA_State_and_Local_Tax_Elections_RequestType(Request_Criteria: Option[generated2.Payroll_USA_State_and_Local_Tax_Election_Request_CriteriaType] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Payroll_USA_State_and_Local_Tax_Election_Response_GroupType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Response for Get Payroll USA State and Local Tax Elections
*/
case class Payroll_State_and_Local_Tax_Election_Response_DataType(Payroll_State_and_Local_Tax_Election: Seq[generated2.Payroll_Payee_State_and_Local_Tax_ElectionsType] = Nil)
      


/** Root element for the Response on the Get operation. Contains the instances returned by the Get operation and their accompanying data.
*/
case class Get_Payroll_USA_State_and_Local_Tax_Elections_ResponseType(Request_Criteria: Option[generated2.Payroll_USA_State_and_Local_Tax_Election_Request_CriteriaType] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Payroll_USA_State_and_Local_Tax_Election_Response_GroupType] = None,
  Response_Results: Option[generated2.Response_ResultsType] = None,
  Response_Data: Option[generated2.Payroll_State_and_Local_Tax_Election_Response_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Payroll State and Local Tax Election Response Data
*/
case class Payroll_Payee_State_and_Local_Tax_ElectionsType(Worker_Reference: Option[generated2.WorkerObjectType] = None,
  Company_Reference: Option[generated2.CompanyObjectType] = None,
  Effective_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Payroll_State_Authority_Data: Seq[generated2.State_Tax_Election_DataType] = Nil)
      


/** State Income Tax Election Data
*/
case class Payroll_Payee_State_Election_for_State_and_LocalType(Effective_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Married_Filing_Jointly_Optional_Calculation: Option[Boolean] = None,
  Payroll_Withholding_Status_Reference: Option[generated2.Payroll_Withholding_StatusObjectType] = None,
  Veteran_Exemption: Option[Boolean] = None,
  Exemption_for_Dependents_Complete: Option[BigDecimal] = None,
  Exemption_for_Dependents_Joint_Custody: Option[BigDecimal] = None,
  Allowance_on_Special_Deduction: Option[Boolean] = None,
  New_Jersey_Rate_Table_Reference: Option[generated2.Payroll_Withholding_StatusObjectType] = None,
  Dependent_Allowance: Option[BigDecimal] = None,
  Number_of_Allowances: Option[BigDecimal] = None,
  Number_of_Allowances_Reference: Option[generated2.Payroll_Constant_NumberObjectType] = None,
  Estimated_Deductions: Option[BigDecimal] = None,
  Exemptions: Option[BigDecimal] = None,
  Withholding_Exemption: Option[BigDecimal] = None,
  Employee_Blind: Option[Boolean] = None,
  Additional_Amount: Option[BigDecimal] = None,
  Additional_Percent: Option[BigDecimal] = None,
  Services_Localized_in_Illinois: Option[Boolean] = None,
  Reciprocity_Tax_Credit_Amount: Option[BigDecimal] = None,
  XMLNAME_6A: Option[Boolean] = None,
  XMLNAME_6B: Option[Boolean] = None,
  XMLNAME_6C: Option[Boolean] = None,
  XMLNAME_6D: Option[Boolean] = None,
  Certificate_of_Nonu45Residence: Option[Boolean] = None,
  Certificate_of_Residence: Option[Boolean] = None,
  Certificate_of_Withholding_Exemption_and_County_Status: Option[Boolean] = None,
  Lock_In_Letter: Option[Boolean] = None,
  Allocation_Percent: Option[BigDecimal] = None,
  Withholding_Percent_Reference: Option[generated2.Payroll_Constant_PercentObjectType] = None,
  Pay_Period_Amount: Option[BigDecimal] = None,
  Spouse_Indicator: Option[Boolean] = None,
  Fullu45time_Student_Indicator: Option[Boolean] = None,
  Head_of_Household: Option[Boolean] = None,
  Annual_Tax_Credits: Option[BigDecimal] = None,
  Additional_Allowance: Option[BigDecimal] = None,
  Reduced_Withholding_Amount: Option[BigDecimal] = None,
  No_Wage_No_Tax: Option[Boolean] = None,
  Exempt: Option[Boolean] = None,
  Exempt_Reason_Reference: Option[generated2.Unique_IdentifierObjectType] = None,
  Withholding_Substantiated: Option[Boolean] = None,
  Inactivate_State_Tax: Option[Boolean] = None,
  MSRR_Exempt: Option[Boolean] = None,
  Entrepreneur_Exemption: Option[Boolean] = None,
  Domicile_State_Reference: Option[generated2.Payroll_State_AuthorityObjectType] = None,
  Increase_or_Decrease_Withholding_Amount: Option[BigDecimal] = None,
  Lower_Tax_Rate_or_Low_Income: Option[Boolean] = None)
      


/** Payroll State and Local Tax Elections
*/
case class State_Tax_Election_DataType(Payroll_State_Authority_Reference: Option[generated2.Payroll_State_AuthorityObjectType] = None,
  State_Income_Tax_Data: Seq[generated2.Payroll_Payee_State_Election_for_State_and_LocalType] = Nil,
  State_Unemployment_Data: Option[generated2.Payroll_Payee_SUTA_Electon_for_State_and_LocalType] = None,
  Earned_Income_Credit_Data: Option[generated2.Payroll_Payee_EIC_Election_for_State_and_LocalType] = None,
  Payroll_State_County_Tax_Data: Seq[generated2.Payroll_Payee_County_Election_for_State_and_LocalType] = Nil,
  Payroll_State_City_Tax_Data: Seq[generated2.Payroll_Payee_City_Election_for_State_and_LocalType] = Nil,
  Payroll_State_School_District_Tax_Data: Seq[generated2.Payroll_Payee_School_District_Election_for_State_and_LocalType] = Nil,
  Payroll_State_Other_Tax_Data: Seq[generated2.Payroll_Payee_Other_Election_for_State_and_LocalType] = Nil)
      


/** State Unemployment Exemption Data
*/
case class Payroll_Payee_SUTA_Electon_for_State_and_LocalType(Effective_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Exempt: Option[Boolean] = None)
      


/** Earned Income Credit Election
*/
case class Payroll_Payee_EIC_Election_for_State_and_LocalType(Effective_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Exempt: Option[Boolean] = None,
  Number_of_Allowances: Option[BigDecimal] = None)
      


/** State County Tax Election Data
*/
case class Payroll_Payee_County_Election_for_State_and_LocalType(Effective_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Tax_Address_Type_Reference: generated2.Tax_Address_TypeObjectType,
  Payroll_Local_County_Authority_Reference: generated2.Payroll_Local_AuthorityObjectType,
  County_Additional_Amount: Option[BigDecimal] = None,
  Inactivate_State_Tax: Option[Boolean] = None)
      


/** Local City Tax Election
*/
case class Payroll_Payee_City_Election_for_State_and_LocalType(Effective_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Tax_Address_Type_Reference: generated2.Tax_Address_TypeObjectType,
  Payroll_Local_City_Authority_Reference: Option[generated2.Payroll_Local_AuthorityObjectType] = None,
  Exemptions: Option[BigDecimal] = None,
  Withholding_Percent_Reference: Option[generated2.Payroll_Constant_PercentObjectType] = None,
  Previous_Employer_Deducted_Amount: Option[BigDecimal] = None,
  Additional_Amount: Option[BigDecimal] = None,
  Nonresident_Alien: Option[Boolean] = None,
  Certificate_of_Nonu45Residence: Option[Boolean] = None,
  Allocation_Percent: Option[BigDecimal] = None,
  Low_Income_Threshold: Option[BigDecimal] = None,
  Exempt: Option[Boolean] = None,
  Exempt_Reason_Reference: Option[generated2.Payroll_Constant_TextObjectType] = None,
  Inactivate_State_Tax: Option[Boolean] = None)
      


/** Local School District Tax Election Data
*/
case class Payroll_Payee_School_District_Election_for_State_and_LocalType(Effective_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Payroll_Local_School_District_Authority_Reference: Option[generated2.Payroll_Local_AuthorityObjectType] = None,
  Exempt: Option[Boolean] = None,
  Exempt_Reason_Reference: Option[generated2.Payroll_Constant_TextObjectType] = None,
  Previous_Employer_Deducted_Amount: Option[BigDecimal] = None,
  Inactivate_State_Tax: Option[Boolean] = None)
      


/** Tax Election for Other State Taxes
*/
case class Payroll_Payee_Other_Election_for_State_and_LocalType(Effective_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Tax_Address_Type_Reference: generated2.Tax_Address_TypeObjectType,
  Payroll_Other_Authority_Reference: Option[generated2.Payroll_Local_AuthorityObjectType] = None,
  Exempt: Option[Boolean] = None,
  Inactive: Option[Boolean] = None)
      


/** State and Local Tax Elections for USA Payroll State Authorities
*/
case class Put_Payroll_USA_State_and_Local_Tax_Election_RequestType(Company_Reference: generated2.CompanyObjectType,
  Worker_Reference: generated2.WorkerObjectType,
  Effective_Date: javax.xml.datatype.XMLGregorianCalendar,
  Payroll_USA_State_and_Local_Tax_Election_Data: Seq[generated2.State_Tax_Election_DataType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** The results of the last Put Payroll USA State and Local Tax Election Put Request
*/
case class Put_Payroll_USA_State_and_Local_Tax_Election_ResponseType(Company_Reference: Option[generated2.CompanyObjectType] = None,
  Worker_Reference: Option[generated2.WorkerObjectType] = None,
  Effective_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Element to hold Payroll Payee Ongoing Jurisdiction Request References information
*/
case class Payroll_Payee_Ongoing_Work_Jurisdiction_Tax_Election_Request_ReferencesType(Payroll_Payee_Ongoing_Jurisdiction_Reference: Seq[generated2.Unique_IdentifierObjectType] = Nil) extends Get_Payroll_Payee_Ongoing_Work_Jurisdiction_Tax_Election_RequestTypeOption
      


/** Element to hold Payroll Payee Ongoing Jurisdiction Request Criteria Information
*/
case class Payroll_Payee_Ongoing_Work_Jurisdiction_Tax_Election_Request_CriteriaType(Worker_Reference: Seq[generated2.WorkerObjectType] = Nil,
  Company_Reference: Option[generated2.CompanyObjectType] = None,
  Effective_as_Of: Option[javax.xml.datatype.XMLGregorianCalendar] = None) extends Get_Payroll_Payee_Ongoing_Work_Jurisdiction_Tax_Election_RequestTypeOption
      


/** Element to hold all Payroll Payee Ongoing Work Jurisdiction Tax Election Request Information
*/
case class Get_Payroll_Payee_Ongoing_Work_Jurisdiction_Tax_Election_RequestType(get_payroll_payee_ongoing_work_jurisdiction_tax_election_requesttypeoption: Option[scalaxb.DataRecord[generated2.Get_Payroll_Payee_Ongoing_Work_Jurisdiction_Tax_Election_RequestTypeOption]] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      

trait Get_Payroll_Payee_Ongoing_Work_Jurisdiction_Tax_Election_RequestTypeOption

/** Element to hold Payroll Payee Ongoing Jurisdiction Response Data Information
*/
case class Payroll_Payee_Ongoing_Work_Jurisdiction_Tax_Election_Response_DataType(Payroll_Payee_Ongoing_Work_Jurisdiction_Tax_Election: Seq[generated2.Payroll_Payee_Ongoing_Work_Jurisdiction_Tax_ElectionType] = Nil)
      


/** Element to hold Get Payroll Payee Ongoing Work Jurisdiction Tax Election Response Information
*/
case class Get_Payroll_Payee_Ongoing_Work_Jurisdiction_Tax_Election_ResponseType(Request_References: Option[generated2.Payroll_Payee_Ongoing_Work_Jurisdiction_Tax_Election_Request_ReferencesType] = None,
  Request_Criteria: Option[generated2.Payroll_Payee_Ongoing_Work_Jurisdiction_Tax_Election_Request_CriteriaType] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Results: Option[generated2.Response_ResultsType] = None,
  Response_Data: Option[generated2.Payroll_Payee_Ongoing_Work_Jurisdiction_Tax_Election_Response_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Element to hold Payroll Payee Ongoing Jurisdiction Response Data Information
*/
case class Payroll_Payee_Ongoing_Work_Jurisdiction_Tax_ElectionType(Payroll_Payee_Ongoing_Work_Jurisdiction_Tax_Election_Reference: Option[generated2.Unique_IdentifierObjectType] = None,
  Payroll_Payee_Ongoing_Work_Jurisdiction_Tax_Election_Data: Option[generated2.Payroll_Payee_Ongoing_Work_Jurisdiction_Tax_Election_DataType] = None)
      


/** Element to hold Payroll Payee Ongoing Jurisdiction Tax Election Data Information
*/
case class Payroll_Payee_Ongoing_Work_Jurisdiction_Tax_Election_DataType(Worker_for_Tax_Election_Reference: generated2.WorkerObjectType,
  Effective_Date: javax.xml.datatype.XMLGregorianCalendar,
  Company_for_Tax_Election_Reference: Option[generated2.CompanyObjectType] = None,
  Inactive: Option[Boolean] = None,
  Payroll_Payee_Ongoing_Jurisdiction_Split: Seq[generated2.Payroll_Payee_Ongoing_Jurisdiction_Splits_Tax_Election_DataType] = Nil)
      


/** Element to hold Payroll Payee Ongoing Jurisdiction Splits Tax Election Data Information
*/
case class Payroll_Payee_Ongoing_Jurisdiction_Splits_Tax_Election_DataType(State_Reference: generated2.Payroll_State_AuthorityObjectType,
  County_Reference: Option[generated2.Payroll_Local_County_AuthorityObjectType] = None,
  City_Reference: Option[generated2.Payroll_Local_City_AuthorityObjectType] = None,
  Other_Reference: Option[generated2.Payroll_Other_AuthorityObjectType] = None,
  Allocation_Percent: BigDecimal)
      


/** Element to hold Payroll Payee Ongoing Work Jurisdiction Tax Election Request Information
*/
case class Put_Payroll_Payee_Ongoing_Work_Jurisdiction_Tax_Election_RequestType(Payroll_Payee_Ongoing_Work_Jurisdiction_Tax_Election_Data: generated2.Payroll_Payee_Ongoing_Work_Jurisdiction_Tax_Election_DataType,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Element to hold Payroll Payee Ongoing Work Jurisdiction Tax Election Response Information
*/
case class Put_Payroll_Payee_Ongoing_Work_Jurisdiction_Tax_Election_ResponseType(Put_Payroll_Payee_Ongoing_Jurisdiction_Reference: Option[generated2.Unique_IdentifierObjectType] = None,
  Ongoing_Jurisdiction_Response_Tax_Election_Data: Option[generated2.Put_Payroll_Payee_Ongoing_Work_Jurisdiction_Tax_Election_Response_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Element to hold Payroll Payee Ongoing Jurisdiction Tax Election Response Data Information
*/
case class Put_Payroll_Payee_Ongoing_Work_Jurisdiction_Tax_Election_Response_DataType(Worker_for_Tax_Election_Reference: generated2.WorkerObjectType,
  Effective_Date: javax.xml.datatype.XMLGregorianCalendar,
  Company_for_Tax_Election_Reference: generated2.CompanyObjectType)
      


/** Custom Organizations Worktag Data
*/
case class Custom_Organization_Worktag_DataType(Organization_Type_Reference: Option[generated2.Organization_TypeObjectType] = None,
  Custom_Organization_Worktag_Reference: Option[generated2.Custom_OrganizationObjectType] = None)
      


/** Federal Student Loan Specific Data
*/
case class Federal_Student_Loan_Specific_DataType(Department_of_Education_Student_Loan: Option[Boolean] = None)
      


/** Put Import Process Response element
*/
case class Put_Import_Process_ResponseType(Import_Process_Reference: Option[generated2.Web_Service_Background_Process_RuntimeObjectType] = None,
  Header_Instance_Reference: Option[generated2.InstanceObjectType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Monthly Worker Tax Filing Data
*/
case class Monthly_Worker_Tax_Filing_Data_CriteriaType(Company_Reference: generated2.CompanyObjectType,
  Calendar_Year_Reference: generated2.Calendar_YearObjectType,
  Month_Reference: generated2.MonthObjectType,
  As_Of_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None)
      


/** Get Monthly Worker Tax Filing Data Request
*/
case class Get_Monthly_Worker_Tax_Filing_Data_RequestType(Request_Criteria: generated2.Monthly_Worker_Tax_Filing_Data_CriteriaType,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Monthly_Worker_Tax_Filing_Data_Response_GroupType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Monthly Worker Tax Filing Data Response Group
*/
case class Monthly_Worker_Tax_Filing_Data_Response_GroupType(Include_YTD_Data: Option[Boolean] = None)
      


/** Get Monthly Worker Tax Filing Data Response
*/
case class Get_Monthly_Worker_Tax_Filing_Data_ResponseType(Request_Criteria: generated2.Monthly_Worker_Tax_Filing_Data_CriteriaType,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Monthly_Worker_Tax_Filing_Data_Response_GroupType] = None,
  Response_Results: Seq[generated2.Response_ResultsType] = Nil,
  Response_Data: Seq[generated2.Monthly_Worker_Tax_Filing_Data_Response_DataType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Get Monthly Worker Tax Filing Data Response
*/
case class Monthly_Worker_Tax_Filing_Data_Response_DataType(Monthly_Worker_Tax_Filing_Data: Seq[generated2.Monthly_Worker_Tax_Filing_DataType] = Nil)
      


/** Monthly Worker Tax Filing Data
*/
case class Monthly_Worker_Tax_Filing_DataType(Worker_Reference: Option[generated2.WorkerObjectType] = None,
  Company_Reference: Option[generated2.CompanyObjectType] = None,
  Calendar_Year_Reference: Option[generated2.Calendar_YearObjectType] = None,
  Month_Reference: Option[generated2.MonthObjectType] = None,
  Start_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  End_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Currency_Reference: Option[generated2.CurrencyObjectType] = None,
  Weeks_Worked: Option[BigDecimal] = None,
  Hours_Worked: Option[BigDecimal] = None,
  Seasonal_Worker: Option[Boolean] = None,
  Corporate_Officer: Option[Boolean] = None,
  Payroll_Reporting_Code_Data: Seq[generated2.Worker_Payroll_Reporting_Code_DataType] = Nil,
  Monthly_Deduction_Tax_Data: Seq[generated2.Monthly_Tax_Filing_Deduction_DataType] = Nil)
      


/** Monthly Worker Tax Filing Data
*/
case class Monthly_Tax_Filing_Deduction_DataType(Deduction_Reference: generated2.Payroll_CalculationObjectType,
  Payroll_Tax_Authority_Reference: Seq[generated2.Metadata_Payroll_WorktagObjectType] = Nil,
  Tax_Filing_Code: Option[String] = None,
  MTD_Data: Option[generated2.MTD_Tax_Filing_DataType] = None,
  YTD_Data: Option[generated2.YTD_Tax_Filing_DataType] = None)
      


/** Monthly Tax Filing Deduction Data
*/
case class MTD_Tax_Filing_DataType(Tax_Withheld: Option[BigDecimal] = None,
  Taxable_Wages: Option[BigDecimal] = None,
  Subject_Wages: Option[BigDecimal] = None,
  Gross_Wages: Option[BigDecimal] = None)
      


/** Monthly Tax Filing Deduction Data
*/
case class YTD_Tax_Filing_DataType(Tax_Withheld: Option[BigDecimal] = None,
  Taxable_Wages: Option[BigDecimal] = None,
  Subject_Wages: Option[BigDecimal] = None,
  Gross_Wages: Option[BigDecimal] = None)
      


/** Limit Interface for the Payroll Limit Override
*/
case class Limit_Interface_DataType(Pay_Component_Reference: generated2.Pay_ComponentObjectType,
  Related_Calculation__All__Reference: Option[generated2.Related_Calculation__All_ObjectType] = None)
      


/** Data Element for Repository Document Metadata
*/
case class Repository_Document_MetadataType(File_Name: Option[String] = None,
  Created_by: Option[String] = None,
  Date_and_Time_Created: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Report_Tag_Reference: Seq[generated2.Report_Output_TagObjectType] = Nil)
      


/** Successor Employer Request References
*/
case class Successor_Employer_Request_ReferencesType(Successor_Employer_Reference: Seq[generated2.Successor_EmployerObjectType] = Nil) extends Get_Successor_Employers_RequestTypeOption
      


/** Successor Employer Response Group
*/
case class Successor_Employer_Response_GroupType(Include_Reference: Option[Boolean] = None)
      


/** Get Successor Employers Request
*/
case class Get_Successor_Employers_RequestType(get_successor_employers_requesttypeoption: Option[scalaxb.DataRecord[generated2.Successor_Employer_Request_ReferencesType]] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Successor_Employer_Response_GroupType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      

trait Get_Successor_Employers_RequestTypeOption

/** Successor Employer
*/
case class Successor_EmployerType(Successor_Employer_Reference: Option[generated2.Successor_EmployerObjectType] = None,
  Successor_Employer_Data: Option[generated2.Successor_Employer_DataType] = None)
      


/** Successor Employer Response Data
*/
case class Successor_Employer_Response_DataType(Successor_Employer: Seq[generated2.Successor_EmployerType] = Nil)
      


/** Get Successor Employers Response
*/
case class Get_Successor_Employers_ResponseType(Request_References: Option[generated2.Successor_Employer_Request_ReferencesType] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Successor_Employer_Response_GroupType] = None,
  Response_Results: Option[generated2.Response_ResultsType] = None,
  Response_Data: Option[generated2.Successor_Employer_Response_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Successor Employer Data
*/
case class Successor_Employer_DataType(Successor_Employer_Type_Reference: generated2.Company_Relationship_TypeObjectType,
  Acquisition_or_Merger_Date: javax.xml.datatype.XMLGregorianCalendar,
  Payroll_Processing_Begin_Date: javax.xml.datatype.XMLGregorianCalendar,
  Successor_Company_Reference: generated2.CompanyObjectType,
  Predecessor_Company_Reference: Seq[generated2.CompanyObjectType] = Nil,
  Withholding_Order_Type_Reference: Seq[generated2.Withholding_Order_TypeObjectType] = Nil,
  Tax_Authorities_not_Recognizing_Predecessor_Payments_Reference: Seq[generated2.Payroll_Tax_AuthorityObjectType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val ID = attributes.get("@ID") map { _.as[String]}
  lazy val Federal_Tax_ID = attributes.get("@Federal_Tax_ID") map { _.as[String]}
}

      


/** Put Successor Employer Request
*/
case class Put_Successor_Employer_RequestType(Successor_Employer_Reference: Option[generated2.Successor_EmployerObjectType] = None,
  Successor_Employer_Data: Option[generated2.Successor_Employer_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Put Successor Employer Response
*/
case class Put_Successor_Employer_ResponseType(Successor_Employer_Reference: Option[generated2.Successor_EmployerObjectType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** The Data for Off-Cycle Payments, which contains the Result Type, the Reason, and whether or not it is an Additional Payment
*/
case class Offu45Cycle_DataType(Result_Type_Reference: Option[generated2.Payroll_Offu45cycle_TypeObjectType] = None,
  Additional_Pay: Option[Boolean] = None,
  Reason_Reference: Option[generated2.Payroll_Action_ReasonObjectType] = None)
      


/** Message
*/
case class Background_Process_Message_Data_WSType(Timestamp: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Severity: Option[String] = None,
  Message_Summary: Option[String] = None,
  Line_Number: Option[BigDecimal] = None,
  Line_Identifier: Option[String] = None)
      


/** This is the Canadian Payroll ROE Prior History Results Data Element that contains the attributes and instances to be loaded into Workday system for ROE processing.
*/
case class Payroll_ROE_Prior_History_Results_DataType(Employee_Reference: generated2.EmployeeObjectType,
  Company_Reference: generated2.CompanyObjectType,
  Payroll_Reference_Number_Reference: generated2.Payroll_Reference_NumberObjectType,
  Reporting_Period_Reference: generated2.PeriodObjectType,
  EI_Wages: Option[BigDecimal] = None,
  EI_Hours: Option[BigDecimal] = None)
      


/** This is the Canadian ROE Prior History Results Request Element that contains the Data element for the web service requests.
*/
case class Put_Payroll_ROE_Prior_Period_History_Results_RequestType(Payroll_ROE_Prior_Period_History_Results_Data: Option[generated2.Payroll_ROE_Prior_History_Results_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** This is the Canadian Payroll ROE Prior History Results Response Element
*/
case class Put_Payroll_ROE_Prior_Period_History_Results_ResponseType(Payroll_ROE_Prior_Period_History_Results_Reference: Option[generated2.Unique_IdentifierObjectType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Intermediary Bank Account information including Order, Bank Account Type, Currency, Routing Transit Number, etc.
*/
case class Intermediary_Bank_Account_WWS_DataType(Intermediary_Bank_Account_ID: Option[String] = None,
  Intermediary_Bank_Order: Option[String] = None,
  Country_Reference: Option[generated2.CountryObjectType] = None,
  Currency_Reference: Option[generated2.CurrencyObjectType] = None,
  Bank_Account_Nickname: Option[String] = None,
  Bank_Account_Type_Reference: Option[generated2.Bank_Account_TypeObjectType] = None,
  Bank_Name: Option[String] = None,
  Routing_Transit_Number: Option[String] = None,
  Branch_ID: Option[String] = None,
  Branch_Name: Option[String] = None,
  Bank_Account_Number: Option[String] = None,
  Check_Digit: Option[String] = None,
  Bank_Account_Name: Option[String] = None,
  Roll_Number: Option[String] = None,
  IBAN: Option[String] = None,
  SWIFT_Bank_Identification_Code: Option[String] = None,
  Inactive: Option[Boolean] = None,
  Bank_Instructions: Option[String] = None)
      


/** FUTA Record Data
*/
case class Put_Payroll_Payee_FUTA_RequestType(Payroll_Payee_FUTA_Data: Option[generated2.Payroll_Payee_FUTA_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Shows what record was entered as a response.
*/
case class Put_Payroll_Payee_FUTA_ResponseType(Payroll_Payee_FUTA_Reference: Seq[generated2.Payroll_Payee_FUTAObjectType] = Nil,
  Put_Payroll_Payee_FUTA_Response_Data: Seq[generated2.Put_Payroll_Payee_FUTA_Response_DataType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Element to hold all Payroll Payee Request References
*/
case class Payroll_Payee_FUTA_Request_ReferencesType(Payroll_Payee_FUTA_Reference: Seq[generated2.Payroll_Payee_FUTAObjectType] = Nil) extends Get_Payroll_Payee_FUTAs_RequestTypeOption
      


/** Element to hold all criteria used to select which FUTAs to return
*/
case class Payroll_Payee_FUTA_Request_CriteriaType(Worker_Reference: Seq[generated2.WorkerObjectType] = Nil,
  Company_Reference: Option[generated2.CompanyObjectType] = None,
  Effective_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None) extends Get_Payroll_Payee_FUTAs_RequestTypeOption
      


/** Element to hold all information about the Payroll Payee FUTA Response Group
*/
case class Payroll_Payee_FUTA_Response_GroupType(Include_Reference: Option[Boolean] = None)
      


/** The main FUTA Request
*/
case class Get_Payroll_Payee_FUTAs_RequestType(get_payroll_payee_futas_requesttypeoption: Option[scalaxb.DataRecord[generated2.Get_Payroll_Payee_FUTAs_RequestTypeOption]] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Payroll_Payee_FUTA_Response_GroupType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      

trait Get_Payroll_Payee_FUTAs_RequestTypeOption

/** Element to hold all information about a Payroll Payee FUTA
*/
case class Payroll_Payee_FUTAType(Payroll_Payee_FUTA_Reference: Option[generated2.Payroll_Payee_FUTAObjectType] = None,
  Payroll_Payee_FUTA_Data: Option[generated2.Payroll_Payee_FUTA_DataType] = None)
      


/** Element to hold all data to Respond with about the Payroll Payee FUTAs
*/
case class Payroll_Payee_FUTA_Response_DataType(Payroll_Payee_FUTA: Seq[generated2.Payroll_Payee_FUTAType] = Nil)
      


/** Get Payroll Payee FUTAs Response Element
*/
case class Get_Payroll_Payee_FUTAs_ResponseType(Request_References: Option[generated2.Payroll_Payee_FUTA_Request_ReferencesType] = None,
  Request_Criteria: Option[generated2.Payroll_Payee_FUTA_Request_CriteriaType] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Payroll_Payee_FUTA_Response_GroupType] = None,
  Response_Results: Option[generated2.Response_ResultsType] = None,
  Response_Data: Option[generated2.Payroll_Payee_FUTA_Response_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** The data that should be displayed for the FUTA that was made as of the Put
*/
case class Put_Payroll_Payee_FUTA_Response_DataType(Worker_Reference: Option[generated2.WorkerObjectType] = None,
  Company_Reference: Option[generated2.CompanyObjectType] = None,
  Effective_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None)
      


/** Override the pay group default frequency for taxation with a Tax Frequency Override (USA Payroll Only).
*/
case class Tax_Frequency_Override_DataType(Tax_Frequency_Value: Option[BigDecimal] = None,
  Tax_Frequency_Period_Reference: Option[generated2.Time_Unit_for_AnnualizationObjectType] = None)
      


/** Payroll Deduction Recipient Reference element contains the specific instance set containing the requested Payroll Deduction Recipient.
*/
case class Payroll_Deduction_Recipient_Request_ReferencesType(Payroll_Deduction_Recipient_Reference: Seq[generated2.Deduction_RecipientObjectType] = Nil)
      


/** Element Containing Payroll Deduction Recipient Response
*/
case class Payroll_Deduction_Recipient_Response_GroupType(Include_Reference: Option[Boolean] = None)
      


/** Get Payroll Deduction Recipient wrapper element
*/
case class Get_Payroll_Deduction_Recipients_RequestType(Request_References: Option[generated2.Payroll_Deduction_Recipient_Request_ReferencesType] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Payroll_Deduction_Recipient_Response_GroupType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Deduction Recipient Name
*/
case class Payroll_Deduction_RecipientType(Payroll_Deduction_Recipient_Reference: Option[generated2.Deduction_RecipientObjectType] = None,
  Payroll_Deduction_Recipient_Data: Seq[generated2.Payroll_Deduction_Recipient_DataType] = Nil)
      


/** Element Containing Payroll Deduction Recipient Response Data.
When a Deduction Recipient already exists and  is being updated through the Web Service will we be interpreting the absence of business entity and settlement account elements as persisting the existing data. In the event that Business Entity or settlement account Data is being updated through the web service, we will replace the existing data with the new data being added in the Web Service.
*/
case class Payroll_Deduction_Recipient_Response_DataType(Payroll_Deduction_Recipient: Seq[generated2.Payroll_Deduction_RecipientType] = Nil)
      


/** Element Containing Payroll Deduction Recipient Response
*/
case class Get_Payroll_Deduction_Recipients_ResponseType(Request_References: Option[generated2.Payroll_Deduction_Recipient_Request_ReferencesType] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Payroll_Deduction_Recipient_Response_GroupType] = None,
  Response_Results: Option[generated2.Response_ResultsType] = None,
  Response_Data: Option[generated2.Payroll_Deduction_Recipient_Response_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Element Containing Payroll Deduction Recipient Response Data.
When a Deduction Recipient already exists and  is being updated through the Web Service will we be interpreting the absence of business entity and settlement account elements as persisting the existing data. In the event that Business Entity or settlement account Data is being updated through the web service, we will replace the existing data with the new data being added in the Web Service.
*/
case class Payroll_Deduction_Recipient_DataType(Payroll_Deduction_Recipient_Name: String,
  Payroll_Alternate_Deduction_Recipient_Name: Option[String] = None,
  Payroll_Deduction_Recipient_ID: Option[String] = None,
  Payment_Type_Reference: generated2.Payment_TypeObjectType,
  Business_Entity_Data: Option[generated2.Business_Entity_WWS_DataType] = None,
  Settlement_Account_Data: Seq[generated2.Settlement_Account_WWS_DataType] = Nil)
      


/** Wrapper element for all Payroll Deduction Recipient data
*/
case class Put_Payroll_Deduction_Recipient_RequestType(Payroll_Deduction_Recipient_Reference: Option[generated2.Deduction_RecipientObjectType] = None,
  Payroll_Deduction_Recipient_Data: Option[generated2.Payroll_Deduction_Recipient_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Add_Only = attributes.get("@Add_Only") map { _.as[Boolean]}
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Put Payroll Deduction Recipient Wrapper element
*/
case class Put_Payroll_Deduction_Recipient_ResponseType(Payroll_Deduction_Recipient_Reference: Option[generated2.Deduction_RecipientObjectType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** The information required to obtain a full or subset of records containing workers Paycheck Delivery and Payslip Printing options.
*/
case class Get_Paycheck_Deliveries_RequestType(get_paycheck_deliveries_requesttypeoption: Option[scalaxb.DataRecord[generated2.Get_Paycheck_Deliveries_RequestTypeOption]] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Paycheck_Delivery_Response_GroupType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      

trait Get_Paycheck_Deliveries_RequestTypeOption

/** Paycheck Deliveries Response Element contains the request and response information for the request.
*/
case class Get_Paycheck_Deliveries_ResponseType(Request_References: Option[generated2.Paycheck_Delivery_Request_ReferencesType] = None,
  Request_Criteria: Option[generated2.Paycheck_Delivery_Request_CriteriaType] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Paycheck_Delivery_Response_GroupType] = None,
  Response_Results: Option[generated2.Response_ResultsType] = None,
  Response_Data: Option[generated2.Paycheck_Delivery_Response_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Top Level element containing PUT request information.
*/
case class Put_Paycheck_Delivery__Public__RequestType(Paycheck_Delivery_Data: generated2.Paycheck_Delivery_DataType,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Paycheck Printing Preference Record for Worker
*/
case class Put_Paycheck_Delivery__Public__ResponseType(Paycheck_Delivery_Reference: Option[generated2.Paycheck_DeliveryObjectType] = None,
  Worker_Reference: Option[generated2.WorkerObjectType] = None,
  Company_Reference: Option[generated2.CompanyObjectType] = None,
  Paycheck_Delivery_Method_Reference: Option[generated2.Paycheck_Delivery_MethodObjectType] = None,
  Payslip_Printing_Override_Reference: Option[generated2.Payslip_Printing_OverrideObjectType] = None,
  Last_Updated: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Element for the attachments pertaining to a Event entered through a web service.
*/
case class Business_Process_Attachment_DataType(File_Name: String,
  Event_Attachment_Description: Option[String] = None,
  Event_Attachment_Category_Reference: Option[generated2.Event_Attachment_CategoryObjectType] = None,
  File: Option[scalaxb.Base64Binary] = None,
  Content_Type: Option[String] = None)
      


/** Put Single Legal Entity Request
*/
case class Put_Single_Legal_Entity_RequestType(Single_Legal_Entity_Reference: Option[generated2.Single_Legal_EntityObjectType] = None,
  Single_Legal_Entity_Data: Option[generated2.Single_Legal_Entity_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Single Legal Entity Data
*/
case class Single_Legal_Entity_DataType(Reporting_Tax_Year_Reference: generated2.Calendar_YearObjectType,
  Inactive_asu45of_Tax_Year_Reference: Option[generated2.Calendar_YearObjectType] = None,
  Legal_Entity_Reference: generated2.CompanyObjectType,
  Related_Companies_Reference: Seq[generated2.CompanyObjectType] = Nil,
  Withholding_Order_Type_Reference: Seq[generated2.Withholding_Order_TypeObjectType] = Nil,
  Periodic_Combined_Tax_Filing: Option[Boolean] = None,
  Quarterly_Separate_Tax_Filing: Option[Boolean] = None,
  Combined_ACA_Reporting: Option[Boolean] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Federal_Tax_ID = attributes.get("@Federal_Tax_ID") map { _.as[String]}
  lazy val Single_Legal_Entity_Type = attributes.get("@Single_Legal_Entity_Type") map { _.as[String]}
  lazy val Financial_Tax_Reporting = attributes.get("@Financial_Tax_Reporting") map { _.as[String]}
  lazy val Combined_Financial_YE_for_all_companies = attributes.get("@Combined_Financial_YE_for_all_companies") map { _.as[String]}
}

      


/** Put Single Legal Entity Response
*/
case class Put_Single_Legal_Entity_ResponseType(Single_Legal_Entity_Reference: Option[generated2.Single_Legal_EntityObjectType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Get Single Legal Entities Request
*/
case class Get_Single_Legal_Entities_RequestType(get_single_legal_entities_requesttypeoption: Option[scalaxb.DataRecord[generated2.Single_Legal_Entity_Request_ReferencesType]] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Single_Legal_Entity_Response_GroupType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      

trait Get_Single_Legal_Entities_RequestTypeOption

/** Single Legal Entity Request References
*/
case class Single_Legal_Entity_Request_ReferencesType(Single_Legal_Entity_Reference: Seq[generated2.Single_Legal_EntityObjectType] = Nil) extends Get_Single_Legal_Entities_RequestTypeOption
      


/** Single Legal Entity Response Group
*/
case class Single_Legal_Entity_Response_GroupType(Include_Reference: Option[Boolean] = None)
      


/** Get Single Legal Entities Response
*/
case class Get_Single_Legal_Entities_ResponseType(Request_References: Option[generated2.Single_Legal_Entity_Request_ReferencesType] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Single_Legal_Entity_Response_GroupType] = None,
  Response_Results: Option[generated2.Response_ResultsType] = None,
  Response_Data: Option[generated2.Single_Legal_Entity_Response_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Single Legal Entity Response Data
*/
case class Single_Legal_Entity_Response_DataType(Single_Legal_Entity: Seq[generated2.Single_Legal_EntityType] = Nil)
      


/** Single Legal Entity
*/
case class Single_Legal_EntityType(Single_Legal_Entity_Reference: Option[generated2.Single_Legal_EntityObjectType] = None,
  Single_Legal_Entity_Data: Option[generated2.Single_Legal_Entity_DataType] = None)
      


/** Element to hold all criteria used to select which W-2/W-2C Printing Elections to return
*/
case class Wu452_Wu452C_Printing_Election_Request_CriteriaType(Worker_Reference: Option[generated2.WorkerObjectType] = None)
      


/** Element to hold all information about the W-2/W-2C Printing Election Response Group
*/
case class Wu452_Wu452C_Printing_Election_Response_GroupType(Include_Reference: Option[Boolean] = None)
      


/** Element to hold all W-2/W-2C Printing Election Request Information
*/
case class Get_Wu452_Wu452C_Printing_Election_RequestType(Request_References: Option[generated2.Wu452_Wu452C_Printing_Election_Request_ReferencesType] = None,
  Request_Criteria: Option[generated2.Wu452_Wu452C_Printing_Election_Request_CriteriaType] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Wu452_Wu452C_Printing_Election_Response_GroupType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Element to hold all information about a W-2/W-2C Print Election
*/
case class Wu452_Wu452C_Printing_ElectionType(XMLNAME__Worker__Reference: Option[generated2.WorkerObjectType] = None,
  Wu452_Wu452C_Printing_Election_Data: Option[generated2.Wu452_Wu452C_Printing_Election_DataType] = None)
      


/** Element to hold all data to Respond with about the W-2/W-2C Elections
*/
case class Wu452_Wu452C_Printing_Election_Response_DataType(Wu452_Wu452C_Printing_Election: Seq[generated2.Wu452_Wu452C_Printing_ElectionType] = Nil)
      


/** Get W-2/W-2C Printing Election Response Element
*/
case class Get_Wu452_Wu452C_Printing_Election_ResponseType(Request_References: Option[generated2.Wu452_Wu452C_Printing_Election_Request_ReferencesType] = None,
  Request_Criteria: Option[generated2.Wu452_Wu452C_Printing_Election_Request_CriteriaType] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Wu452_Wu452C_Printing_Election_Response_GroupType] = None,
  Response_Results: Option[generated2.Response_ResultsType] = None,
  Response_Data: Option[generated2.Wu452_Wu452C_Printing_Election_Response_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Element to hold all of the Data to Get the W-2/W-2C Print Election info.
*/
case class Wu452_Wu452C_Printing_Election_DataType(Company_Reference: Option[generated2.CompanyObjectType] = None,
  Tax_Document_Delivery_Reference: Option[generated2.Unique_IdentifierObjectType] = None,
  Last_Updated: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Current_Wu452_Wu452C_Printing_Election: Option[String] = None)
      


/** Element to hold all of the Data to Put or Get for a W-2/W-2C Printing Election
*/
case class Wu452_Wu452C_Printing_Election_Request_DataType(Worker_Reference: generated2.WorkerObjectType,
  Company_Reference: Seq[generated2.CompanyObjectType] = Nil,
  Receive_only_electronic_copies_of_Wu452_Wu452C_Reference: Option[Boolean] = None)
      


/** Put W-2/W-2C Printing Election Request Element
*/
case class Put_Wu452_Wu452C_Printing_Election_RequestType(Wu452_Wu452C_Printing_Election_Request_Data: Seq[generated2.Wu452_Wu452C_Printing_Election_Request_DataType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Element to hold W-2/W-2C Printing Election Response Data
*/
case class Put_Wu452_Wu452C_Printing_Election_for_Worker_ResponseType(Worker_with_Updated_Wu452_Wu452C_Print_Election_Reference: Seq[generated2.WorkerObjectType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Element to hold Request References
*/
case class Wu452_Wu452C_Printing_Election_Request_ReferencesType(Company_Reference: generated2.CompanyObjectType)
      


/** Vacation Pay Data - b17a
*/
case class ROE_Vacation_Pay_DataType(Vacation_Pay_Code: Option[String] = None,
  Vacation_Pay_Start_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Vacation_Pay_End_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Vacation_Pay_Amount: Option[BigDecimal] = None)
      


/** Get Tax Levy Deduction Restrictions Request
*/
case class Get_Tax_Levy_Deduction_Restrictions_RequestType(get_tax_levy_deduction_restrictions_requesttypeoption: Option[scalaxb.DataRecord[generated2.Get_Tax_Levy_Deduction_Restrictions_RequestTypeOption]] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Tax_Levy_Deduction_Restriction_Response_GroupType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      

trait Get_Tax_Levy_Deduction_Restrictions_RequestTypeOption

/** Get Tax Levy Deduction Restrictions Response
*/
case class Get_Tax_Levy_Deduction_Restrictions_ResponseType(Request_References: Option[generated2.Tax_Levy_Deduction_Restriction_Request_ReferencesType] = None,
  Request_Criteria: Option[generated2.Tax_Levy_Deduction_Restriction_Request_CriteriaType] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Tax_Levy_Deduction_Restriction_Response_GroupType] = None,
  Response_Results: Option[generated2.Response_ResultsType] = None,
  Response_Data: Option[generated2.Tax_Levy_Deduction_Restrictions_Response_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Tax Levy Deduction Restriction Request References
*/
case class Tax_Levy_Deduction_Restriction_Request_ReferencesType(Tax_Levy_Reference: Seq[generated2.Tax_LevyObjectType] = Nil) extends Get_Tax_Levy_Deduction_Restrictions_RequestTypeOption
      


/** Tax Levy Deduction Restriction Request Criteria
*/
case class Tax_Levy_Deduction_Restriction_Request_CriteriaType(Worker_Reference: Seq[generated2.WorkerObjectType] = Nil,
  Company_Reference: Seq[generated2.CompanyObjectType] = Nil,
  Effective_As_Of: Option[javax.xml.datatype.XMLGregorianCalendar] = None) extends Get_Tax_Levy_Deduction_Restrictions_RequestTypeOption
      


/** Get Tax Levy Deduction Restrictions Response
*/
case class Tax_Levy_Deduction_Restrictions_Response_DataType(Tax_Levy_Deduction_Restriction: Seq[generated2.Tax_Levy_Deduction_RestrictionsType] = Nil)
      


/** Tax Levy Deduction Restriction Response Data
*/
case class Tax_Levy_Deduction_Restriction_DataType(Withholding_Order_ID: Option[String] = None,
  Lock_Tax_Elections: Option[Boolean] = None,
  Baseline_Deduction_Restriction_Data: Option[generated2.Tax_Levy_Deduction_Restriction_Baseline_DataType] = None,
  Override_Deduction_Restriction_Data: Option[generated2.Tax_Levy_Deduction_Restriction_Override_DataType] = None)
      


/** Tax Levy Deduction for Baseline Data
*/
case class Tax_Levy_Deduction_for_Baseline_DataType(Effective_Date: javax.xml.datatype.XMLGregorianCalendar,
  Deduction_Reference: generated2.DeductionObjectType,
  Amount: Option[BigDecimal] = None,
  Percent: Option[BigDecimal] = None)
      


/** Tax Levy Deduction for Override Data
*/
case class Tax_Levy_Deduction_for_Override_DataType(Effective_Date: javax.xml.datatype.XMLGregorianCalendar,
  Deduction_Reference: generated2.DeductionObjectType,
  Amount: Option[BigDecimal] = None,
  Percent: Option[BigDecimal] = None,
  Never_Reduces_DE: Option[Boolean] = None,
  Always_Reduces_DE: Option[Boolean] = None)
      


/** Tax Levy Deduction Restriction Baseline Data
*/
case class Tax_Levy_Deduction_Restriction_Baseline_DataType(Baseline_Data: Seq[generated2.Tax_Levy_Deduction_for_Baseline_DataType] = Nil)
      


/** Tax Levy Deduction Restriction Override Data
*/
case class Tax_Levy_Deduction_Restriction_Override_DataType(Override_Data: Seq[generated2.Tax_Levy_Deduction_for_Override_DataType] = Nil)
      


/** Tax Levy Deduction Restriction Response Group
*/
case class Tax_Levy_Deduction_Restriction_Response_GroupType(Exclude_Baseline_Restrictions: Option[Boolean] = None)
      


/** Put Tax Levy Deduction Restriction Request
*/
case class Put_Tax_Levy_Deduction_Restriction_RequestType(Tax_Levy_Reference: generated2.Tax_LevyObjectType,
  Tax_Levy_Deduction_Restriction_Data: Option[generated2.Tax_Levy_Deduction_Restriction_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Put Tax Levy Deduction Restriction Response
*/
case class Put_Tax_Levy_Deduction_Restriction_ResponseType(Tax_Levy_Reference: Option[generated2.Tax_LevyObjectType] = None,
  Tax_Levy_Deduction_Restriction_Data: Seq[generated2.Tax_Levy_Deduction_Restriction_DataType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Tax Levy Deduction Restrictions
*/
case class Tax_Levy_Deduction_RestrictionsType(Tax_Levy_Reference: Option[generated2.Tax_LevyObjectType] = None,
  Tax_Levy_Deduction_Restriction_Data: Seq[generated2.Tax_Levy_Deduction_Restriction_DataType] = Nil)
      


/** Payroll ID Data
*/
case class Payroll_ID_Data_DisplayType(ID: Option[String] = None,
  Worker_Reference: Option[generated2.WorkerObjectType] = None,
  Effective_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Assignment_Reason: Option[String] = None,
  Automatic_Assignment: Option[Boolean] = None)
      


/** Import Payroll Input Request
*/
case class Import_Payroll_Input_RequestType(Default_Batch_ID: String,
  Payroll_Input_Data: Seq[generated2.Submit_Payroll_Input_DataType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Payroll History Result Request Criteria element.
*/
case class Payroll_History_Result_Request_CriteriaType(Batch_ID_Reference: Seq[generated2.Application_BatchObjectType] = Nil)
      


/** This is the request element for the import payroll off-cycle payment web service background process.
*/
case class Import_Payroll_Offu45cycle_Payment_RequestType(Payroll_Offu45cycle_Payment_Data: Seq[generated2.Payroll_Offu45cycle_Payment_DataType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Tax document delivery data
*/
case class Tax_Document_Delivery_DataType(Worker_Reference: generated2.WorkerObjectType,
  Company_Reference: generated2.CompanyObjectType,
  Form_Group_Reference: generated2.Payroll_Payee_Tax_Report_Type_Delivery_GroupObjectType,
  Override_Default_Delivery: Option[Boolean] = None)
      


/** Request structure for adding or updating a payroll tax document printing election for a worker.
*/
case class Put_Tax_Document_Delivery_RequestType(Tax_Document_Delivery_Reference: Option[generated2.Unique_IdentifierObjectType] = None,
  Tax_Document_Delivery_Data: Option[generated2.Tax_Document_Delivery_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Tax document delivery response
*/
case class Put_Tax_Document_Delivery_ResponseType(Tax_Document_Delivery_Reference: Option[generated2.Unique_IdentifierObjectType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Reference(s) to the tax document delivery election you would like to view
*/
case class Tax_Document_Delivery_Request_ReferencesType(Tax_Document_Delivery_Reference: Seq[generated2.Unique_IdentifierObjectType] = Nil) extends Get_Tax_Document_Deliveries_RequestTypeOption
      


/** Request criteria to determine the tax document delivery elections you would like to view
*/
case class Tax_Document_Delivery_Request_CriteriaType(Company_Reference: generated2.CompanyObjectType,
  Form_Group_Reference: generated2.Payroll_Payee_Tax_Report_Type_Delivery_GroupObjectType,
  Worker_Reference: Seq[generated2.WorkerObjectType] = Nil) extends Get_Tax_Document_Deliveries_RequestTypeOption
      


/** Indicate if you want to Include the tax document delivery election references in the response
*/
case class Tax_Document_Delivery_Response_GroupType(Include_Reference: Option[Boolean] = None)
      


/** This web service is designed to get the payroll year end form printing elections for Worker(s). These elections determine whether the worker will receive a paper copy of their payroll year end form(s).
*/
case class Get_Tax_Document_Deliveries_RequestType(get_tax_document_deliveries_requesttypeoption: Option[scalaxb.DataRecord[generated2.Get_Tax_Document_Deliveries_RequestTypeOption]] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Tax_Document_Delivery_Response_GroupType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      

trait Get_Tax_Document_Deliveries_RequestTypeOption

/** Tax document delivery data
*/
case class Tax_Document_DeliveryType(Tax_Document_Delivery_Reference: Option[generated2.Unique_IdentifierObjectType] = None,
  Tax_Document_Delivery_Data: Seq[generated2.Tax_Document_Delivery_DataType] = Nil)
      


/** Tax document deliveries response
*/
case class Tax_Document_Delivery_Response_DataType(Tax_Document_Delivery: Seq[generated2.Tax_Document_DeliveryType] = Nil)
      


/** Get Tax Document Deliveries Response
*/
case class Get_Tax_Document_Deliveries_ResponseType(Request_References: Option[generated2.Tax_Document_Delivery_Request_ReferencesType] = None,
  Request_Criteria: Option[generated2.Tax_Document_Delivery_Request_CriteriaType] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Tax_Document_Delivery_Response_GroupType] = None,
  Response_Results: Option[generated2.Response_ResultsType] = None,
  Response_Data: Option[generated2.Tax_Document_Delivery_Response_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Import ROE Prior Period History Results Request
*/
case class Import_ROE_Prior_Period_History_Results_RequestType(Payroll_ROE_Prior_Period_History_Results_Data: Seq[generated2.Payroll_ROE_Prior_History_Results_DataType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Get Periodic Company CAN Tax Remittance Data Request element
*/
case class Get_Periodic_Company_CAN_Tax_Remittance_Data_RequestType(Request_Criteria: generated2.Periodic_CAN_Tax_Remittance_Data_Request_CriteriaType,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Periodic_CAN_Tax_Remittance_Data_Response_GroupType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Request Criteria for Periodic Company CAN Tax Remittance Data
*/
case class Periodic_CAN_Tax_Remittance_Data_Request_CriteriaType(Company_Reference: generated2.CompanyObjectType,
  Include_Related_Companies_for_Legal_Entity: Option[Boolean] = None,
  Result_Completed_From: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Result_Completed_To: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Pay_Group_Reference: Seq[generated2.Pay_GroupObjectType] = Nil,
  Period_Reference: Seq[generated2.PeriodObjectType] = Nil,
  Include_WCB: Option[Boolean] = None,
  Payment_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None)
      


/** Response Group for Periodic Company CAN Tax Remittance
*/
case class Periodic_CAN_Tax_Remittance_Data_Response_GroupType(Include_MTD_Data: Option[Boolean] = None,
  Include_QTD_Data: Option[Boolean] = None,
  Include_YTD_Data: Option[Boolean] = None)
      


/** Filter to be used for YTD Results when Payroll Tax Authority and Deductions are specified.
*/
case class YTD_Tax_FilterType(Payroll_Tax_Authority_Reference: Seq[generated2.Payroll_Tax_AuthorityObjectType] = Nil,
  Deduction_Reference: Seq[generated2.Deduction__Workday_Owned_ObjectType] = Nil)
      


/** Get Periodic Company CAN Tax Remittance Data Response element
*/
case class Get_Periodic_Company_CAN_Tax_Remittance_Data_ResponseType(Request_Criteria: generated2.Periodic_CAN_Tax_Remittance_Data_Request_CriteriaType,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Periodic_CAN_Tax_Remittance_Data_Response_GroupType] = None,
  Response_Results: Option[generated2.Response_ResultsType] = None,
  Response_Data: Option[generated2.Periodic_Company_CAN_Tax_Remittance_Data_Response_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Periodic Company CAN Tax Remittance Data Response Data element
*/
case class Periodic_Company_CAN_Tax_Remittance_Data_Response_DataType(Periodic_Company_CAN_Tax_Remittance_Data: Seq[generated2.Periodic_Company_CAN_Tax_Remittance_DataType] = Nil)
      


/** Periodic Company CAN Tax Remittance Data element
*/
case class Periodic_Company_CAN_Tax_Remittance_DataType(Company_Reference: generated2.CompanyObjectType,
  Period_End_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Payment_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Currency_Reference: Option[generated2.CurrencyObjectType] = None,
  Payroll_Tax_Authority_Reference: Option[generated2.Metadata_Payroll_WorktagObjectType] = None,
  Payroll_Tax_Account_Number: Option[String] = None,
  WCB_Classification_Code_Reference: Option[generated2.Workers_Compensation_CodeObjectType] = None,
  WCB_Payroll_Report_Id: Option[String] = None,
  WCB_E_Banking_Number: Option[String] = None,
  Number_Employees_Paid_Last_Period: Option[BigDecimal] = None,
  Pay_Group_Data: Seq[generated2.Periodic_Company_Tax_Filing_Pay_Group_DataType] = Nil,
  Period_Reference: Seq[generated2.PeriodObjectType] = Nil,
  Employer_Paid: Option[Boolean] = None,
  Deduction_Reference: Option[generated2.Payroll_CalculationObjectType] = None,
  Tax_Filing_Code: Option[String] = None,
  Tax_Rate: Option[BigDecimal] = None,
  WCB_Tax_Rate: Option[BigDecimal] = None,
  Tax_Withheld: Option[BigDecimal] = None,
  Taxable_Wages: Option[BigDecimal] = None,
  Subject_Wages: Option[BigDecimal] = None,
  Exempt_Wages: Option[BigDecimal] = None,
  WCB_Insurable_Wages: Option[BigDecimal] = None,
  WCB_Gross_Wages: Option[BigDecimal] = None,
  WCB_Other_Wages: Option[BigDecimal] = None,
  WCB_Excess_Wages: Option[BigDecimal] = None,
  MTD_Data: Option[generated2.MTD_Tax_Remittance_Data_for_Periodic_CompanyType] = None,
  QTD_Data: Option[generated2.QTD_Tax_Remittance_Data_for_Periodic_CompanyType] = None,
  YTD_Data: Option[generated2.YTD_Tax_Remittance_Data_for_Periodic_CompanyType] = None)
      


/** MTD Tax Remittance Data for Periodic Company
*/
case class MTD_Tax_Remittance_Data_for_Periodic_CompanyType(Tax_Withheld: Option[BigDecimal] = None,
  Taxable_Wages: Option[BigDecimal] = None,
  Subject_Wages: Option[BigDecimal] = None,
  Exempt_Wages: Option[BigDecimal] = None,
  WCB_Insurable_Wages: Option[BigDecimal] = None,
  WCB_Gross_Wages: Option[BigDecimal] = None,
  WCB_Other_Wages: Option[BigDecimal] = None,
  WCB_Excess_Wages: Option[BigDecimal] = None)
      


/** QTD Tax Remittance Data for Periodic Company
*/
case class QTD_Tax_Remittance_Data_for_Periodic_CompanyType(Tax_Withheld: Option[BigDecimal] = None,
  Taxable_Wages: Option[BigDecimal] = None,
  Subject_Wages: Option[BigDecimal] = None,
  Exempt_Wages: Option[BigDecimal] = None,
  WCB_Insurable_Wages: Option[BigDecimal] = None,
  WCB_Gross_Wages: Option[BigDecimal] = None,
  WCB_Other_Wages: Option[BigDecimal] = None,
  WCB_Excess_Wages: Option[BigDecimal] = None)
      


/** YTD Tax Remittance Data for Periodic Company
*/
case class YTD_Tax_Remittance_Data_for_Periodic_CompanyType(Tax_Withheld: Option[BigDecimal] = None,
  Taxable_Wages: Option[BigDecimal] = None,
  Subject_Wages: Option[BigDecimal] = None,
  Exempt_Wages: Option[BigDecimal] = None,
  WCB_Insurable_Wages: Option[BigDecimal] = None,
  WCB_Gross_Wages: Option[BigDecimal] = None,
  WCB_Other_Wages: Option[BigDecimal] = None,
  WCB_Excess_Wages: Option[BigDecimal] = None)
      


/** Put Withholding Order Local Minimum Wage Rate Request
*/
case class Put_Withholding_Order_Local_Minimum_Wage_Rate_RequestType(California_Local_Minimum_Wage_Data: Seq[generated2.Put_Withholding_Order_Local_Minimum_Wage_DataType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Put Withholding Order Local Minimum Wage Data
*/
case class Put_Withholding_Order_Local_Minimum_Wage_DataType(put_withholding_order_local_minimum_wage_datatypeoption: Option[scalaxb.DataRecord[generated2.Put_Withholding_Order_Local_Minimum_Wage_DataTypeOption]] = None,
  Effective_Date: javax.xml.datatype.XMLGregorianCalendar,
  Local_Minimum_Wage: Option[BigDecimal] = None,
  Comment: Option[String] = None)
      

trait Put_Withholding_Order_Local_Minimum_Wage_DataTypeOption

/** Put Withholding Order Local Minimum Wage Rate Response
*/
case class Put_Withholding_Order_Local_Minimum_Wage_Rate_ResponseType(Local_Minimum_Wage_Reference: Option[generated2.Unique_IdentifierObjectType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Get Withholding Order Local Minimum Wage Rate Request
*/
case class Get_Withholding_Order_Local_Minimum_Wage_Rate_RequestType(Request_Criteria: Option[generated2.Withholding_Order_Local_Minimum_Wage_Rate_RequestType] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Withholding Order Local Minimum Wage Rate Request
*/
case class Withholding_Order_Local_Minimum_Wage_Rate_RequestType(withholding_order_local_minimum_wage_rate_requesttypeoption: Seq[scalaxb.DataRecord[generated2.Withholding_Order_Local_Minimum_Wage_Rate_RequestTypeOption]] = Nil)
      

trait Withholding_Order_Local_Minimum_Wage_Rate_RequestTypeOption

/** Get Withholding Order Local Minimum Wage Rate Response
*/
case class Get_Withholding_Order_Local_Minimum_Wage_Rate_ResponseType(Request_Criteria: Option[generated2.Withholding_Order_Local_Minimum_Wage_Rate_RequestType] = None,
  Request_Filter: Option[generated2.Response_FilterType] = None,
  Response_Results: Option[generated2.Response_ResultsType] = None,
  Response_Data: Option[generated2.Get_Withholding_Order_Local_Minimum_Wage_Response_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Get Withholding Order Local Minimum Wage Rate Response
*/
case class Get_Withholding_Order_Local_Minimum_Wage_Response_DataType(Withholding_Order_Local_Minimum_Wage_Data: Seq[generated2.Get_Withholding_Order_Local_Minimum_Wage_DataType] = Nil)
      


/** Get Withholding Order Local Minimum Wage Response Data
*/
case class Get_Withholding_Order_Local_Minimum_Wage_DataType(Local_Minimum_Wage_Reference: Option[generated2.Unique_IdentifierObjectType] = None,
  Worker_Reference: Option[generated2.WorkerObjectType] = None,
  Company_Reference: Option[generated2.CompanyObjectType] = None,
  Withholding_Order_Reference: Option[generated2.Withholding_OrderObjectType] = None,
  Effective_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Local_Minimum_Wage_Rate: Option[BigDecimal] = None,
  Comment: Option[String] = None)
      


/** Element to hold all Payroll Tax Mapping on Location Request information
*/
case class Get_Payroll_Tax_Mappings_on_Location_RequestType(get_payroll_tax_mappings_on_location_requesttypeoption: Option[scalaxb.DataRecord[generated2.Get_Payroll_Tax_Mappings_on_Location_RequestTypeOption]] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      

trait Get_Payroll_Tax_Mappings_on_Location_RequestTypeOption

/** Documentation Element to hold Get Payroll Tax Mappings on Location Response information
*/
case class Get_Payroll_Tax_Mappings_on_Location_ResponseType(Request_Reference: Seq[generated2.Payroll_Tax_Mappings_on_Location_Request_ReferencesType] = Nil,
  Request_Criteria: Seq[generated2.Payroll_Tax_Mappings_on_Location_Request_CriteriaType] = Nil,
  Response_Filter: Seq[generated2.Response_FilterType] = Nil,
  Response_Results: Seq[generated2.Response_ResultsType] = Nil,
  get_payroll_tax_mappings_on_location_responsetypeoption: Seq[scalaxb.DataRecord[generated2.Payroll_Tax_Mappings_on_Location_Response_DataType]] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      

trait Get_Payroll_Tax_Mappings_on_Location_ResponseTypeOption

/** Documentation Element to hold Payroll Tax Mapping on Location Request Criteria Information
*/
case class Payroll_Tax_Mappings_on_Location_Request_CriteriaType(Location_Reference: Seq[generated2.LocationObjectType] = Nil,
  Effective_Date_Reference: Option[javax.xml.datatype.XMLGregorianCalendar] = None) extends Get_Payroll_Tax_Mappings_on_Location_RequestTypeOption
      


/** Element to hold Payroll Tax Location Mapping Data information
*/
case class Payroll_Tax_Location_Mapping_DataType(Location_Reference: generated2.LocationObjectType,
  Effective_Date: javax.xml.datatype.XMLGregorianCalendar,
  Inactive: Option[Boolean] = None,
  Payroll_State_Authority_Reference: Option[generated2.Payroll_State_AuthorityObjectType] = None,
  Payroll_Local_County_Authority_Reference: Option[generated2.Payroll_Local_County_AuthorityObjectType] = None,
  Payroll_Local_City_Authority_Reference: Option[generated2.Payroll_Local_City_AuthorityObjectType] = None,
  Payroll_Other_Authority_Reference: Option[generated2.Payroll_Other_AuthorityObjectType] = None)
      


/** Element to hold Payroll Tax Mappings on Location Response Data information
*/
case class Payroll_Tax_Mappings_on_Location_Response_DataType(Payroll_Tax_Location_Mapping: Seq[generated2.Payroll_Tax_Location_MappingType] = Nil) extends Get_Payroll_Tax_Mappings_on_Location_ResponseTypeOption
      


/** Documentation Element to hold Payroll Tax Mappings on Location Request References information
*/
case class Payroll_Tax_Mappings_on_Location_Request_ReferencesType(Payroll_Tax_Location_Mapping_Reference: Seq[generated2.Payroll_Tax_Location_MappingObjectType] = Nil) extends Get_Payroll_Tax_Mappings_on_Location_RequestTypeOption
      


/** Element to hold Payroll Tax Mappings on Location Response Data Information
*/
case class Payroll_Tax_Location_MappingType(Payroll_Tax_Location_Mapping_Reference: Option[generated2.Payroll_Tax_Location_MappingObjectType] = None,
  Payroll_Tax_Location_Mapping_Data: Option[generated2.Payroll_Tax_Location_Mapping_DataType] = None)
      


/** Element to hold Payroll Tax Location Mapping Request Information
*/
case class Put_Payroll_Tax_Mapping_on_Location_RequestType(Payroll_Tax_Location_Mapping_Data: generated2.Payroll_Tax_Location_Mapping_DataType,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Element to hold Payroll Tax Location Mapping Response Information
*/
case class Put_Payroll_Tax_Mapping_on_Location_ResponseType(Put_Payroll_Tax_Location_Mapping_Reference: Option[generated2.Payroll_Tax_Location_MappingObjectType] = None,
  Put_Payroll_Tax_Location_Mapping_Response_Data: Option[generated2.Put_Payroll_Tax_Location_Mapping_Response_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Element to hold Payroll Tax Location Mapping Response Data Information
*/
case class Put_Payroll_Tax_Location_Mapping_Response_DataType(Effective_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Inactive: Option[Boolean] = None,
  Payroll_State_Authority_Reference: Option[generated2.Payroll_State_AuthorityObjectType] = None)
      


/** The element to provide all the variables for Run Pay Calculation.
*/
case class Run_Pay_Calculation_DataType(Period_Reference: Option[generated2.PeriodObjectType] = None,
  Pay_Group_or_Pay_Run_Group_Selection_Reference: Seq[generated2.Pay_Group_Pay_Run_Group_SelectionObjectType] = Nil,
  Run_Category_Reference: Option[generated2.Run_CategoryObjectType] = None,
  Smart_Calculation_Reference: Option[Boolean] = None,
  Based_on_Events_Reference: Seq[generated2.Payroll_Event_CategoryObjectType] = Nil,
  Include_Requires_ReCalculation: Option[Boolean] = None,
  Include_Error: Option[Boolean] = None,
  Include_Not_Yet_Started: Option[Boolean] = None,
  Include_In_Progress: Option[Boolean] = None,
  Accounting_Only_for_Calculation_Criteria: Option[Boolean] = None)
      


/** Initial element for the Put Run Pay Calculation
*/
case class Put_Run_Pay_Calculation_RequestType(Run_Pay_Calculation_Data: generated2.Run_Pay_Calculation_DataType,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Response Element for Put Pay Calculation
*/
case class Put_Run_Pay_Calculation_ResponseType(Application_Instance_Related_Exceptions_Data: Seq[generated2.Application_Instance_Related_Exceptions_DataType] = Nil,
  Background_Process_Runtime_Data: Seq[generated2.Background_Process_Runtime_DataType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Background Process Runtime Data
*/
case class Background_Process_Runtime_DataType(ID: Option[String] = None,
  Background_Process_Message_Data: Seq[generated2.Background_Process_Message_Data_WSType] = Nil)
      


/** EFW2 Year End Worker Filing Data Request
*/
case class Get_EFW2_Year_End_Worker_Filing_Data_RequestType(Request_Criteria: generated2.EFW2_Year_End_Worker_Filing_Data_Request_CriteriaType,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Request Criteria
*/
case class EFW2_Year_End_Worker_Filing_Data_Request_CriteriaType(Company_Reference: generated2.CompanyObjectType,
  Calendar_Year_Reference: generated2.Calendar_YearObjectType,
  Include_All_Workers: Option[Boolean] = None)
      


/** Response Data
*/
case class Get_EFW2_Year_End_Worker_Filing_Data_ResponseType(Request_Criteria: generated2.EFW2_Year_End_Worker_Filing_Data_Request_CriteriaType,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Results: Option[generated2.Response_ResultsType] = None,
  Response_Data: Option[generated2.EFW2_Year_End_Worker_Filing_Response_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Response Data
*/
case class EFW2_Year_End_Worker_Filing_Response_DataType(EFW2_Year_End_Worker_Filing: Seq[generated2.EFW2_Year_End_Worker_FilingType] = Nil)
      


/** Response data for W-2
*/
case class EFW2_Year_End_Worker_FilingType(Wu452_Instance_ID: Option[String] = None,
  Completed_Moment: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  EFW2_Year_End_Worker_Filing_Data: Option[generated2.EFW2_Year_End_Worker_Filing_DataType] = None)
      


/** This element contains the details of the W-2 for a worker.
*/
case class EFW2_Year_End_Worker_Filing_DataType(Worker_Reference: Option[generated2.WorkerObjectType] = None,
  SSN: Option[String] = None,
  Employee_First_Name: Option[String] = None,
  Employee_Middle_Initial: Option[String] = None,
  Employee_Last_Name: Option[String] = None,
  Suffix: Option[String] = None,
  Address_Line_1: Option[String] = None,
  Address_Line_2: Option[String] = None,
  City: Option[String] = None,
  State: Option[String] = None,
  Postal_Code: Option[String] = None,
  Country_Name: Option[String] = None,
  EFW2_Year_End_Worker_Box_Data: Seq[generated2.EFW2_Year_End_Worker_Box_DataType] = Nil,
  EFW2_Deferred_and_Other_Compensation_Data: Seq[generated2.EFW2_Deferred_and_Other_Compensation_DataType] = Nil,
  EFW2_Additional_Data: Seq[generated2.EFW2_Additional_DataType] = Nil,
  EFW2_Other_Data: Seq[generated2.EFW2_Other_DataType] = Nil,
  EFW2_Year_End_Worker_State_Data: Seq[generated2.EFW2_Year_End_Worker_State_DataType] = Nil)
      


/** This element contains the W-2 amounts for boxes 1 through  11.

Box 1 search string:  Wages, tips, and other compensation
Box 2 search string:  Federal income tax withheld
Box 3 search string:  Social security wages
Box 4 search string:  Social security tax withheld
Box 5 search string:  Medicare wages and tips
Box 6 search string:  Medicare tax withheld
Box 7 search string:  Social security tips
Box 8 search string:  Allocated tips
Box 10 search string:  Dependent care benefits
Box 11 NQPS search string:  Non-Qualified Pension-Section 457 Dist YTD
Box 11 NQPNS search string:  Non-Qualified Pension-Non-section 457 Dist YTD
Box 11 NQPSC search string:  Non-Qualified Pension-Section 457 Contrib YTD
Box 11 NQPNSC search string:  Non-Qualified Pension-Non-section 457 Contrib YTD
*/
case class EFW2_Year_End_Worker_Box_DataType(Box_Description: Option[String] = None,
  Amount: Option[BigDecimal] = None)
      


/** Payroll ID Balance Data
*/
case class Payroll_ID_Balance_DataType(Payroll_ID_Detail_Data: Seq[generated2.Payroll_ID_Data_DisplayType] = Nil,
  Balance_Amount: Option[BigDecimal] = None)
      


/** This element contains the worker W-2 amounts for box 12.
*/
case class EFW2_Deferred_and_Other_Compensation_DataType(Code: Option[String] = None,
  Year: Option[String] = None,
  Amount: Option[BigDecimal] = None)
      


/** Wrapper element for Worker Puerto Rico Annual Tax Filing Data.
*/
case class Worker_Puerto_Rico_Annual_Tax_Data_WrapperType(Worker_Puerto_Rico_Annual_Tax_Data: Seq[generated2.Worker_Puerto_Rico_Annual_Tax_DataType] = Nil)
      


/** Worker Puerto Rico Annual Tax Data
*/
case class Worker_Puerto_Rico_Annual_Tax_DataType(Worker_Wu452PR_Data: Seq[generated2.Worker_Wu452PR_DataType] = Nil,
  Employer_Sponsored_Health_Care: Option[BigDecimal] = None,
  Charitable_Contributions: Option[BigDecimal] = None,
  Commissions: Option[BigDecimal] = None,
  Allowances: Option[BigDecimal] = None,
  Reimbursed_Expenses: Option[BigDecimal] = None,
  Governmental_Retirement_Fund: Option[BigDecimal] = None,
  Contributions_to_CODA_Plans: Option[BigDecimal] = None,
  Exempt_Salaries_and_Codes: Seq[generated2.Box_16_Data_WrapperType] = Nil,
  Contributions_to_SADYM_Program: Option[BigDecimal] = None,
  Uncollected_Social_Security_Tax_on_Tips: Option[BigDecimal] = None,
  Uncollected_Medicare_Tax_on_Tips: Option[BigDecimal] = None,
  Control_Number: Option[String] = None)
      


/** Box 16 A-A Data
*/
case class Box_16_Au45A_DataType(Amount: Option[BigDecimal] = None,
  Code: Option[String] = None)
      


/** Box 16 A-B Data
*/
case class Box_16_Au45B_DataType(Amount: Option[BigDecimal] = None,
  Code: Option[String] = None)
      


/** Box 16 Data Wrapper
*/
case class Box_16_Data_WrapperType(Overtime_During_Emergency: Seq[generated2.Box_16_Au45A_DataType] = Nil,
  Overtime_By_Police_Member: Seq[generated2.Box_16_Au45B_DataType] = Nil,
  Stipends: Seq[generated2.Box_16_Au45C_DataType] = Nil,
  Compensation_for_Researcher_or_Scientist: Seq[generated2.Box_16_Au45D_DataType] = Nil,
  Salary_Not_Over_40K: Seq[generated2.Box_16_Au45E_DataType] = Nil,
  Vacation_and_Sick_Pay_Public_Employees: Seq[generated2.Box_16_Au45F_DataType] = Nil,
  Disaster_Assistance: Seq[generated2.Box_16_Au45G_DataType] = Nil)
      


/** Box 16 A-C Data
*/
case class Box_16_Au45C_DataType(Amount: Option[BigDecimal] = None,
  Code: Option[String] = None)
      


/** Box 16 A-D Data
*/
case class Box_16_Au45D_DataType(Amount: Option[BigDecimal] = None,
  Code: Option[String] = None)
      


/** Box 16 A-E Data
*/
case class Box_16_Au45E_DataType(Amount: Option[BigDecimal] = None,
  Code: Option[String] = None)
      


/** Worker Puerto Rico Annual Tax Data
*/
case class Worker_Wu452PR_DataType(Wu452PR_Instance_ID: Option[String] = None,
  Completed_Moment: Option[javax.xml.datatype.XMLGregorianCalendar] = None)
      


/** Withholding Order Withholding Frequency Data
*/
case class Withholding_Order_Withholding_Frequency_DataType(Withholding_Order_Withholding_Frequency_Reference: Seq[generated2.Withholding_Order_Withholding_FrequencyObjectType] = Nil)
      


/** This element contains the worker W-2 amounts for box 14.
*/
case class EFW2_Other_DataType(Label: Option[String] = None,
  Amount: Option[BigDecimal] = None,
  Plan_Number: Option[String] = None)
      


/** This is the wrapper element for Box 13 W-2 Additional Data.
*/
case class EFW2_Additional_DataType(Statutory_Employee: Option[Boolean] = None,
  Retirement_Plan: Option[Boolean] = None,
  Third_Party_Sick_Pay: Option[Boolean] = None)
      


/** This element contains the state and local data for the W-2.
*/
case class EFW2_Year_End_Worker_State_DataType(State_EIN: Option[String] = None,
  State: Option[String] = None,
  State_FIPS_Code: Option[String] = None,
  State_Taxable_Wages: Option[BigDecimal] = None,
  State_Tax_Withheld: Option[BigDecimal] = None,
  EFW2_Year_End_Worker_Local_Data: Seq[generated2.EFW2_Year_End_Worker_Local_DataType] = Nil)
      


/** This element contains the local data for the W-2.
*/
case class EFW2_Year_End_Worker_Local_DataType(Locality: Option[String] = None,
  Tax_Type_Code: Option[String] = None,
  Local_Taxable_Wages: Option[BigDecimal] = None,
  Local_Tax_Withheld: Option[BigDecimal] = None,
  Other_Information: Option[String] = None)
      


/** Get Payroll Pre-Printed Payslips Request
*/
case class Get_Payroll_Preu45Printed_Payslips_RequestType(get_payroll_preu45printed_payslips_requesttypeoption: scalaxb.DataRecord[generated2.Get_Payroll_Preu45Printed_Payslips_RequestTypeOption],
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Payroll_Preu45Printed_Payslips_Response_GroupType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      

trait Get_Payroll_Preu45Printed_Payslips_RequestTypeOption

/** Get Payroll Pre-Printed Payslips Request Reference
*/
case class Payroll_Preu45Printed_Payslips_Request_ReferenceType(Payroll_Preu45Printed_Payslips_Request_Reference: Seq[generated2.Repository_DocumentObjectType] = Nil) extends Get_Payroll_Preu45Printed_Payslips_RequestTypeOption
      


/** Response Group
*/
case class Payroll_Preu45Printed_Payslips_Response_GroupType()
      


/** Utilize the following element to find Pre-Printed Payslips in the Workday system.
*/
case class Payroll_Preu45Printed_Payslips_Request_CriteriaType(Preu45Printed_Payslip_Creation_From_Moment: javax.xml.datatype.XMLGregorianCalendar,
  Preu45Printed_Payslip_Creation_To_Moment: javax.xml.datatype.XMLGregorianCalendar,
  Pay_Run_Group_Selection_Reference: Seq[generated2.Pay_Run_Group_SelectionObjectType] = Nil) extends Get_Payroll_Preu45Printed_Payslips_RequestTypeOption
      


/** Get Payroll Pre-Printed Payslips Response
*/
case class Get_Payroll_Preu45Printed_Payslips_ResponseType(Request_References: Seq[generated2.Payroll_Preu45Printed_Payslips_Request_ReferenceType] = Nil,
  Request_Criteria: Seq[generated2.Payroll_Preu45Printed_Payslips_Request_CriteriaType] = Nil,
  Response_Group: Seq[generated2.Payroll_Preu45Printed_Payslips_Response_GroupType] = Nil,
  Request_Filter: Seq[generated2.Response_FilterType] = Nil,
  Response_Results: Seq[generated2.Response_ResultsType] = Nil,
  Response_Data: Seq[generated2.Get_Payroll_Preu45Printed_Payslips_Response_DataType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Wrapper element that includes the Repository Document instance and data
*/
case class Get_Payroll_Preu45Printed_Payslips_Response_DataType(Employee_Name_Reference: Option[generated2.WorkerObjectType] = None,
  Pay_Group_Detail_Reference: Option[generated2.Pay_Group_DetailObjectType] = None,
  Company_Reference: Option[generated2.CompanyObjectType] = None,
  Payroll_Result_Reference: Option[generated2.Unique_IdentifierObjectType] = None,
  Period_Start_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Period_End_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Payment_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Gross_Amount: Option[BigDecimal] = None,
  Net_Amount: Option[BigDecimal] = None,
  Payroll_Preu45Printed_Payslip_Document_ID: Option[String] = None,
  Payroll_Preu45Printed_Payslip_Document_Reference: Seq[generated2.Repository_Document_MetadataType] = Nil,
  File_Content: Option[scalaxb.Base64Binary] = None)
      


/** EFW2 Year End Employer Filing Data Request
*/
case class Get_EFW2_Year_End_Employer_Filing_Data_RequestType(Request_Criteria: generated2.EFW2_Year_End_Employer_Filing_Data_Request_CriteriaType,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Request Criteria
*/
case class EFW2_Year_End_Employer_Filing_Data_Request_CriteriaType(Company_Reference: generated2.CompanyObjectType,
  Calendar_Year_Reference: generated2.Calendar_YearObjectType,
  Include_All_Workers: Option[Boolean] = None)
      


/** Response Data
*/
case class Get_EFW2_Year_End_Employer_Filing_Data_ResponseType(Request_Criteria: generated2.EFW2_Year_End_Employer_Filing_Data_Request_CriteriaType,
  Response_Data: Option[generated2.EFW2_Year_End_Employer_Filing_Response_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Response Data
*/
case class EFW2_Year_End_Employer_Filing_Response_DataType(EFW2_Year_End_Employer_Filing: Seq[generated2.EFW2_Year_End_Employer_FilingType] = Nil)
      


/** Response data for Employer W-2 totals.
*/
case class EFW2_Year_End_Employer_FilingType(Company_Reference: Option[generated2.CompanyObjectType] = None,
  EFW2_Year_End_Employer_Filing_Data: Option[generated2.EFW2_Year_End_Employer_Filing_DataType] = None)
      


/** This element contains the employer details for the W-2 data.
*/
case class EFW2_Year_End_Employer_Filing_DataType(Calendar_Year_Reference: Option[generated2.Calendar_YearObjectType] = None,
  EIN: Option[String] = None,
  Company_Name: Option[String] = None,
  Kind_of_Employer_Reference: Option[generated2.Kind_of_Employer_for_Payroll_Tax_FilingObjectType] = None,
  Third_Party_Sick_Pay_Indicator: Option[Boolean] = None,
  EFW2_Year_End_Submitter_Data: Seq[generated2.EFW2_Year_End_Submitter_DataType] = Nil,
  EFW2_Year_End_Employer_Box_Data: Seq[generated2.EFW2_Year_End_Employer_Box_DataType] = Nil,
  EFW2_Deferred_and_Other_Compensation_Data: Seq[generated2.EFW2_Employer_Deferred_and_Other_Compensation_DataType] = Nil)
      


/** This element contains the W-2 amounts for boxes 1 through  11.

Box 1 search string:  Wages, tips, and other compensation
Box 2 search string:  Federal income tax withheld
Box 3 search string:  Social security wages
Box 4 search string:  Social security tax withheld
Box 5 search string:  Medicare wages and tips
Box 6 search string:  Medicare tax withheld
Box 7 search string:  Social security tips
Box 8 search string:  Allocated tips
Box 10 search string:  Dependent care benefits
Box 11 NQPS search string:  Non-Qualified Pension-Section 457 Dist YTD
Box 11 NQPNS search string:  Non-Qualified Pension-Non-section 457 Dist YTD
Box 11 NQPSC search string:  Non-Qualified Pension-Section 457 Contrib YTD
Box 11 NQPNSC search string:  Non-Qualified Pension-Non-section 457 Contrib YTD
*/
case class EFW2_Year_End_Employer_Box_DataType(Box_Description: Option[String] = None,
  Amount: Option[BigDecimal] = None)
      


/** This element contains the company W-2 total amounts for box 12.
*/
case class EFW2_Employer_Deferred_and_Other_Compensation_DataType(Code: Option[String] = None,
  Year: Option[String] = None,
  Amount: Option[BigDecimal] = None)
      


/** This element contains information about the submitter of the data and contact information if there are processing problems.
*/
case class EFW2_Year_End_Submitter_DataType(EIN: Option[String] = None,
  Company_Name: Option[String] = None,
  Address_Line_1: Option[String] = None,
  Address_Line_2: Option[String] = None,
  City: Option[String] = None,
  State: Option[String] = None,
  Postal_Code: Option[String] = None,
  Contact_Name: Option[String] = None,
  Contact_Phone_Number: Option[String] = None,
  Contact_Email_Address: Option[String] = None)
      


/** Details of the Salary over the Cap allocation, (e.g., a set of allocation dimensions and percentages)
*/
case class Salary_Over_the_Cap_Costing_Allocation_Detail_DataType(SOC_Order: String,
  salary_over_the_cap_costing_allocation_detail_datatypeoption: Seq[scalaxb.DataRecord[Any]] = Nil,
  SOC_Distribution_Percent: BigDecimal)
      

trait Salary_Over_the_Cap_Costing_Allocation_Detail_DataTypeOption

/** Pay Calculation Request References
*/
case class Run_Pay_Calculation_Request_ReferencesType(Run_Pay_Calculation_Reference: Seq[generated2.Background_Process_RuntimeObjectType] = Nil) extends Get_Run_Pay_Calculation_RequestTypeOption
      


/** Criteria used to identify calculation process if Process Integration ID is not used
*/
case class Run_Pay_Calculation_Request_CriteriaType(Period_Reference: Option[generated2.PeriodObjectType] = None,
  Pay_Groups_or_Pay_Run_Groups_Selection_Reference: Seq[generated2.Pay_Group_Pay_Run_Group_SelectionObjectType] = Nil,
  Run_Category_Reference: Option[generated2.Run_CategoryObjectType] = None,
  Include_Requires_Recalculation: Option[Boolean] = None,
  Include_Error: Option[Boolean] = None,
  Include_Not_Yet_Started: Option[Boolean] = None,
  Include_In_Progress: Option[Boolean] = None,
  Accounting_Only_for_Calculation_Criteria: Option[Boolean] = None,
  Include_Queued_Proesses: Option[Boolean] = None) extends Get_Run_Pay_Calculation_RequestTypeOption
      


/** Used to specify what groups of information are provided in the response
*/
case class Run_Pay_Calculation_Response_GroupType(Include_Process_Calculation_Criteria: Option[Boolean] = None,
  Include_Pay_Groups_Being_Calculated: Option[Boolean] = None,
  Include_Process_Information: Option[Boolean] = None,
  Include_Process_History: Option[Boolean] = None,
  Include_Messages: Option[Boolean] = None)
      


/** Get Run Pay Calculation Request
*/
case class Get_Run_Pay_Calculation_RequestType(get_run_pay_calculation_requesttypeoption: Option[scalaxb.DataRecord[generated2.Get_Run_Pay_Calculation_RequestTypeOption]] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Run_Pay_Calculation_Response_GroupType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      

trait Get_Run_Pay_Calculation_RequestTypeOption

/** Pay Calculation Response Data
*/
case class Run_Pay_CalculationType(Run_Pay_Calculation_Reference: Option[generated2.Background_Process_RuntimeObjectType] = None,
  Process_Reference: Option[generated2.Background_ProcessObjectType] = None,
  Status_Reference: Option[generated2.Background_Process_Runtime_StatusObjectType] = None,
  Current_Processing_Time: Option[String] = None,
  Average_Processing_Time: Option[String] = None,
  Run_Pay_Calculation_Process_Criteria: Option[generated2.Run_Pay_Calculation_Process_Calculation_CriteriaType] = None,
  Pay_Groups_Being_Calculated: Option[generated2.Pay_Groups_Being_CalculatedType] = None,
  Run_Pay_Calculation_Process_Information: Option[generated2.Run_Pay_Calculation_Process_InformationType] = None,
  Run_Pay_Calculation_Process_History: Option[generated2.Run_Pay_Calculation_Process_HistoryType] = None,
  Run_Pay_Calculation_Messages: Option[generated2.Run_Pay_Calculation_MessagesType] = None)
      


/** Pay Calculation Response
*/
case class Run_Pay_Calculation_Response_DataType(Run_Pay_Calculation: Seq[generated2.Run_Pay_CalculationType] = Nil)
      


/** Run Pay Calculation Response
*/
case class Get_Run_Pay_Calculation_ResponseType(Request_References: Option[generated2.Run_Pay_Calculation_Request_ReferencesType] = None,
  Request_Criteria: Option[generated2.Run_Pay_Calculation_Request_CriteriaType] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Group: Option[generated2.Run_Pay_Calculation_Response_GroupType] = None,
  Response_Results: Option[generated2.Response_ResultsType] = None,
  Response_Data: Option[generated2.Run_Pay_Calculation_Response_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Calculation Criteria
*/
case class Run_Pay_Calculation_Process_Calculation_CriteriaType(Period_Reference: Option[generated2.PeriodObjectType] = None,
  Pay_Run_Group_Selection_Reference: Seq[generated2.Pay_Run_Group_SelectionObjectType] = Nil,
  Calculation_Options: Seq[generated2.Run_Pay_Calculation_StatusesType] = Nil,
  Limit_Accounting_Population_Based_on_Calculation_Criteria: Option[Boolean] = None)
      


/** Process Information
*/
case class Run_Pay_Calculation_Process_InformationType(Process_Type_Reference: Option[generated2.Background_Process_TypeObjectType] = None,
  Scheduled_Start_Date_and_Time: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Actual_Start_Date_and_Time: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Completed_Date_and_Time: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Submitted_By_Reference: Option[generated2.InstanceObjectType] = None,
  Total_Processing_Time: Option[String] = None,
  Job_Definition_Reference: Option[generated2.Unique_IdentifierObjectType] = None,
  Job_Mode_Reference: Option[generated2.Unique_IdentifierObjectType] = None,
  Job_Size: Option[BigDecimal] = None,
  Job_Parameters: Option[BigDecimal] = None,
  Application_Keys: Option[BigDecimal] = None,
  Run_Pay_Calculation_Technical_Details: Seq[generated2.Run_Pay_Calculation_Technical_DetailsType] = Nil,
  Run_Pay_Calculation_Step_Details: Seq[generated2.Run_Pay_Calculation_Step_DetailsType] = Nil)
      


/** Process History
*/
case class Run_Pay_Calculation_Process_HistoryType(Actual_Start_Date_and_Time: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Completed_Date_and_Time: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Total_Processing_Time__hour_min_secu93: Option[String] = None)
      


/** Pay Groups being Calculated
*/
case class Pay_Groups_Being_CalculatedType(Payroll_Run_Detail_Pay_Calc_Status: Seq[generated2.Payroll_Run_Detail_Pay_Calc_StatusType] = Nil)
      


/** Run Pay Calculation Messages contains all the messages returned while executing the Run Payroll Calculation task
*/
case class Run_Pay_Calculation_MessagesType(Run_Pay_Calculation_Message: Seq[generated2.Run_Pay_Calculation_MessageType] = Nil)
      


/** Element to hold Payroll Payee Tax Location Mapping Request References information
*/
case class Payroll_Payee_Tax_Location_Mapping_Request_ReferencesType(Payroll_Payee_Tax_Location_Mapping_Reference: Seq[generated2.Payroll_Payee_Tax_Location_MappingObjectType] = Nil) extends Get_Payroll_Payee_Tax_Location_Mappings_RequestTypeOption
      


/** Element to hold Payroll Payee Tax Location Mapping Request Criteria Information.  Utilize this element to find existing Tax Location Mappings in the System.
*/
case class Payroll_Payee_Tax_Location_Mapping_Request_CriteriaType(Worker_Reference: Option[generated2.WorkerObjectType] = None,
  Company_Reference: Option[generated2.CompanyObjectType] = None,
  Effective_as_Of: Option[javax.xml.datatype.XMLGregorianCalendar] = None) extends Get_Payroll_Payee_Tax_Location_Mappings_RequestTypeOption
      


/** Element to hold all Payroll Payee Tax Location Mappings Request Information
*/
case class Get_Payroll_Payee_Tax_Location_Mappings_RequestType(get_payroll_payee_tax_location_mappings_requesttypeoption: Option[scalaxb.DataRecord[generated2.Get_Payroll_Payee_Tax_Location_Mappings_RequestTypeOption]] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      

trait Get_Payroll_Payee_Tax_Location_Mappings_RequestTypeOption

/** Element to hold Payroll Payee Tax Location Mapping Response Data Information
*/
case class Payroll_Payee_Tax_Location_Mapping_Response_DataType(Payroll_Payee_Tax_Location_Mapping: Seq[generated2.Payroll_Payee_Tax_Location_Mapping_Get_DataType] = Nil)
      


/** Element to hold Get Payroll Payee Tax Location Mapping Response Information
*/
case class Get_Payroll_Payee_Tax_Location_Mappings_ResponseType(Request_References: Option[generated2.Payroll_Payee_Tax_Location_Mapping_Request_ReferencesType] = None,
  Request_Criteria: Option[generated2.Payroll_Payee_Tax_Location_Mapping_Request_CriteriaType] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  Response_Results: Option[generated2.Response_ResultsType] = None,
  Response_Data: Option[generated2.Payroll_Payee_Tax_Location_Mapping_Response_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Element to hold Payroll Payee Tax Location Mapping Response Data Information
*/
case class Payroll_Payee_Tax_Location_Mapping_Get_DataType(Payroll_Payee_Tax_Location_Mapping_Reference: Option[generated2.Payroll_Payee_Tax_Location_MappingObjectType] = None,
  Payroll_Payee_Tax_Location_Mapping_Data: Option[generated2.Payroll_Payee_Tax_Location_Mapping_DataType] = None)
      


/** Element to hold Payroll Payee Tax Location Mapping Data Information
*/
case class Payroll_Payee_Tax_Location_Mapping_DataType(Payroll_Payee_Tax_Location_Mapping_ID: Option[String] = None,
  Worker_Reference: generated2.WorkerObjectType,
  Effective_Date: javax.xml.datatype.XMLGregorianCalendar,
  Company_Reference: generated2.CompanyObjectType,
  Inactive_Tax_Location_Mapping: Option[Boolean] = None,
  Inactivate_State_Reference: Seq[generated2.Payroll_State_AuthorityObjectType] = Nil)
      


/** Element to hold Payroll Payee Tax Location Mapping Request Information
*/
case class Put_Payroll_Payee_Tax_Location_Mapping_RequestType(Payroll_Payee_Tax_Location_Mapping_Data: generated2.Payroll_Payee_Tax_Location_Mapping_DataType,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Element to hold Payroll Payee Tax Location Mapping Response Information
*/
case class Put_Payroll_Payee_Tax_Location_Mapping_ResponseType(Payroll_Payee_Tax_Location_Mapping_Reference: Option[generated2.Payroll_Payee_Tax_Location_MappingObjectType] = None,
  Payroll_Payee_Tax_Location_Mapping_Data: Option[generated2.Application_Instance_Related_Exceptions_DataType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Statuses for Payroll Run
*/
case class Run_Pay_Calculation_StatusesType(Pay_Calculation_Status_Reference: Seq[generated2.Unique_IdentifierObjectType] = Nil)
      


/** Run Pay Calculation Message is created when there is information returned while executing Run Payroll Calculation
*/
case class Run_Pay_Calculation_MessageType(Date_and_Time: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Severity: Option[String] = None,
  Message: Option[String] = None,
  Background_Process_Reference: Option[generated2.Background_Process_RuntimeObjectType] = None)
      


/** Process Information
*/
case class Run_Pay_Calculation_Step_DetailType(Job_Step_Runtime_Reference: Option[generated2.Unique_IdentifierObjectType] = None,
  Status_Reference: Option[generated2.Unique_IdentifierObjectType] = None,
  Start_Date_Time: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  End_Date_Time: Option[javax.xml.datatype.XMLGregorianCalendar] = None,
  Cumulative_Step_Time__minu93: Option[BigDecimal] = None,
  Result_Count: Option[BigDecimal] = None,
  Partitions_Completed: Option[BigDecimal] = None,
  Total_Partitions: Option[BigDecimal] = None,
  Runtime_Parameters: Option[BigDecimal] = None)
      


/** Technical Details
*/
case class Run_Pay_Calculation_Technical_DetailsType(Workday_Integration_Cloud_Platform__ESB__Process_ID: Option[String] = None)
      


/** Step Details
*/
case class Run_Pay_Calculation_Step_DetailsType(Run_Pay_Calculation_Step_Detail: Seq[generated2.Run_Pay_Calculation_Step_DetailType] = Nil)
      


/** Contains Pay Groups being calculated as part of running a payroll calculation
*/
case class Payroll_Run_Detail_Pay_Calc_StatusType(Pay_Group_Reference: Option[generated2.Pay_GroupObjectType] = None,
  Run_Category_Reference: Option[generated2.Run_CategoryObjectType] = None,
  Calc_Status: Seq[generated2.Calc_StatusType] = Nil)
      


/** Contains sets of status counts of Payroll Results
*/
case class Calc_StatusType(Pay_Group_Period_Pay_Calculation_Status_As_Of_Now: Seq[generated2.Pay_Group_Period_Pay_Calculation_Status_As_Of_NowType] = Nil)
      


/** Contains counts of Pay Results in different states along with the Pay Cycle Type and Action Reason
*/
case class Pay_Group_Period_Pay_Calculation_Status_As_Of_NowType(Pay_Cycle_Type_Reference: Option[generated2.Unique_IdentifierObjectType] = None,
  Action_Reason: Option[String] = None,
  In_Progress: Option[BigDecimal] = None,
  Requires_Recalculation: Option[BigDecimal] = None,
  Pending_Completion: Option[BigDecimal] = None,
  In_Error: Option[BigDecimal] = None,
  On_Hold: Option[BigDecimal] = None,
  Completed: Option[BigDecimal] = None,
  Total: Option[BigDecimal] = None)
      


/** Email Address Data
*/
case class Email_Address_DataType(Email_Address: Option[String] = None,
  Email_Comment: Option[String] = None,
  Usage_Data: Seq[generated2.Communication_Method_Usage_DataType] = Nil)
      


/** This is wrapper element for W-2VI Box 12 Data.
*/
case class Wu452VI_Deferred_and_Other_Compensation_DataType(Code: Option[String] = None,
  Year: Option[String] = None,
  Amount: Option[BigDecimal] = None)
      


/** Wrapper element for Worker Guam Annual Tax Filing Data.
*/
case class Worker_Guam_Annual_Tax_Data_WrapperType(Worker_Guam_Annual_Tax_Data: Seq[generated2.Worker_Guam_Annual_Tax_DataType] = Nil)
      


/** This is wrapper element for W-2GU Box 12 Data.
*/
case class Wu452GU_Deferred_and_Other_Compensation_DataType(Code: Option[String] = None,
  Year: Option[String] = None,
  Amount: Option[BigDecimal] = None)
      


/** This is wrapper element for Annual Non Qualified plans Data.
*/
case class Wu452VI_Nonu45Qualified_Pension_DataType(Nonu45Qualified_Pensionu45Section_457_Dist_YTD: Option[BigDecimal] = None,
  Nonu45Qualified_Pensionu45Nonu45section_457_Dist_YTD: Option[BigDecimal] = None,
  Nonu45Qualified_Pensionu45Section_457_Contrib_YTD: Option[BigDecimal] = None,
  Nonu45Qualified_Pensionu45Nonu45section_457_Contrib_YTD: Option[BigDecimal] = None)
      


/** Wrapper element for Worker Virgin Islands Annual Tax Filing Data.
*/
case class Worker_Virgin_Islands_Annual_Tax_Data_WrapperType(Worker_Virgin_Islands_Annual_Tax_Data: Seq[generated2.Worker_Virgin_Islands_Annual_Tax_DataType] = Nil)
      


/** Worker Virgin Islands Annual Tax Data
*/
case class Worker_Virgin_Islands_Annual_Tax_DataType(Worker_Wu452VI_Data: Seq[generated2.Worker_Wu452VI_DataType] = Nil,
  Control_number: Option[String] = None,
  Nonu45Qualified_Pension_Data: Option[generated2.Wu452VI_Nonu45Qualified_Pension_DataType] = None,
  Deferred_and_Other_Compensation_Data: Seq[generated2.Wu452VI_Deferred_and_Other_Compensation_DataType] = Nil,
  Additional_Data: Option[generated2.Wu452VI_Additional_DataType] = None,
  Other_Data_Wrapper: Seq[generated2.Wu452VI_Other_Data_WrapperType] = Nil)
      


/** Worker W-2VI Data
*/
case class Worker_Wu452VI_DataType(Wu452VI_Instance_ID: Option[String] = None,
  Completed_Moment: Option[javax.xml.datatype.XMLGregorianCalendar] = None)
      


/** This is the wrapper element for Box 13 W-2VI Additional Data.
*/
case class Wu452VI_Additional_DataType(Statutory_Employee: Option[Boolean] = None,
  Retirement_Plan: Option[Boolean] = None,
  Third_Party_Sick_Pay: Option[Boolean] = None)
      


/** This element is wrapper for W-2GU Box 14 Other Data.
*/
case class Wu452GU_Other_Data_WrapperType(Other_Data: Seq[generated2.Wu452GU_Other_DataType] = Nil)
      


/** This is wrapper element for Annual Non Qualified plans Data.
*/
case class Wu452GU_Nonu45Qualified_Pension_DataType(Nonu45Qualified_Pensionu45Section_457_Dist_YTD: Option[BigDecimal] = None,
  Nonu45Qualified_Pensionu45Nonu45section_457_Dist_YTD: Option[BigDecimal] = None,
  Nonu45Qualified_Pensionu45Section_457_Contrib_YTD: Option[BigDecimal] = None,
  Nonu45Qualified_Pensionu45Nonu45section_457_Contrib_YTD: Option[BigDecimal] = None)
      


/** This element is wrapper for W-2GU Box 14 Other Data.
*/
case class Wu452GU_Other_DataType(Label: Option[String] = None,
  Amount: Option[BigDecimal] = None,
  Other_Information_u45_FEIN_or_EIN: Option[String] = None)
      


/** This element is wrapper for W-2VI Box 14 Other Data.
*/
case class Wu452VI_Other_DataType(Label: Option[String] = None,
  Amount: Option[BigDecimal] = None,
  Other_Information_u45_FEIN_or_EIN: Option[String] = None)
      


/** This element is wrapper for W-2VI Box 14 Other Data.
*/
case class Wu452VI_Other_Data_WrapperType(Other_Data: Seq[generated2.Wu452VI_Other_DataType] = Nil)
      


/** This is the wrapper element for Box 13 W-2GU Additional Data.
*/
case class Wu452GU_Additional_DataType(Statutory_Employee: Option[Boolean] = None,
  Retirement_Plan: Option[Boolean] = None,
  Third_Party_Sick_Pay: Option[Boolean] = None)
      


/** Worker W-2GU Data
*/
case class Worker_Wu452GU_DataType(Wu452GU_Instance_ID: Option[String] = None,
  Completed_Moment: Option[javax.xml.datatype.XMLGregorianCalendar] = None)
      


/** Worker Guam Annual Tax Data
*/
case class Worker_Guam_Annual_Tax_DataType(Worker_Wu452GU_Data: Seq[generated2.Worker_Wu452GU_DataType] = Nil,
  Control_number: Option[String] = None,
  Nonu45Qualified_Pension_Data: Option[generated2.Wu452GU_Nonu45Qualified_Pension_DataType] = None,
  Deferred_and_Other_Compensation_Data: Seq[generated2.Wu452GU_Deferred_and_Other_Compensation_DataType] = Nil,
  Additional_Data: Option[generated2.Wu452GU_Additional_DataType] = None,
  Other_Data_Wrapper: Seq[generated2.Wu452GU_Other_Data_WrapperType] = Nil)
      


/** Element containing singular Worker/Position, Effective Date, and Payroll Reporting Codes.
*/
case class Maintain_Worker_Payroll_Reporting_Codes_Data__HV_Type(Employee_Reference: Option[generated2.EmployeeObjectType] = None,
  Position_Reference: Option[generated2.Position_ElementObjectType] = None,
  Effective_Date: javax.xml.datatype.XMLGregorianCalendar,
  Payroll_Reporting_Code_Data: Seq[generated2.Maintain_Worker_Payroll_Reporting_Codes_Event_Data__HV_Type] = Nil)
      


/** Element containing a single Payroll Reporting Code Entry.
*/
case class Maintain_Worker_Payroll_Reporting_Codes_Event_Data__HV_Type(Payroll_Reporting_Code_Reference: Option[generated2.Payroll_Reporting_Code__All_ObjectType] = None)
      


/** Header element of the Import Maintain Payroll Reporting Codes for Worker Events web service task.
*/
case class Import_Maintain_Payroll_Reporting_Codes_for_Worker_RequestType(Worker_Payroll_Reporting_Code_Data: Seq[generated2.Maintain_Worker_Payroll_Reporting_Codes_Data__HV_Type] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Box 16 A-F Data
*/
case class Box_16_Au45F_DataType(Amount: Option[BigDecimal] = None,
  Code: Option[String] = None)
      


/** Box 16 A-G Data
*/
case class Box_16_Au45G_DataType(Amount: Option[BigDecimal] = None,
  Code: Option[String] = None)
      


/** Request Element to return workers and their associated payroll reporting codes as of an effective date.
*/
case class Get_Payroll_Reporting_Codes_for_Workers_RequestType(Request_References: Option[generated2.Payroll_Reporting_Code_For_Workers_Request_ReferencesType] = None,
  Response_Filter: Option[generated2.Response_FilterType] = None,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Element containing one worker and the worker's associated payroll reporting codes as of the effective date.
*/
case class Payroll_Reporting_Codes_for_WorkerType(Worker_Reference: Option[generated2.WorkerObjectType] = None,
  Position_and_Payroll_Reporting_Codes_Data: Seq[generated2.Payroll_Reporting_Codes_for_PositionType] = Nil)
      


/** Wrapper element for containing multiple Payroll Reporting Codes for Worker elements.
*/
case class Payroll_Reporting_Codes_for_Workers_Response_DataType(Worker_Payroll_Codes_Data: Seq[generated2.Payroll_Reporting_Codes_for_WorkerType] = Nil)
      


/** Element containing the Worker(s), Company, and Effective Date for the web service request. Either Worker or Company fields need to be populated. If both are supplied, the response will default to returning the workers supplied and Company will be ignored.
*/
case class Payroll_Reporting_Code_For_Workers_Request_ReferencesType(Workers_Reference: Seq[generated2.WorkerObjectType] = Nil,
  Company_Reference: Option[generated2.CompanyObjectType] = None,
  Effective_Date: Option[javax.xml.datatype.XMLGregorianCalendar] = None)
      


/** Element containing request response, including paging details and request references.
*/
case class Get_Payroll_Reporting_Codes_for_Workers_ResponseType(Request_References: Seq[generated2.Payroll_Reporting_Code_For_Workers_Request_ReferencesType] = Nil,
  Response_Filter: Seq[generated2.Response_FilterType] = Nil,
  Response_Results: Seq[generated2.Response_ResultsType] = Nil,
  Response_Data: Seq[generated2.Payroll_Reporting_Codes_for_Workers_Response_DataType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val wdversion = attributes.get("@{urn:com.workday/bsvc}version") map { _.as[String]}
}

      


/** Contains Position and associated Payroll Reporting Codes for that Position as of Effective Date. If Company was passed into the web service request, then only Positions within that Company are returned for the Worker.
*/
case class Payroll_Reporting_Codes_for_PositionType(Position_Reference: Option[generated2.PositionObjectType] = None,
  Payroll_Reporting_Codes_Reference: Seq[generated2.Payroll_Reporting_Code__All_ObjectType] = Nil)
      


/** Contains a unique identifier for an instance of an object.
*/
case class LocationObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Job_ProfileObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Organization_TypeObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class EmployeeObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Instant_Messenger_TypeObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class WorkerObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class FrequencyObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Pay_Rate_TypeObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Integration_System__Audited_ObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Background_Process_Runtime_StatusObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Bank_AccountObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Payment_TypeObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Phone_Device_TypeObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Pay_Group_DetailObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Period_ScheduleObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class PeriodObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Run_CategoryObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Earning__All_ObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Deduction__All_ObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Pay_Accumulation__All_ObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Payroll_CalculationObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Balance_Period__All_ObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Custom_Worktag_01ObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Custom_Worktag_02ObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Custom_Worktag_03ObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Custom_Worktag_04ObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Custom_Worktag_05ObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Financial_InstitutionObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Pay_ComponentObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Related_Calculation__All_ObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Payroll_InputObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Payroll_Withholding_StatusObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Communication_Usage_TypeObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Communication_Usage_BehaviorObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Period_Date_IndicatorObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class CountryObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Country_RegionObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class CurrencyObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Payroll_Payee_Tax_DataObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Payroll_Payee_FUTAObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Payroll_Tax_AuthorityObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Payroll_State_AuthorityObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Payroll_Local_AuthorityObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Payroll_Local_County_AuthorityObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Payroll_Local_City_AuthorityObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Payroll_Local_School_District_AuthorityObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Payroll_Other_AuthorityObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Project_Plan_TaskObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class ProjectObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Frequency_BehaviorObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Settlement_InstructionObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
  lazy val parent_id = attributes.get("@parent_id") map { _.as[String]}
  lazy val parent_type = attributes.get("@parent_type") map { _.as[String]}
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Pay_GroupObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Payroll_Limit_OverrideObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Bank_Account_TypeObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Payment_MethodObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Pay_Run_Group_SelectionObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Deduction__Workday_Owned_ObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class DeductionObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Payroll_Payee_T1ObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Limit_InterfaceObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class MonthObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Support_OrderObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Support_TypeObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Withholding_OrderObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Background_Process_RuntimeObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Withholding_Order_CaseObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Metadata_Payroll_WorktagObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Tenanted_Payroll_WorktagObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
  lazy val parent_id = attributes.get("@parent_id") map { _.as[String]}
  lazy val parent_type = attributes.get("@parent_type") map { _.as[String]}
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Deduction_RecipientObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Payroll_Constant_TextObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Payment_CategoryObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Payroll_WorktagObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
  lazy val parent_id = attributes.get("@parent_id") map { _.as[String]}
  lazy val parent_type = attributes.get("@parent_type") map { _.as[String]}
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Supervisory_OrganizationObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class CompanyObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Cost_CenterObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class RegionObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Custom_OrganizationObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class PayeeObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Background_Process_TypeObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Payroll_Constant_PercentObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Settlement_Bank_AccountObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
  lazy val parent_id = attributes.get("@parent_id") map { _.as[String]}
  lazy val parent_type = attributes.get("@parent_type") map { _.as[String]}
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Withholding_Order_Fee_TypeObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Payroll_Constant_NumberObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Withholding_Order_Amount_TypeObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Payroll_Offu45cycle_Result_OverrideObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Payroll_Offu45cycle_TypeObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Calendar_QuarterObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Payroll_Action_ReasonObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Background_ProcessObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
  lazy val parent_id = attributes.get("@parent_id") map { _.as[String]}
  lazy val parent_type = attributes.get("@parent_type") map { _.as[String]}
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Paycheck_Delivery_MethodObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Repository_DocumentObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class National_ID_TypeObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Payslip_Printing_OverrideObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Paycheck_DeliveryObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Withholding_Order_TypeObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Application_BatchObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Unique_IdentifierObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Alternate_Name_UsageObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Workers_Compensation_CodeObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Calendar_YearObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Project_Plan_PhaseObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class External_Field_and_Parameter_Initialization_ProviderObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Position_ElementObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class FundObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Payroll_Reporting_TypeObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Tax_LevyObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Integration_Document_FieldObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
  lazy val parent_id = attributes.get("@parent_id") map { _.as[String]}
  lazy val parent_type = attributes.get("@parent_type") map { _.as[String]}
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Payroll_Reference_NumberObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Payroll_Payee_PT1ObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class PositionObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Period_Schedule_UsageObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Outsourced_Payment_GroupObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Position_RestrictionsObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Payroll_Reporting_Code__All_ObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
  lazy val parent_id = attributes.get("@parent_id") map { _.as[String]}
  lazy val parent_type = attributes.get("@parent_type") map { _.as[String]}
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Time_Tracking_Eligibility_RuleObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Payroll_Payee_FICA_Exempt_ReasonObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class ProgramObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class GrantObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Business_UnitObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Object_ClassObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Payroll_Income_CodeObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Payroll_IRS_CountryObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Payroll_Payee_Tax_Treaty_USAObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Kind_of_Employer_for_Payroll_Tax_FilingObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Payroll_Income_Code_SubtypeObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Payroll_Payee_RPP_or_DPSP_Registration_NumbersObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Tax_Address_TypeObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Custom_Worktag_06ObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Custom_Worktag_07ObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Custom_Worktag_08ObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Custom_Worktag_09ObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Custom_Worktag_10ObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Custom_Worktag_11ObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Custom_Worktag_12ObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Custom_Worktag_13ObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Custom_Worktag_14ObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Custom_Worktag_15ObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class GiftObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Address_ReferenceObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Web_Service_Background_Process_RuntimeObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Report_Output_TagObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Successor_EmployerObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Company_Relationship_TypeObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Communication_Usage_Behavior_TenantedObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Time_Unit_for_AnnualizationObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Single_Legal_EntityObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class ARRCOu45AGIRC_Rubric_ValueObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class NI_CategoryObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class EstablishmentObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Event_Attachment_CategoryObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Payroll_IDObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Country_CityObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
  lazy val parent_id = attributes.get("@parent_id") map { _.as[String]}
  lazy val parent_type = attributes.get("@parent_type") map { _.as[String]}
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Withholding_Order_Override_Completion_CriteriaObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Payroll_Payee_Tax_Report_Type_Delivery_GroupObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Payroll_Tax_Location_MappingObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Withholding_Order_Withholding_FrequencyObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Payroll_Payee_Tax_Location_MappingObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Pay_Group_Pay_Run_Group_SelectionObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Email_ReferenceObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Payslip_Printing_OptionObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Payroll_Event_CategoryObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Phone_ReferenceObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Web_Address_ReferenceObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** Contains a unique identifier for an instance of an object.
*/
case class Instant_Messenger_ReferenceObjectIDType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val typeValue = attributes("@type").as[String]
}

      


/** 
*/
case class LocationObjectType(ID: Seq[generated2.LocationObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Job_ProfileObjectType(ID: Seq[generated2.Job_ProfileObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Organization_TypeObjectType(ID: Seq[generated2.Organization_TypeObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class EmployeeObjectType(ID: Seq[generated2.EmployeeObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Instant_Messenger_TypeObjectType(ID: Seq[generated2.Instant_Messenger_TypeObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class WorkerObjectType(ID: Seq[generated2.WorkerObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) extends Costing_Allocation_DataTypeOption with Worker_Costing_Allocations_DataTypeOption with Withholding_Order_Local_Minimum_Wage_Rate_RequestTypeOption {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class FrequencyObjectType(ID: Seq[generated2.FrequencyObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Pay_Rate_TypeObjectType(ID: Seq[generated2.Pay_Rate_TypeObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Integration_System__Audited_ObjectType(ID: Seq[generated2.Integration_System__Audited_ObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Background_Process_Runtime_StatusObjectType(ID: Seq[generated2.Background_Process_Runtime_StatusObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Bank_AccountObjectType(ID: Seq[generated2.Bank_AccountObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Payment_TypeObjectType(ID: Seq[generated2.Payment_TypeObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Phone_Device_TypeObjectType(ID: Seq[generated2.Phone_Device_TypeObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Pay_Group_DetailObjectType(ID: Seq[generated2.Pay_Group_DetailObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Period_ScheduleObjectType(ID: Seq[generated2.Period_ScheduleObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class PeriodObjectType(ID: Seq[generated2.PeriodObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Run_CategoryObjectType(ID: Seq[generated2.Run_CategoryObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Earning__All_ObjectType(ID: Seq[generated2.Earning__All_ObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) extends Offu45cycle_Input_DataTypeOption with History_Payment_Input_DataTypeOption with Submit_Payroll_Input_DataTypeOption {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Deduction__All_ObjectType(ID: Seq[generated2.Deduction__All_ObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) extends Offu45cycle_Input_DataTypeOption with History_Payment_Input_DataTypeOption with Submit_Payroll_Input_DataTypeOption {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Pay_Accumulation__All_ObjectType(ID: Seq[generated2.Pay_Accumulation__All_ObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Payroll_CalculationObjectType(ID: Seq[generated2.Payroll_CalculationObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Balance_Period__All_ObjectType(ID: Seq[generated2.Balance_Period__All_ObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Custom_Worktag_01ObjectType(ID: Seq[generated2.Custom_Worktag_01ObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Custom_Worktag_02ObjectType(ID: Seq[generated2.Custom_Worktag_02ObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Custom_Worktag_03ObjectType(ID: Seq[generated2.Custom_Worktag_03ObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Custom_Worktag_04ObjectType(ID: Seq[generated2.Custom_Worktag_04ObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Custom_Worktag_05ObjectType(ID: Seq[generated2.Custom_Worktag_05ObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Financial_InstitutionObjectType(ID: Seq[generated2.Financial_InstitutionObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Pay_ComponentObjectType(ID: Seq[generated2.Pay_ComponentObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Related_Calculation__All_ObjectType(ID: Seq[generated2.Related_Calculation__All_ObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) extends Offu45cycle_Input_Line_DataTypeOption {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Payroll_InputObjectType(ID: Seq[generated2.Payroll_InputObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Payroll_Withholding_StatusObjectType(ID: Seq[generated2.Payroll_Withholding_StatusObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Communication_Usage_TypeObjectType(ID: Seq[generated2.Communication_Usage_TypeObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Communication_Usage_BehaviorObjectType(ID: Seq[generated2.Communication_Usage_BehaviorObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Period_Date_IndicatorObjectType(ID: Seq[generated2.Period_Date_IndicatorObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class CountryObjectType(ID: Seq[generated2.CountryObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Country_RegionObjectType(ID: Seq[generated2.Country_RegionObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class CurrencyObjectType(ID: Seq[generated2.CurrencyObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Payroll_Payee_Tax_DataObjectType(ID: Seq[generated2.Payroll_Payee_Tax_DataObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Payroll_Payee_FUTAObjectType(ID: Seq[generated2.Payroll_Payee_FUTAObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Payroll_Tax_AuthorityObjectType(ID: Seq[generated2.Payroll_Tax_AuthorityObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Payroll_State_AuthorityObjectType(ID: Seq[generated2.Payroll_State_AuthorityObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Payroll_Local_AuthorityObjectType(ID: Seq[generated2.Payroll_Local_AuthorityObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Payroll_Local_County_AuthorityObjectType(ID: Seq[generated2.Payroll_Local_County_AuthorityObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Payroll_Local_City_AuthorityObjectType(ID: Seq[generated2.Payroll_Local_City_AuthorityObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Payroll_Local_School_District_AuthorityObjectType(ID: Seq[generated2.Payroll_Local_School_District_AuthorityObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Payroll_Other_AuthorityObjectType(ID: Seq[generated2.Payroll_Other_AuthorityObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Project_Plan_TaskObjectType(ID: Seq[generated2.Project_Plan_TaskObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) extends Payroll_Input_Worktags_DataTypeOption {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class ProjectObjectType(ID: Seq[generated2.ProjectObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) extends Payroll_Input_Worktags_DataTypeOption {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Frequency_BehaviorObjectType(ID: Seq[generated2.Frequency_BehaviorObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Settlement_InstructionObjectType(ID: Seq[generated2.Settlement_InstructionObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Pay_GroupObjectType(ID: Seq[generated2.Pay_GroupObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Payroll_Limit_OverrideObjectType(ID: Seq[generated2.Payroll_Limit_OverrideObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Bank_Account_TypeObjectType(ID: Seq[generated2.Bank_Account_TypeObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Payment_MethodObjectType(ID: Seq[generated2.Payment_MethodObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Pay_Run_Group_SelectionObjectType(ID: Seq[generated2.Pay_Run_Group_SelectionObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Deduction__Workday_Owned_ObjectType(ID: Seq[generated2.Deduction__Workday_Owned_ObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class DeductionObjectType(ID: Seq[generated2.DeductionObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Payroll_Payee_T1ObjectType(ID: Seq[generated2.Payroll_Payee_T1ObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Limit_InterfaceObjectType(ID: Seq[generated2.Limit_InterfaceObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class MonthObjectType(ID: Seq[generated2.MonthObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Support_OrderObjectType(ID: Seq[generated2.Support_OrderObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Support_TypeObjectType(ID: Seq[generated2.Support_TypeObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Withholding_OrderObjectType(ID: Seq[generated2.Withholding_OrderObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) extends Put_Payroll_Involuntary_Withholding_Order_RequestTypeOption with Put_Withholding_Order_Local_Minimum_Wage_DataTypeOption {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Background_Process_RuntimeObjectType(ID: Seq[generated2.Background_Process_RuntimeObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Withholding_Order_CaseObjectType(ID: Seq[generated2.Withholding_Order_CaseObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Metadata_Payroll_WorktagObjectType(ID: Seq[generated2.Metadata_Payroll_WorktagObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Tenanted_Payroll_WorktagObjectType(ID: Seq[generated2.Tenanted_Payroll_WorktagObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Deduction_RecipientObjectType(ID: Seq[generated2.Deduction_RecipientObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Payroll_Constant_TextObjectType(ID: Seq[generated2.Payroll_Constant_TextObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Payment_CategoryObjectType(ID: Seq[generated2.Payment_CategoryObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Payroll_WorktagObjectType(ID: Seq[generated2.Payroll_WorktagObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Supervisory_OrganizationObjectType(ID: Seq[generated2.Supervisory_OrganizationObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class CompanyObjectType(ID: Seq[generated2.CompanyObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) extends Withholding_Order_Local_Minimum_Wage_Rate_RequestTypeOption {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Cost_CenterObjectType(ID: Seq[generated2.Cost_CenterObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class RegionObjectType(ID: Seq[generated2.RegionObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Custom_OrganizationObjectType(ID: Seq[generated2.Custom_OrganizationObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class PayeeObjectType(ID: Seq[generated2.PayeeObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Background_Process_TypeObjectType(ID: Seq[generated2.Background_Process_TypeObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Payroll_Constant_PercentObjectType(ID: Seq[generated2.Payroll_Constant_PercentObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Settlement_Bank_AccountObjectType(ID: Seq[generated2.Settlement_Bank_AccountObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Withholding_Order_Fee_TypeObjectType(ID: Seq[generated2.Withholding_Order_Fee_TypeObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Payroll_Constant_NumberObjectType(ID: Seq[generated2.Payroll_Constant_NumberObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Withholding_Order_Amount_TypeObjectType(ID: Seq[generated2.Withholding_Order_Amount_TypeObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Payroll_Offu45cycle_Result_OverrideObjectType(ID: Seq[generated2.Payroll_Offu45cycle_Result_OverrideObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Payroll_Offu45cycle_TypeObjectType(ID: Seq[generated2.Payroll_Offu45cycle_TypeObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Calendar_QuarterObjectType(ID: Seq[generated2.Calendar_QuarterObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Payroll_Action_ReasonObjectType(ID: Seq[generated2.Payroll_Action_ReasonObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Background_ProcessObjectType(ID: Seq[generated2.Background_ProcessObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Paycheck_Delivery_MethodObjectType(ID: Seq[generated2.Paycheck_Delivery_MethodObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Repository_DocumentObjectType(ID: Seq[generated2.Repository_DocumentObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class National_ID_TypeObjectType(ID: Seq[generated2.National_ID_TypeObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Payslip_Printing_OverrideObjectType(ID: Seq[generated2.Payslip_Printing_OverrideObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Paycheck_DeliveryObjectType(ID: Seq[generated2.Paycheck_DeliveryObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Withholding_Order_TypeObjectType(ID: Seq[generated2.Withholding_Order_TypeObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Application_BatchObjectType(ID: Seq[generated2.Application_BatchObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Unique_IdentifierObjectType(ID: Seq[generated2.Unique_IdentifierObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) extends Put_Withholding_Order_Local_Minimum_Wage_DataTypeOption {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Alternate_Name_UsageObjectType(ID: Seq[generated2.Alternate_Name_UsageObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Workers_Compensation_CodeObjectType(ID: Seq[generated2.Workers_Compensation_CodeObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Calendar_YearObjectType(ID: Seq[generated2.Calendar_YearObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Project_Plan_PhaseObjectType(ID: Seq[generated2.Project_Plan_PhaseObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) extends Payroll_Input_Worktags_DataTypeOption {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class External_Field_and_Parameter_Initialization_ProviderObjectType(ID: Seq[generated2.External_Field_and_Parameter_Initialization_ProviderObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Position_ElementObjectType(ID: Seq[generated2.Position_ElementObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) extends Costing_Allocation_DataTypeOption {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class FundObjectType(ID: Seq[generated2.FundObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Payroll_Reporting_TypeObjectType(ID: Seq[generated2.Payroll_Reporting_TypeObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Tax_LevyObjectType(ID: Seq[generated2.Tax_LevyObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Integration_Document_FieldObjectType(ID: Seq[generated2.Integration_Document_FieldObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Payroll_Reference_NumberObjectType(ID: Seq[generated2.Payroll_Reference_NumberObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Payroll_Payee_PT1ObjectType(ID: Seq[generated2.Payroll_Payee_PT1ObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class PositionObjectType(ID: Seq[generated2.PositionObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Period_Schedule_UsageObjectType(ID: Seq[generated2.Period_Schedule_UsageObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Outsourced_Payment_GroupObjectType(ID: Seq[generated2.Outsourced_Payment_GroupObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Position_RestrictionsObjectType(ID: Seq[generated2.Position_RestrictionsObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) extends Worker_Costing_Allocations_DataTypeOption {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Payroll_Reporting_Code__All_ObjectType(ID: Seq[generated2.Payroll_Reporting_Code__All_ObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Time_Tracking_Eligibility_RuleObjectType(ID: Seq[generated2.Time_Tracking_Eligibility_RuleObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Payroll_Payee_FICA_Exempt_ReasonObjectType(ID: Seq[generated2.Payroll_Payee_FICA_Exempt_ReasonObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class ProgramObjectType(ID: Seq[generated2.ProgramObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class GrantObjectType(ID: Seq[generated2.GrantObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Business_UnitObjectType(ID: Seq[generated2.Business_UnitObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Object_ClassObjectType(ID: Seq[generated2.Object_ClassObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Payroll_Income_CodeObjectType(ID: Seq[generated2.Payroll_Income_CodeObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Payroll_IRS_CountryObjectType(ID: Seq[generated2.Payroll_IRS_CountryObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Payroll_Payee_Tax_Treaty_USAObjectType(ID: Seq[generated2.Payroll_Payee_Tax_Treaty_USAObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Kind_of_Employer_for_Payroll_Tax_FilingObjectType(ID: Seq[generated2.Kind_of_Employer_for_Payroll_Tax_FilingObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Payroll_Income_Code_SubtypeObjectType(ID: Seq[generated2.Payroll_Income_Code_SubtypeObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Payroll_Payee_RPP_or_DPSP_Registration_NumbersObjectType(ID: Seq[generated2.Payroll_Payee_RPP_or_DPSP_Registration_NumbersObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Tax_Address_TypeObjectType(ID: Seq[generated2.Tax_Address_TypeObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Custom_Worktag_06ObjectType(ID: Seq[generated2.Custom_Worktag_06ObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Custom_Worktag_07ObjectType(ID: Seq[generated2.Custom_Worktag_07ObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Custom_Worktag_08ObjectType(ID: Seq[generated2.Custom_Worktag_08ObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Custom_Worktag_09ObjectType(ID: Seq[generated2.Custom_Worktag_09ObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Custom_Worktag_10ObjectType(ID: Seq[generated2.Custom_Worktag_10ObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Custom_Worktag_11ObjectType(ID: Seq[generated2.Custom_Worktag_11ObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Custom_Worktag_12ObjectType(ID: Seq[generated2.Custom_Worktag_12ObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Custom_Worktag_13ObjectType(ID: Seq[generated2.Custom_Worktag_13ObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Custom_Worktag_14ObjectType(ID: Seq[generated2.Custom_Worktag_14ObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Custom_Worktag_15ObjectType(ID: Seq[generated2.Custom_Worktag_15ObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class GiftObjectType(ID: Seq[generated2.GiftObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Address_ReferenceObjectType(ID: Seq[generated2.Address_ReferenceObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Web_Service_Background_Process_RuntimeObjectType(ID: Seq[generated2.Web_Service_Background_Process_RuntimeObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Report_Output_TagObjectType(ID: Seq[generated2.Report_Output_TagObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Successor_EmployerObjectType(ID: Seq[generated2.Successor_EmployerObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Company_Relationship_TypeObjectType(ID: Seq[generated2.Company_Relationship_TypeObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Communication_Usage_Behavior_TenantedObjectType(ID: Seq[generated2.Communication_Usage_Behavior_TenantedObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Time_Unit_for_AnnualizationObjectType(ID: Seq[generated2.Time_Unit_for_AnnualizationObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Single_Legal_EntityObjectType(ID: Seq[generated2.Single_Legal_EntityObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class ARRCOu45AGIRC_Rubric_ValueObjectType(ID: Seq[generated2.ARRCOu45AGIRC_Rubric_ValueObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class NI_CategoryObjectType(ID: Seq[generated2.NI_CategoryObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class EstablishmentObjectType(ID: Seq[generated2.EstablishmentObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Event_Attachment_CategoryObjectType(ID: Seq[generated2.Event_Attachment_CategoryObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Payroll_IDObjectType(ID: Seq[generated2.Payroll_IDObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Country_CityObjectType(ID: Seq[generated2.Country_CityObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Withholding_Order_Override_Completion_CriteriaObjectType(ID: Seq[generated2.Withholding_Order_Override_Completion_CriteriaObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Payroll_Payee_Tax_Report_Type_Delivery_GroupObjectType(ID: Seq[generated2.Payroll_Payee_Tax_Report_Type_Delivery_GroupObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Payroll_Tax_Location_MappingObjectType(ID: Seq[generated2.Payroll_Tax_Location_MappingObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Withholding_Order_Withholding_FrequencyObjectType(ID: Seq[generated2.Withholding_Order_Withholding_FrequencyObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Payroll_Payee_Tax_Location_MappingObjectType(ID: Seq[generated2.Payroll_Payee_Tax_Location_MappingObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Pay_Group_Pay_Run_Group_SelectionObjectType(ID: Seq[generated2.Pay_Group_Pay_Run_Group_SelectionObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Email_ReferenceObjectType(ID: Seq[generated2.Email_ReferenceObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Payslip_Printing_OptionObjectType(ID: Seq[generated2.Payslip_Printing_OptionObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Payroll_Event_CategoryObjectType(ID: Seq[generated2.Payroll_Event_CategoryObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Phone_ReferenceObjectType(ID: Seq[generated2.Phone_ReferenceObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Web_Address_ReferenceObjectType(ID: Seq[generated2.Web_Address_ReferenceObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


/** 
*/
case class Instant_Messenger_ReferenceObjectType(ID: Seq[generated2.Instant_Messenger_ReferenceObjectIDType] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map.empty) {
  lazy val Descriptor = attributes.get("@Descriptor") map { _.as[String]}
}

      


case class Validation_FaultType(Validation_Error: Seq[generated2.Validation_ErrorType] = Nil)
      


case class Processing_FaultType(Detail_Message: Option[String] = None)
      


case class Validation_ErrorType(Message: Option[String] = None,
  Detail_Message: Option[String] = None,
  Xpath: Option[String] = None)
      

